{"ast":null,"code":"import{NOTIFICATION_TYPE,USER_ACCOUNT_TYPE}from'../constants';import{Notification}from'./notification';var log=console.log;export var sendAlertHandler=function sendAlertHandler(ctx,location){log('Alerting users...');var users=ctx.state.userDB;for(var key in users){var user=users[key];if(user.type===USER_ACCOUNT_TYPE&&_wasUserCheckedIn(user,location)){var notif=new Notification(NOTIFICATION_TYPE.alert,'You May Have COVID',\"A covid case has been reported at \".concat(location.name));user.notifications.push(notif);users[key]=user;}}ctx.setState({userDB:users},function(){log('Successfully alerted users '+JSON.stringify(ctx.state.userDB));});};var _wasUserCheckedIn=function _wasUserCheckedIn(user,location){var locs=user.checkInHistory;for(var loc in locs){if(loc.id===location.id){return true;}}return false;};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/adminCheckIn.js"],"names":["NOTIFICATION_TYPE","USER_ACCOUNT_TYPE","Notification","log","console","sendAlertHandler","ctx","location","users","state","userDB","key","user","type","_wasUserCheckedIn","notif","alert","name","notifications","push","setState","JSON","stringify","locs","checkInHistory","loc","id"],"mappings":"AAAA,OAASA,iBAAT,CAA4BC,iBAA5B,KAAqD,cAArD,CACA,OAASC,YAAT,KAA6B,gBAA7B,CAEA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAApB,CAEA,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,GAAD,CAAMC,QAAN,CAAmB,CACjDJ,GAAG,CAAC,mBAAD,CAAH,CACA,GAAMK,CAAAA,KAAK,CAAGF,GAAG,CAACG,KAAJ,CAAUC,MAAxB,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBH,CAAAA,KAAhB,CAAuB,CACrB,GAAII,CAAAA,IAAI,CAAGJ,KAAK,CAACG,GAAD,CAAhB,CACA,GAAIC,IAAI,CAACC,IAAL,GAAcZ,iBAAd,EAAmCa,iBAAiB,CAACF,IAAD,CAAOL,QAAP,CAAxD,CAA0E,CACxE,GAAIQ,CAAAA,KAAK,CAAG,GAAIb,CAAAA,YAAJ,CACVF,iBAAiB,CAACgB,KADR,CAEV,oBAFU,6CAG2BT,QAAQ,CAACU,IAHpC,EAAZ,CAKAL,IAAI,CAACM,aAAL,CAAmBC,IAAnB,CAAwBJ,KAAxB,EACAP,KAAK,CAACG,GAAD,CAAL,CAAaC,IAAb,CACD,CACF,CAEDN,GAAG,CAACc,QAAJ,CACE,CACEV,MAAM,CAAEF,KADV,CADF,CAIE,UAAM,CACJL,GAAG,CAAC,8BAAgCkB,IAAI,CAACC,SAAL,CAAehB,GAAG,CAACG,KAAJ,CAAUC,MAAzB,CAAjC,CAAH,CACD,CANH,EAQD,CAxBM,CA0BP,GAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACF,IAAD,CAAOL,QAAP,CAAoB,CAC5C,GAAMgB,CAAAA,IAAI,CAAGX,IAAI,CAACY,cAAlB,CACA,IAAK,GAAIC,CAAAA,GAAT,GAAgBF,CAAAA,IAAhB,CAAsB,CACpB,GAAIE,GAAG,CAACC,EAAJ,GAAWnB,QAAQ,CAACmB,EAAxB,CAA4B,CAC1B,MAAO,KAAP,CACD,CACF,CACD,MAAO,MAAP,CACD,CARD","sourcesContent":["import { NOTIFICATION_TYPE, USER_ACCOUNT_TYPE } from '../constants';\nimport { Notification } from './notification';\n\nconst log = console.log;\n\nexport const sendAlertHandler = (ctx, location) => {\n  log('Alerting users...');\n  const users = ctx.state.userDB;\n  for (let key in users) {\n    let user = users[key];\n    if (user.type === USER_ACCOUNT_TYPE && _wasUserCheckedIn(user, location)) {\n      let notif = new Notification(\n        NOTIFICATION_TYPE.alert,\n        'You May Have COVID',\n        `A covid case has been reported at ${location.name}`,\n      );\n      user.notifications.push(notif);\n      users[key] = user;\n    }\n  }\n\n  ctx.setState(\n    {\n      userDB: users,\n    },\n    () => {\n      log('Successfully alerted users ' + JSON.stringify(ctx.state.userDB));\n    },\n  );\n};\n\nconst _wasUserCheckedIn = (user, location) => {\n  const locs = user.checkInHistory;\n  for (let loc in locs) {\n    if (loc.id === location.id) {\n      return true;\n    }\n  }\n  return false;\n};\n"]},"metadata":{},"sourceType":"module"}