{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Reminders/ReminderItem/index.js\";\nimport React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport goodIcon from '../../../../assets/good_status.png';\nimport badIcon from '../../../../assets/bad_status.png';\nimport hourglassIcon from '../../../../assets/hourglass.png';\nimport './styles.css';\nimport { REMINDER_STATUS } from '../../../constants';\n\nclass ReminderItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminder: this.props.reminder\n    };\n\n    this.getStatusIcon = status => {\n      const statusMap = {\n        [REMINDER_STATUS.active]: hourglassIcon,\n        [REMINDER_STATUS.completed]: goodIcon,\n        [REMINDER_STATUS.overdue]: badIcon\n      };\n      return statusMap[status];\n    };\n  }\n\n  componentDidMount() {\n    const currTime = new Date().getTime();\n    const reminderTime = new Date(this.state.reminder.time);\n    const time = reminderTime - currTime;\n    const {\n      category,\n      id\n    } = this.state.reminder;\n    this.reminderTimer = setInterval(() => {\n      this.props.setReminderToOverdue(category, id);\n    }, time);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clearing reminder timer...\");\n    clearInterval(this.reminderTimer);\n  }\n\n  render() {\n    const {\n      reminder\n    } = this.props;\n    const options = {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: 'numeric'\n    };\n    const dateTimeValue = new Date(reminder === null || reminder === void 0 ? void 0 : reminder.time);\n    const dateTimeStr = new Intl.DateTimeFormat('en-US', options).format(dateTimeValue);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ReminderItemWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"ReminderStatusIcon\",\n      src: this.getStatusIcon(reminder.status),\n      alt: \"reminder status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ReminderDetailsWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \" \", reminder === null || reminder === void 0 ? void 0 : reminder.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \" \", dateTimeStr, \" \"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 46\n      }\n    }), reminder === null || reminder === void 0 ? void 0 : reminder.note)), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ReminderActionsWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.doneReminderHandler,\n      \"aria-label\": \"done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DoneIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.editReminderHandler,\n      \"aria-label\": \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.props.deleteReminderHandler,\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default ReminderItem;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/ReminderItem/index.js"],"names":["React","Component","IconButton","DeleteIcon","DoneIcon","EditIcon","goodIcon","badIcon","hourglassIcon","REMINDER_STATUS","ReminderItem","state","reminder","props","getStatusIcon","status","statusMap","active","completed","overdue","componentDidMount","currTime","Date","getTime","reminderTime","time","category","id","reminderTimer","setInterval","setReminderToOverdue","componentWillUnmount","console","log","clearInterval","render","options","month","day","year","hour","minute","second","dateTimeValue","dateTimeStr","Intl","DateTimeFormat","format","name","note","doneReminderHandler","editReminderHandler","deleteReminderHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport goodIcon from '../../../../assets/good_status.png';\nimport badIcon from '../../../../assets/bad_status.png';\nimport hourglassIcon from '../../../../assets/hourglass.png'\nimport './styles.css';\nimport { REMINDER_STATUS } from '../../../constants';\n\nclass ReminderItem extends Component {\n\n  state = {\n    reminder: this.props.reminder\n  }\n\n  componentDidMount() {\n    const currTime = new Date().getTime();\n    const reminderTime = new Date(this.state.reminder.time);\n    const time = reminderTime - currTime;\n    const {category, id} = this.state.reminder;\n    this.reminderTimer = setInterval(() => {\n      this.props.setReminderToOverdue(category, id)}, time\n    );\n  }\n\n  componentWillUnmount() {\n    console.log(\"Clearing reminder timer...\");\n    clearInterval(this.reminderTimer);\n  }\n\n  getStatusIcon = (status) => {\n    const statusMap = {\n      [REMINDER_STATUS.active]: hourglassIcon,\n      [REMINDER_STATUS.completed]: goodIcon,\n      [REMINDER_STATUS.overdue]: badIcon\n    }\n\n    return statusMap[status];\n  }\n\n  render() {\n    const { reminder } = this.props;\n    const options = { month: \"long\", day: \"numeric\", year: \"numeric\", hour: \"numeric\", minute: \"numeric\", second: 'numeric'};\n    const dateTimeValue = new Date(reminder?.time)\n    const dateTimeStr = new Intl.DateTimeFormat('en-US', options).format(dateTimeValue);\n    return (\n      <div id=\"ReminderItemWrapper\">\n        <div>\n          <img id=\"ReminderStatusIcon\" src={this.getStatusIcon(reminder.status)} alt=\"reminder status\" />\n        </div>\n        <div id=\"ReminderDetailsWrapper\">\n          <p>\n            <strong> {reminder?.name} </strong> <br />\n            <strong> {dateTimeStr} </strong> <br />\n            {reminder?.note}\n          </p>\n        </div>\n        <div id=\"ReminderActionsWrapper\">\n          <IconButton onClick={this.props.doneReminderHandler} aria-label=\"done\">\n            <DoneIcon />\n          </IconButton>\n          <IconButton onClick={this.props.editReminderHandler} aria-label=\"edit\">\n            <EditIcon />\n          </IconButton>\n          <IconButton onClick={this.props.deleteReminderHandler} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReminderItem;\n"]},"metadata":{},"sourceType":"module"}