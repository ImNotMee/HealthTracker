{"ast":null,"code":"const log = console.log;\nexport const viewPlace = (ctx, locations, location) => {\n  log(`Viewing ${location}...`);\n  log(`Displaying place details ${JSON.stringify(locations[location])}...`);\n  ctx.setState({\n    locationViewed: locations[location]\n  });\n};\nexport const checkInHandler = (ctx, location) => {\n  var _ctx$state$activeUser;\n\n  console.log(\"TEST\" + location.id);\n  const {\n    activeUser,\n    locationsDB\n  } = ctx.state;\n  locationsDB[location.id].currOccupancy += 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  log(`Checking in user...`);\n  activeUser.checkedInLocation = location;\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB\n  });\n  log(`User successfully checked in at to ${(_ctx$state$activeUser = ctx.state.activeUser.checkedInLocation) === null || _ctx$state$activeUser === void 0 ? void 0 : _ctx$state$activeUser.name}`);\n};\n\nconst _isAvaliable = location => {\n  return location.maxOccupancy > location.currOccupancy;\n};\n\nexport const isCheckInValid = (ctx, location) => {\n  var _ctx$state$user, _ctx$state$user2, _ctx$state$user2$chec;\n\n  return (((_ctx$state$user = ctx.state.user) === null || _ctx$state$user === void 0 ? void 0 : _ctx$state$user.checkedInLocation) !== null || ctx.state.selectedLocation !== undefined) && ((_ctx$state$user2 = ctx.state.user) === null || _ctx$state$user2 === void 0 ? void 0 : (_ctx$state$user2$chec = _ctx$state$user2.checkedInLocation) === null || _ctx$state$user2$chec === void 0 ? void 0 : _ctx$state$user2$chec.id) !== (location === null || location === void 0 ? void 0 : location.id);\n};\nexport const checkout = (ctx, location) => {};\nexport class Location {\n  constructor(name, maxOccupancy, currOccupancy, address, description, image) {\n    this.name = name;\n    this.address = address;\n    this.country = 'Canada';\n    this.maxOccupancy = maxOccupancy;\n    this.currOccupancy = currOccupancy;\n    this.description = description;\n    this.imageUrl = image;\n  }\n\n}","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/checkIn.js"],"names":["log","console","viewPlace","ctx","locations","location","JSON","stringify","setState","locationViewed","checkInHandler","id","activeUser","locationsDB","state","currOccupancy","isAvaliable","_isAvaliable","checkedInLocation","name","maxOccupancy","isCheckInValid","user","selectedLocation","undefined","checkout","Location","constructor","address","description","image","country","imageUrl"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,SAAS,GAAG,CAACC,GAAD,EAAMC,SAAN,EAAiBC,QAAjB,KAA8B;AACnDL,EAAAA,GAAG,CAAE,WAAUK,QAAS,KAArB,CAAH;AACAL,EAAAA,GAAG,CAAE,4BAA2BM,IAAI,CAACC,SAAL,CAAeH,SAAS,CAACC,QAAD,CAAxB,CAAoC,KAAjE,CAAH;AACAF,EAAAA,GAAG,CAACK,QAAJ,CAAa;AACTC,IAAAA,cAAc,EAAEL,SAAS,CAACC,QAAD;AADhB,GAAb;AAGH,CANM;AAQP,OAAO,MAAMK,cAAc,GAAG,CAACP,GAAD,EAAME,QAAN,KAAmB;AAAA;;AAC7CJ,EAAAA,OAAO,CAACD,GAAR,CAAY,SAASK,QAAQ,CAACM,EAA9B;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA+BV,GAAG,CAACW,KAAzC;AACAD,EAAAA,WAAW,CAACR,QAAQ,CAACM,EAAV,CAAX,CAAyBI,aAAzB,IAA0C,CAA1C;AACAF,EAAAA,WAAW,CAACR,QAAQ,CAACM,EAAV,CAAX,CAAyBK,WAAzB,GAAuCC,YAAY,CAACJ,WAAW,CAACR,QAAQ,CAACM,EAAV,CAAZ,CAAnD;AAEAX,EAAAA,GAAG,CAAE,qBAAF,CAAH;AACAY,EAAAA,UAAU,CAACM,iBAAX,GAA+Bb,QAA/B;AACAF,EAAAA,GAAG,CAACK,QAAJ,CAAa;AACTI,IAAAA,UAAU,EAAEA,UADH;AAETC,IAAAA,WAAW,EAAEA;AAFJ,GAAb;AAIAb,EAAAA,GAAG,CAAE,sCAAD,yBAAsCG,GAAG,CAACW,KAAJ,CAAUF,UAAV,CAAqBM,iBAA3D,0DAAsC,sBAAwCC,IAAK,EAApF,CAAH;AACH,CAbM;;AAeP,MAAMF,YAAY,GAAIZ,QAAD,IAAc;AAC/B,SAAOA,QAAQ,CAACe,YAAT,GAAwBf,QAAQ,CAACU,aAAxC;AACH,CAFD;;AAIA,OAAO,MAAMM,cAAc,GAAG,CAAClB,GAAD,EAAME,QAAN,KAAmB;AAAA;;AAE7C,SAAQ,CAAC,oBAAAF,GAAG,CAACW,KAAJ,CAAUQ,IAAV,oEAAgBJ,iBAAhB,MAAsC,IAAtC,IAA8Cf,GAAG,CAACW,KAAJ,CAAUS,gBAAV,KAA+BC,SAA9E,KACT,qBAAArB,GAAG,CAACW,KAAJ,CAAUQ,IAAV,+FAAgBJ,iBAAhB,gFAAmCP,EAAnC,OAA0CN,QAA1C,aAA0CA,QAA1C,uBAA0CA,QAAQ,CAAEM,EAApD,CADC;AAEH,CAJM;AAMP,OAAO,MAAMc,QAAQ,GAAG,CAACtB,GAAD,EAAME,QAAN,KAAmB,CAE1C,CAFM;AAIP,OAAO,MAAMqB,QAAN,CAAe;AACpBC,EAAAA,WAAW,CAACR,IAAD,EAAOC,YAAP,EAAqBL,aAArB,EAAoCa,OAApC,EAA6CC,WAA7C,EAA0DC,KAA1D,EAAiE;AAC1E,SAAKX,IAAL,GAAYA,IAAZ;AACA,SAAKS,OAAL,GAAeA,OAAf;AACA,SAAKG,OAAL,GAAe,QAAf;AACA,SAAKX,YAAL,GAAoBA,YAApB;AACA,SAAKL,aAAL,GAAqBA,aAArB;AACA,SAAKc,WAAL,GAAmBA,WAAnB;AACA,SAAKG,QAAL,GAAgBF,KAAhB;AACD;;AATmB","sourcesContent":["const log = console.log;\n\nexport const viewPlace = (ctx, locations, location) => {\n    log(`Viewing ${location}...`);\n    log(`Displaying place details ${JSON.stringify(locations[location])}...`);\n    ctx.setState({\n        locationViewed: locations[location]\n    });\n}\n\nexport const checkInHandler = (ctx, location) => {\n    console.log(\"TEST\" + location.id)\n    const { activeUser, locationsDB } =  ctx.state;\n    locationsDB[location.id].currOccupancy += 1;\n    locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id])\n\n    log(`Checking in user...`);\n    activeUser.checkedInLocation = location\n    ctx.setState({\n        activeUser: activeUser,\n        locationsDB: locationsDB\n    });\n    log(`User successfully checked in at to ${ctx.state.activeUser.checkedInLocation?.name}`);\n}\n\nconst _isAvaliable = (location) => {\n    return location.maxOccupancy > location.currOccupancy;\n}\n\nexport const isCheckInValid = (ctx, location) => {\n    \n    return ((ctx.state.user?.checkedInLocation !== null || ctx.state.selectedLocation !== undefined) &&\n\t\t\tctx.state.user?.checkedInLocation?.id !== location?.id);\n}\n\nexport const checkout = (ctx, location) => {\n    \n}\n\nexport class Location {\n  constructor(name, maxOccupancy, currOccupancy, address, description, image) {\n    this.name = name;\n    this.address = address;\n    this.country = 'Canada';\n    this.maxOccupancy = maxOccupancy;\n    this.currOccupancy = currOccupancy;\n    this.description = description;\n    this.imageUrl = image;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}