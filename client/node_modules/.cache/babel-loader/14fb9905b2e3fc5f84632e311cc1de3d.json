{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/AddLocation/index.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { onInputChangeHandler } from '../../actions/utils';\nimport './styles.css';\n\nclass AddLocation extends Component {\n  constructor(...args) {\n    var _this$props$match, _this$props$match2, _this$props$match3, _this$props$match4, _this$props$match5;\n\n    super(...args);\n    this.state = {\n      locationName: (_this$props$match = this.props.match) === null || _this$props$match === void 0 ? void 0 : _this$props$match.params.name,\n      address: (_this$props$match2 = this.props.match) === null || _this$props$match2 === void 0 ? void 0 : _this$props$match2.params.addr,\n      imageUrl: decodeURIComponent((_this$props$match3 = this.props.match) === null || _this$props$match3 === void 0 ? void 0 : _this$props$match3.params.img),\n      maxOccupancy: (_this$props$match4 = this.props.match) === null || _this$props$match4 === void 0 ? void 0 : _this$props$match4.params.maxOcc,\n      description: (_this$props$match5 = this.props.match) === null || _this$props$match5 === void 0 ? void 0 : _this$props$match5.params.desc,\n      isNameValid: true,\n      isAddressValid: true,\n      isImageUrlValid: true,\n      isMaxOccValid: true,\n      isDescValid: true,\n      newLocationAdded: false\n    };\n\n    this.goToAlertSystem = () => {\n      if (this.state.newLocationAdded) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/alert-system\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    this.displayErrorMsg = () => {\n      const {\n        isNameValid,\n        isAddressValid,\n        isImageUrlValid,\n        isMaxOccValid,\n        isDescValid\n      } = this.state;\n\n      if (isNameValid && isAddressValid && isImageUrlValid && isMaxOccValid && isDescValid) {\n        return '';\n      } else {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: \"errorMsg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }\n        }, \" Input fields in red are missing\");\n      }\n    };\n  }\n\n  render() {\n    var _this$props$match6;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddLocationWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, this.goToAlertSystem(), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddLocationWindow\",\n      className: \"windowWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \" Add Location \"), this.displayErrorMsg(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locationInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \" Location Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.isNameValid ? '' : 'invalidInput'}`,\n      type: \"text\",\n      id: \"LocationName\",\n      name: \"locationName\",\n      placeholder: \"Location name\",\n      value: this.state.locationName === undefined ? '' : this.state.locationName,\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locationInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \" Address: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.isAddressValid ? '' : 'invalidInput'}`,\n      type: \"text\",\n      id: \"LocationAddress\",\n      name: \"address\",\n      placeholder: \"Address\",\n      value: this.state.address === undefined ? '' : this.state.address,\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locationInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \" Image Url: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.isImageUrlValid ? '' : 'invalidInput'}`,\n      type: \"url\",\n      id: \"LocationImgUrl\",\n      name: \"imageUrl\",\n      placeholder: \"Image Url\",\n      value: this.state.imageUrl === undefined || this.state.imageUrl === 'undefined' ? '' : this.state.imageUrl,\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locationInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \" Max Occupancy: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${this.state.isMaxOccValid ? '' : 'invalidInput'}`,\n      type: \"number\",\n      id: \"LocationMaxOcc\",\n      name: \"maxOccupancy\",\n      min: \"1\",\n      max: \"5000\",\n      placeholder: \"Max occupancy\",\n      value: this.state.maxOccupancy === undefined ? '' : this.state.maxOccupancy,\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locationInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \" Description: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"LocationDesc\",\n      className: `input ${this.state.isDescValid ? '' : 'invalidInput'}`,\n      name: \"description\",\n      maxLength: \"400\",\n      placeholder: \"Location description\",\n      value: this.state.description === undefined ? '' : this.state.description,\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"charCount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, this.state.description !== undefined ? this.state['description'].length : '0', \"/400\")), ((_this$props$match6 = this.props.match) === null || _this$props$match6 === void 0 ? void 0 : _this$props$match6.params.name) !== undefined ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      onClick: () => {\n        this.props.editLocationHandler(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Edit\") : /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      onClick: () => {\n        this.props.addLocationHandler(this);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Add\")));\n  }\n\n}\n\nexport default AddLocation;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/AddLocation/index.js"],"names":["React","Component","Redirect","onInputChangeHandler","AddLocation","state","locationName","props","match","params","name","address","addr","imageUrl","decodeURIComponent","img","maxOccupancy","maxOcc","description","desc","isNameValid","isAddressValid","isImageUrlValid","isMaxOccValid","isDescValid","newLocationAdded","goToAlertSystem","displayErrorMsg","render","undefined","event","length","editLocationHandler","addLocationHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { onInputChangeHandler } from '../../actions/utils';\nimport './styles.css';\n\nclass AddLocation extends Component {\n  state = {\n    locationName: this.props.match?.params.name,\n    address: this.props.match?.params.addr,\n    imageUrl: decodeURIComponent(this.props.match?.params.img),\n    maxOccupancy: this.props.match?.params.maxOcc,\n    description: this.props.match?.params.desc,\n    isNameValid: true,\n    isAddressValid: true,\n    isImageUrlValid: true,\n    isMaxOccValid: true,\n    isDescValid: true,\n    newLocationAdded: false,\n  };\n\n  goToAlertSystem = () => {\n    if (this.state.newLocationAdded) {\n      return <Redirect to=\"/alert-system\" />;\n    }\n  };\n\n  displayErrorMsg = () => {\n    const { isNameValid, isAddressValid, isImageUrlValid, isMaxOccValid, isDescValid } = this.state;\n    if (isNameValid && isAddressValid && isImageUrlValid && isMaxOccValid && isDescValid) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Input fields in red are missing</span>;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"AddLocationWrapper\">\n        {this.goToAlertSystem()}\n        <div id=\"AddLocationWindow\" className=\"windowWrapper\">\n          <h1> Add Location </h1>\n          {this.displayErrorMsg()}\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Location Name: </span>\n            <input\n              className={`input ${this.state.isNameValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"LocationName\"\n              name=\"locationName\"\n              placeholder=\"Location name\"\n              value={this.state.locationName === undefined ? '' : this.state.locationName}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Address: </span>\n            <input\n              className={`input ${this.state.isAddressValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"LocationAddress\"\n              name=\"address\"\n              placeholder=\"Address\"\n              value={this.state.address === undefined ? '' : this.state.address}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Image Url: </span>\n            <input\n              className={`input ${this.state.isImageUrlValid ? '' : 'invalidInput'}`}\n              type=\"url\"\n              id=\"LocationImgUrl\"\n              name=\"imageUrl\"\n              placeholder=\"Image Url\"\n              value={\n                this.state.imageUrl === undefined || this.state.imageUrl === 'undefined'\n                  ? ''\n                  : this.state.imageUrl\n              }\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Max Occupancy: </span>\n            <input\n              className={`input ${this.state.isMaxOccValid ? '' : 'invalidInput'}`}\n              type=\"number\"\n              id=\"LocationMaxOcc\"\n              name=\"maxOccupancy\"\n              min=\"1\"\n              max=\"5000\"\n              placeholder=\"Max occupancy\"\n              value={this.state.maxOccupancy === undefined ? '' : this.state.maxOccupancy}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Description: </span>\n            <textarea\n              id=\"LocationDesc\"\n              className={`input ${this.state.isDescValid ? '' : 'invalidInput'}`}\n              name=\"description\"\n              maxLength=\"400\"\n              placeholder=\"Location description\"\n              value={this.state.description === undefined ? '' : this.state.description}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n            <br />\n            <span className=\"charCount\">\n              {this.state.description !== undefined ? this.state['description'].length : '0'}/400\n            </span>\n          </div>\n          {this.props.match?.params.name !== undefined ? (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.editLocationHandler(this);\n              }}\n            >\n              Edit\n            </button>\n          ) : (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.addLocationHandler(this);\n              }}\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddLocation;\n"]},"metadata":{},"sourceType":"module"}