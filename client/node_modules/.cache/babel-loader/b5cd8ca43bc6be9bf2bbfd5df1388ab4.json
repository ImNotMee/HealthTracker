{"ast":null,"code":"const log = console.log;\nexport const viewPlace = (ctx, locations, location) => {\n  log(`Viewing ${location}...`);\n  log('Displaying place details', locations[location], '...');\n  ctx.setState({\n    locationViewed: locations[location]\n  });\n};\nexport const checkInHandler = (ctx, location) => {\n  var _ctx$state$activeUser;\n\n  log(`Checking in user...`);\n  const {\n    activeUser,\n    locationsDB\n  } = ctx.state;\n  locationsDB[location.id].currOccupancy += 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = location;\n  activeUser.checkInHistory.push({\n    location: location,\n    time: new Date()\n  });\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB\n  });\n  log(`User successfully checked in at ${(_ctx$state$activeUser = ctx.state.activeUser.checkedInLocation) === null || _ctx$state$activeUser === void 0 ? void 0 : _ctx$state$activeUser.name}`);\n};\n\nconst _isAvaliable = location => {\n  return location.maxOccupancy > location.currOccupancy;\n};\n\nexport const isCheckInValid = (ctx, location) => {\n  var _ctx$state$user, _ctx$state$user2, _ctx$state$user2$chec;\n\n  return (((_ctx$state$user = ctx.state.user) === null || _ctx$state$user === void 0 ? void 0 : _ctx$state$user.checkedInLocation) !== null || ctx.state.selectedLocation !== undefined) && ((_ctx$state$user2 = ctx.state.user) === null || _ctx$state$user2 === void 0 ? void 0 : (_ctx$state$user2$chec = _ctx$state$user2.checkedInLocation) === null || _ctx$state$user2$chec === void 0 ? void 0 : _ctx$state$user2$chec.id) !== (location === null || location === void 0 ? void 0 : location.id);\n};\nexport const checkoutHandler = ctx => {\n  log(`Checking-out user...`);\n  const {\n    activeUser,\n    locationsDB\n  } = ctx.state;\n  const location = activeUser.checkedInLocation;\n  locationsDB[location.id].currOccupancy -= 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = undefined;\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB\n  });\n  log(`User ${ctx.state.activeUser.checkedInLocation === undefined ? 'successfully' : 'unsuccessfully'} checked-out from ${location === null || location === void 0 ? void 0 : location.name}`);\n};\nexport class AppLocation {\n  constructor(name, maxOccupancy, address, description, image) {\n    this.id = name;\n    this.name = name;\n    this.isAvaliable = true;\n    this.address = address;\n    this.country = 'Canada';\n    this.maxOccupancy = maxOccupancy;\n    this.currOccupancy = 0;\n    this.description = description;\n    this.imageUrl = image;\n  }\n\n}","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/checkIn.js"],"names":["log","console","viewPlace","ctx","locations","location","setState","locationViewed","checkInHandler","activeUser","locationsDB","state","id","currOccupancy","isAvaliable","_isAvaliable","checkedInLocation","checkInHistory","push","time","Date","name","maxOccupancy","isCheckInValid","user","selectedLocation","undefined","checkoutHandler","AppLocation","constructor","address","description","image","country","imageUrl"],"mappings":"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","sourcesContent":["const log = console.log;\n\nexport const viewPlace = (ctx, locations, location) => {\n  log(`Viewing ${location}...`);\n  log('Displaying place details', locations[location], '...');\n  ctx.setState({\n    locationViewed: locations[location],\n  });\n};\n\nexport const checkInHandler = (ctx, location) => {\n  log(`Checking in user...`);\n  const { activeUser, locationsDB } = ctx.state;\n  locationsDB[location.id].currOccupancy += 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = location;\n  activeUser.checkInHistory.push({ location: location, time: new Date() });\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB,\n  });\n  log(`User successfully checked in at ${ctx.state.activeUser.checkedInLocation?.name}`);\n};\n\nconst _isAvaliable = (location) => {\n  return location.maxOccupancy > location.currOccupancy;\n};\n\nexport const isCheckInValid = (ctx, location) => {\n  return (\n    (ctx.state.user?.checkedInLocation !== null || ctx.state.selectedLocation !== undefined) &&\n    ctx.state.user?.checkedInLocation?.id !== location?.id\n  );\n};\n\nexport const checkoutHandler = (ctx) => {\n  log(`Checking-out user...`);\n  const { activeUser, locationsDB } = ctx.state;\n  const location = activeUser.checkedInLocation;\n  locationsDB[location.id].currOccupancy -= 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = undefined;\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB,\n  });\n  log(\n    `User ${\n      ctx.state.activeUser.checkedInLocation === undefined ? 'successfully' : 'unsuccessfully'\n    } checked-out from ${location?.name}`,\n  );\n};\n\nexport class AppLocation {\n  constructor(name, maxOccupancy, address, description, image) {\n    this.id = name;\n    this.name = name;\n    this.isAvaliable = true;\n    this.address = address;\n    this.country = 'Canada';\n    this.maxOccupancy = maxOccupancy;\n    this.currOccupancy = 0;\n    this.description = description;\n    this.imageUrl = image;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}