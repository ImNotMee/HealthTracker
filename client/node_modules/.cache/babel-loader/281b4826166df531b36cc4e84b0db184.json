{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";var log=console.log;export var addUser=function addUser(ctx,newUser){log('Adding user...');var userList=ctx.state.users;var loginUserIdMap=ctx.state.loginUserIdMap;userList.push(newUser);loginUserIdMap[newUser.getHash()]=userList.length-1;console.log(userList);ctx.setState({users:userList,loginUserIdMap:loginUserIdMap});};export var signUpUser=function signUpUser(signUpCtx){log('Creating user...');var inputs=signUpCtx.state;var newUser=new User(inputs.first,inputs.last,inputs.email,inputs.password,inputs.accountType,inputs.sex);signUpCtx.props.addUserHandler(newUser);log('User successfully added');_clearSignUpInputs(signUpCtx);};export var User=function User(firstName,lastName,email,password,accountType,sex){var _this=this;_classCallCheck(this,User);this.getHash=function(){return _this.hash;};this.firstName=firstName;this.lastName=lastName;this.email=email;this.password=password;this.accountType=accountType;this.sex=sex;this.hash=this.email+this.password;};var _clearSignUpInputs=function _clearSignUpInputs(ctx){ctx.setState({first:'',last:'',email:'',password:'',sex:'',accountType:''});};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/signUp.js"],"names":["log","console","addUser","ctx","newUser","userList","state","users","loginUserIdMap","push","getHash","length","setState","signUpUser","signUpCtx","inputs","User","first","last","email","password","accountType","sex","props","addUserHandler","_clearSignUpInputs","firstName","lastName","hash"],"mappings":"iJAAA,GAAMA,CAAAA,GAAG,CAAGC,OAAO,CAACD,GAApB,CAEA,MAAO,IAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,GAAD,CAAMC,OAAN,CAAkB,CACvCJ,GAAG,CAAC,gBAAD,CAAH,CACA,GAAMK,CAAAA,QAAQ,CAAGF,GAAG,CAACG,KAAJ,CAAUC,KAA3B,CACA,GAAMC,CAAAA,cAAc,CAAGL,GAAG,CAACG,KAAJ,CAAUE,cAAjC,CAEAH,QAAQ,CAACI,IAAT,CAAcL,OAAd,EACAI,cAAc,CAACJ,OAAO,CAACM,OAAR,EAAD,CAAd,CAAoCL,QAAQ,CAACM,MAAT,CAAkB,CAAtD,CACAV,OAAO,CAACD,GAAR,CAAYK,QAAZ,EACAF,GAAG,CAACS,QAAJ,CAAa,CACXL,KAAK,CAAEF,QADI,CAEXG,cAAc,CAAEA,cAFL,CAAb,EAID,CAZM,CAcP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,SAAD,CAAe,CACvCd,GAAG,CAAC,kBAAD,CAAH,CACA,GAAMe,CAAAA,MAAM,CAAGD,SAAS,CAACR,KAAzB,CACA,GAAMF,CAAAA,OAAO,CAAG,GAAIY,CAAAA,IAAJ,CACdD,MAAM,CAACE,KADO,CAEdF,MAAM,CAACG,IAFO,CAGdH,MAAM,CAACI,KAHO,CAIdJ,MAAM,CAACK,QAJO,CAKdL,MAAM,CAACM,WALO,CAMdN,MAAM,CAACO,GANO,CAAhB,CAQAR,SAAS,CAACS,KAAV,CAAgBC,cAAhB,CAA+BpB,OAA/B,EACAJ,GAAG,CAAC,yBAAD,CAAH,CACAyB,kBAAkB,CAACX,SAAD,CAAlB,CACD,CAdM,CAgBP,UAAaE,CAAAA,IAAb,CACE,cAAYU,SAAZ,CAAuBC,QAAvB,CAAiCR,KAAjC,CAAwCC,QAAxC,CAAkDC,WAAlD,CAA+DC,GAA/D,CAAoE,gDAUpEZ,OAVoE,CAU1D,UAAM,CACd,MAAO,CAAA,KAAI,CAACkB,IAAZ,CACD,CAZmE,CAClE,KAAKF,SAAL,CAAiBA,SAAjB,CACA,KAAKC,QAAL,CAAgBA,QAAhB,CACA,KAAKR,KAAL,CAAaA,KAAb,CACA,KAAKC,QAAL,CAAgBA,QAAhB,CACA,KAAKC,WAAL,CAAmBA,WAAnB,CACA,KAAKC,GAAL,CAAWA,GAAX,CACA,KAAKM,IAAL,CAAY,KAAKT,KAAL,CAAa,KAAKC,QAA9B,CACD,CATH,CAgBA,GAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACtB,GAAD,CAAS,CAClCA,GAAG,CAACS,QAAJ,CAAa,CACXK,KAAK,CAAE,EADI,CAEXC,IAAI,CAAE,EAFK,CAGXC,KAAK,CAAE,EAHI,CAIXC,QAAQ,CAAE,EAJC,CAKXE,GAAG,CAAE,EALM,CAMXD,WAAW,CAAE,EANF,CAAb,EAQD,CATD","sourcesContent":["const log = console.log;\n\nexport const addUser = (ctx, newUser) => {\n  log('Adding user...');\n  const userList = ctx.state.users;\n  const loginUserIdMap = ctx.state.loginUserIdMap;\n\n  userList.push(newUser);\n  loginUserIdMap[newUser.getHash()] = userList.length - 1;\n  console.log(userList);\n  ctx.setState({\n    users: userList,\n    loginUserIdMap: loginUserIdMap,\n  });\n};\n\nexport const signUpUser = (signUpCtx) => {\n  log('Creating user...');\n  const inputs = signUpCtx.state;\n  const newUser = new User(\n    inputs.first,\n    inputs.last,\n    inputs.email,\n    inputs.password,\n    inputs.accountType,\n    inputs.sex,\n  );\n  signUpCtx.props.addUserHandler(newUser);\n  log('User successfully added');\n  _clearSignUpInputs(signUpCtx);\n};\n\nexport class User {\n  constructor(firstName, lastName, email, password, accountType, sex) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.password = password;\n    this.accountType = accountType;\n    this.sex = sex;\n    this.hash = this.email + this.password;\n  }\n\n  getHash = () => {\n    return this.hash;\n  };\n}\n\nconst _clearSignUpInputs = (ctx) => {\n  ctx.setState({\n    first: '',\n    last: '',\n    email: '',\n    password: '',\n    sex: '',\n    accountType: '',\n  });\n};\n"]},"metadata":{},"sourceType":"module"}