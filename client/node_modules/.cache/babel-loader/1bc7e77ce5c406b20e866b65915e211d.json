{"ast":null,"code":"const log = console.log;\nexport const avgWeight = allUser => {\n  let weekAvg = [];\n  let count = 0;\n\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.weight[i];\n        count = count + 1;\n      }\n    }\n\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n\n    count = 0;\n  }\n\n  log('average weight loaded');\n  return weekAvg;\n};\nexport const avgStress = allUser => {\n  let weekAvg = [];\n  let count = 0;\n\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.stress[i];\n        count = count + 1;\n      }\n    }\n\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n\n    count = 0;\n  }\n\n  log('average stress  loaded');\n  return weekAvg;\n};\nexport const avgSleep = allUser => {\n  let weekAvg = [];\n  let count = 0;\n\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.sleep[i];\n        count = count + 1;\n      }\n    }\n\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n\n    count = 0;\n  }\n\n  log('average sleep loaded');\n  return weekAvg;\n};\nexport const avgCalories = allUser => {\n  let weekAvg = [];\n  let count = 0;\n\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.calories[i];\n        count = count + 1;\n      }\n    }\n\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n\n    count = 0;\n  }\n\n  log('average calories loaded');\n  return weekAvg;\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/trends.js"],"names":["log","console","avgWeight","allUser","weekAvg","count","i","sum","x","type","trends","weight","push","avgStress","stress","avgSleep","sleep","avgCalories","calories"],"mappings":"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","sourcesContent":["const log = console.log;\n\nexport const avgWeight = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.weight[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average weight loaded');\n  return weekAvg;\n};\n\nexport const avgStress = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.stress[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average stress  loaded');\n  return weekAvg;\n};\n\nexport const avgSleep = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.sleep[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average sleep loaded');\n  return weekAvg;\n};\n\nexport const avgCalories = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.calories[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average calories loaded');\n  return weekAvg;\n};\n"]},"metadata":{},"sourceType":"module"}