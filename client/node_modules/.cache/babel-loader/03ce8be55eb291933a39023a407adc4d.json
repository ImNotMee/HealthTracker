{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/LogPages/LogWeight/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser,\n      weight: 0,\n      height: 0,\n      BMI: 0\n    };\n  }\n\n  metricInput() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"weightLog\",\n      placeholder: \"Enter Weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"kg(kilograms)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"heightLog\",\n      placeholder: \"Enter Height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"m(meters)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"BMI = Weight(kg) / [height(m)]^2\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Underweight: ~18.5\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, \"Healthy weight: 18.5 ~ 24.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Overweight: 25 ~ 29.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Obese: 30 ~ 39.9\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      id: \"logButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n  standardInput() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"weightLog\",\n      placeholder: \"Enter Weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \"lbs(pounds)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"heightLog\",\n      placeholder: \"Enter Height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"in(inches)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \"BMI = 703 * Weight(lbs) / [height(in)]^2\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Underweight: ~18.5\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Healthy weight: 18.5 ~ 24.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Overweight: 25 ~ 29.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Obese: 30 ~ 39.9\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      id: \"logButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"LogWeightWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logWeightView left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/overview\",\n      id: \"closeButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"xButton\",\n      src: \"https://image.flaticon.com/icons/svg/565/565313.svg\",\n      alt: \"icon\",\n      s: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"weightHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"icon\",\n      src: \"https://image.flaticon.com/icons/svg/3023/3023711.svg\",\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), \"Body Mass Index\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TabList, {\n      id: \"weightTab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      label: \"Metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, this.metricInput()), /*#__PURE__*/React.createElement(\"div\", {\n      label: \"Standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, this.standardInput())))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logWeightView right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TipBox, {\n      label: \"physical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default LogWeight;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/LogPages/LogWeight/index.jsx"],"names":["React","Component","TabList","NavLink","TipBox","LogWeight","state","user","props","activeUser","weight","height","BMI","metricInput","standardInput","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACNC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,UADX;AAENC,MAAAA,MAAM,EAAE,CAFF;AAGNC,MAAAA,MAAM,EAAE,CAHF;AAINC,MAAAA,GAAG,EAAE;AAJC,KADwB;AAAA;;AAQhCC,EAAAA,WAAW,GAAG;AACZ,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CANF,eAYE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,EAAE,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADF,CADF;AAoBD;;AAEDC,EAAAA,aAAa,GAAG;AACd,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,WAAW,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,CANF,eAYE;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,EAAE,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,CADF,CADF;AAoBD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAwB,MAAA,EAAE,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,GAAG,EAAC,qDAFN;AAGE,MAAA,GAAG,EAAC,MAHN;AAIE,MAAA,CAAC,MAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eASE;AAAI,MAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,MADL;AAEE,MAAA,GAAG,EAAC,uDAFN;AAGE,MAAA,GAAG,EAAC,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,oBATF,eAiBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqB,KAAKF,WAAL,EAArB,CADF,eAEE;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKC,aAAL,EAAvB,CAFF,CADF,CAjBF,CADF,eA0BE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1BF,CADF;AAgCD;;AAtF+B;;AAyFlC,eAAeT,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\n\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  state = {\n    user: this.props.activeUser,\n    weight: 0,\n    height: 0,\n    BMI: 0,\n  };\n\n  metricInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">kg(kilograms)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">m(meters)</label>\n          <p>BMI = Weight(kg) / [height(m)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n\n  standardInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">lbs(pounds)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">in(inches)</label>\n          <p>BMI = 703 * Weight(lbs) / [height(in)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n  render() {\n    return (\n      <div id=\"LogWeightWrapper\">\n        <div className=\"logWeightView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n              s\n            ></img>\n          </NavLink>\n          <h1 id=\"weightHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3023/3023711.svg\"\n              alt=\"icon\"\n            ></img>\n            Body Mass Index\n          </h1>\n          <div className=\"logbox\">\n            <TabList id=\"weightTab\">\n              <div label=\"Metric\">{this.metricInput()}</div>\n              <div label=\"Standard\">{this.standardInput()}</div>\n            </TabList>\n          </div>\n        </div>\n\n        <div className=\"logWeightView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogWeight;\n"]},"metadata":{},"sourceType":"module"}