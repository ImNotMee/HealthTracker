{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import{REMINDER_STATUS}from'../constants';var log=console.log;export var addReminderHandler=function addReminderHandler(appCtx,reminderCtx){log('Adding new reminder...');var isInputValid=_reminderInputValidate(reminderCtx);log('Input validity status: '+isInputValid);if(isInputValid){_addReminder(appCtx,reminderCtx);reminderCtx.setState({newReminderAdded:true});log(\"Successfully added new reminder '\".concat(reminderCtx.state.reminderName,\"'\"));}else{log('Unsuccessfully in adding reminder');}};var _addReminder=function _addReminder(appCtx,reminderCtx){var user=appCtx.state.activeUser;var _reminderCtx$state=reminderCtx.state,category=_reminderCtx$state.category,subCategory=_reminderCtx$state.subCategory,reminderName=_reminderCtx$state.reminderName,reminderTime=_reminderCtx$state.reminderTime,reminderNote=_reminderCtx$state.reminderNote;var newReminder=new Reminder(category,subCategory,reminderName,reminderTime,reminderNote);user.reminders[reminderCtx.state.category].push(newReminder);appCtx.setState({activeUser:user});};var _reminderInputValidate=function _reminderInputValidate(reminderCtx){log('Validating reminder inputs...');var isCategoryValid=_isInvalid(reminderCtx.state.category);var isSubCategoryValid=_isInvalid(reminderCtx.state.subCategory);var isNameValid=_isInvalid(reminderCtx.state.reminderName);var isDateTimeValid=_isInvalid(reminderCtx.state.reminderTime);reminderCtx.setState({isCategoryValid:isCategoryValid,isSubCategoryValid:isSubCategoryValid,isNameValid:isNameValid,isDateTimeValid:isDateTimeValid});return isCategoryValid&&isSubCategoryValid&&isNameValid&&isDateTimeValid;};var _isInvalid=function _isInvalid(value){return value!==null&&value!==undefined&&value!==''&&value!=='select';};export var editReminderHandler=function editReminderHandler(appCtx,reminderCtx,category,id){log('Editing reminder...');var isInputValid=_reminderInputValidate(reminderCtx);if(isInputValid){_editReminder(appCtx,reminderCtx,category,id);reminderCtx.setState({newReminderAdded:true});log('Successfully editted reminder');}else{log('Unsuccessfully editing reminder');}};var _editReminder=function _editReminder(appCtx,reminderCtx,category,id){var user=appCtx.state.activeUser;var index=_getReminderIndex(user.reminders[category],id);var reminder=user.reminders[category][index];reminder.category=reminderCtx.state.category;reminder.subCategory=reminderCtx.state.subCategory;reminder.name=reminderCtx.state.reminderName;reminder.time=reminderCtx.state.reminderTime;reminder.note=reminderCtx.state.reminderNote;user.reminders[category][index]=reminder;appCtx.setState({activeUser:user});};export var completeReminderHandler=function completeReminderHandler(ctx,category,id,timeout){log('Updating status of reminder to completed...');setReminderStatus(ctx,category,id,REMINDER_STATUS.completed);clearTimeout(timeout);log('Successfully completed reminder');};export var deleteReminderHandler=function deleteReminderHandler(ctx,category,id,timeout){log('Removing reminder...');var user=ctx.state.activeUser;var index=_getReminderIndex(user.reminders[category],id);var reminders=user.reminders[category];reminders.splice(index,1);user.reminders[category]=reminders;ctx.setState({activeUser:user});clearTimeout(timeout);log('Successfully removed reminder');};export var setReminderStatus=function setReminderStatus(ctx,category,id,status){var user=ctx.state.activeUser;var index=_getReminderIndex(user.reminders[category],id);var reminder=user.reminders[category][index];reminder.status=status;user.reminders[category][id]=reminder;ctx.setState({activeUser:user});};var _getReminderIndex=function _getReminderIndex(list,id){var i;for(i=0;i<list.length;i++){if(list[i].id===id){return i;}}};export var Reminder=function Reminder(category,subCategory,name,time,note){_classCallCheck(this,Reminder);this._generateId=function(){return'r'+Math.random().toString(36).substr(3,8);};this.category=category;this.subCategory=subCategory;this.name=name;this.time=time;this.note=note;this.id=this._generateId();this.status=REMINDER_STATUS.active;};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/reminders.js"],"names":["REMINDER_STATUS","log","console","addReminderHandler","appCtx","reminderCtx","isInputValid","_reminderInputValidate","_addReminder","setState","newReminderAdded","state","reminderName","user","activeUser","category","subCategory","reminderTime","reminderNote","newReminder","Reminder","reminders","push","isCategoryValid","_isInvalid","isSubCategoryValid","isNameValid","isDateTimeValid","value","undefined","editReminderHandler","id","_editReminder","index","_getReminderIndex","reminder","name","time","note","completeReminderHandler","ctx","timeout","setReminderStatus","completed","clearTimeout","deleteReminderHandler","splice","status","list","i","length","_generateId","Math","random","toString","substr","active"],"mappings":"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","sourcesContent":["import { REMINDER_STATUS } from '../constants';\n\nconst log = console.log;\n\nexport const addReminderHandler = (appCtx, reminderCtx) => {\n  log('Adding new reminder...');\n  const isInputValid = _reminderInputValidate(reminderCtx);\n  log('Input validity status: ' + isInputValid);\n  if (isInputValid) {\n    _addReminder(appCtx, reminderCtx);\n    reminderCtx.setState({\n      newReminderAdded: true,\n    });\n    log(`Successfully added new reminder '${reminderCtx.state.reminderName}'`);\n  } else {\n    log('Unsuccessfully in adding reminder');\n  }\n};\n\nconst _addReminder = (appCtx, reminderCtx) => {\n  const user = appCtx.state.activeUser;\n  const { category, subCategory, reminderName, reminderTime, reminderNote } = reminderCtx.state;\n  const newReminder = new Reminder(category, subCategory, reminderName, reminderTime, reminderNote);\n  user.reminders[reminderCtx.state.category].push(newReminder);\n  appCtx.setState({\n    activeUser: user,\n  });\n};\n\nconst _reminderInputValidate = (reminderCtx) => {\n  log('Validating reminder inputs...');\n  const isCategoryValid = _isInvalid(reminderCtx.state.category);\n  const isSubCategoryValid = _isInvalid(reminderCtx.state.subCategory);\n  const isNameValid = _isInvalid(reminderCtx.state.reminderName);\n  const isDateTimeValid = _isInvalid(reminderCtx.state.reminderTime);\n  reminderCtx.setState({\n    isCategoryValid: isCategoryValid,\n    isSubCategoryValid: isSubCategoryValid,\n    isNameValid: isNameValid,\n    isDateTimeValid: isDateTimeValid,\n  });\n\n  return isCategoryValid && isSubCategoryValid && isNameValid && isDateTimeValid;\n};\n\nconst _isInvalid = (value) => {\n  return value !== null && value !== undefined && value !== '' && value !== 'select';\n};\n\nexport const editReminderHandler = (appCtx, reminderCtx, category, id) => {\n  log('Editing reminder...');\n  const isInputValid = _reminderInputValidate(reminderCtx);\n  if (isInputValid) {\n    _editReminder(appCtx, reminderCtx, category, id);\n    reminderCtx.setState({\n      newReminderAdded: true,\n    });\n    log('Successfully editted reminder');\n  } else {\n    log('Unsuccessfully editing reminder');\n  }\n};\n\nconst _editReminder = (appCtx, reminderCtx, category, id) => {\n  const user = appCtx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminder = user.reminders[category][index];\n  reminder.category = reminderCtx.state.category;\n  reminder.subCategory = reminderCtx.state.subCategory;\n  reminder.name = reminderCtx.state.reminderName;\n  reminder.time = reminderCtx.state.reminderTime;\n  reminder.note = reminderCtx.state.reminderNote;\n  user.reminders[category][index] = reminder;\n  appCtx.setState({\n    activeUser: user,\n  });\n};\n\nexport const completeReminderHandler = (ctx, category, id, timeout) => {\n  log('Updating status of reminder to completed...');\n  setReminderStatus(ctx, category, id, REMINDER_STATUS.completed);\n  clearTimeout(timeout);\n  log('Successfully completed reminder');\n};\n\nexport const deleteReminderHandler = (ctx, category, id, timeout) => {\n  log('Removing reminder...');\n  const user = ctx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminders = user.reminders[category];\n  reminders.splice(index, 1);\n  user.reminders[category] = reminders;\n  ctx.setState({\n    activeUser: user,\n  });\n  clearTimeout(timeout);\n  log('Successfully removed reminder');\n};\n\nexport const setReminderStatus = (ctx, category, id, status) => {\n  const user = ctx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminder = user.reminders[category][index];\n  reminder.status = status;\n  user.reminders[category][id] = reminder;\n  ctx.setState({\n    activeUser: user,\n  });\n};\n\nconst _getReminderIndex = (list, id) => {\n  let i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].id === id) {\n      return i;\n    }\n  }\n};\n\nexport class Reminder {\n  constructor(category, subCategory, name, time, note) {\n    this.category = category;\n    this.subCategory = subCategory;\n    this.name = name;\n    this.time = time;\n    this.note = note;\n    this.id = this._generateId();\n    this.status = REMINDER_STATUS.active;\n  }\n\n  _generateId = () => {\n    return 'r' + Math.random().toString(36).substr(3, 8);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}