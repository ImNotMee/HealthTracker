{"ast":null,"code":"export const APP_NAME = 'Health Tracker';\nexport const ADMIN_ACCOUNT_TYPE = 'admin';\nexport const USER_ACCOUNT_TYPE = 'user';\nexport const ACCOUNT_TYPES = {\n  admin: ADMIN_ACCOUNT_TYPE,\n  user: USER_ACCOUNT_TYPE\n};\nexport const HEALTH_CATEGORIES = {\n  phsycial: 'Physical Health',\n  mental: 'Mental Health',\n  medical: 'Medical Health'\n};\nexport const HEALTH_SUB_CATEGORIES = {\n  [HEALTH_CATEGORIES.phsycial]: ['BMI', 'Hydration', 'Calories'],\n  [HEALTH_CATEGORIES.mental]: ['Mood', 'Sleep', 'Stress'],\n  [HEALTH_CATEGORIES.medical]: ['Medication', 'Symptoms', 'Appointments']\n};\nexport const REMINDER_STATUS = {\n  active: 'active',\n  completed: 'completed',\n  overdue: 'overdue'\n};\nexport const USERS = {\n  useruser: {\n    firstName: 'Ben',\n    lastName: 'John',\n    hash: 'useruser',\n    type: USER_ACCOUNT_TYPE,\n    reminders: {\n      [HEALTH_CATEGORIES.medical]: [],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: [{\n        id: 'r0',\n        category: HEALTH_CATEGORIES.phsycial,\n        subCategory: 'Appointments',\n        name: 'Go for 30 minute run',\n        time: '2020-07-01T21:15',\n        note: 'call Jack to check if he wants to come',\n        status: REMINDER_STATUS.active\n      }, {\n        id: 'r1',\n        category: HEALTH_CATEGORIES.phsycial,\n        subCategory: 'BMI',\n        name: 'Go for 30 minute run',\n        time: 1598996595261,\n        note: 'call Jack to check if he wants to come',\n        status: REMINDER_STATUS.active\n      }],\n      otherReminders: null\n    },\n    notifications: []\n  },\n  adminadmin: {\n    firstName: 'IAmAdmin',\n    lastName: 'John',\n    hash: 'adminadmin',\n    type: ADMIN_ACCOUNT_TYPE\n  }\n};\nexport const PAGE_ADDRESS = ['/overview', '/trends', '/reminders', '/calendar', '/check-in', '/overview/logWeight', '/overview/logWater', '/overview/logCalories', '/overview/logMood', '/overview/logSleep', '/overview/logStress', '/overview/logMedical', '/overview/logSick', '/reminders/add/:cat?/:sub?/:name?/:time?/:note?/:id?'];\nexport const LOCATIONS = {\n  'loc 1': {\n    id: 'loc 1',\n    name: \"Queen's Park\",\n    isAvaliable: true,\n    address: '111 Wellesley St W, Toronto, ON',\n    country: 'Canada',\n    imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Looking_down_University_Avenue_Toronto_August_2012.jpg/1200px-Looking_down_University_Avenue_Toronto_August_2012.jpg',\n    maxOccupancy: 53,\n    currOccupancy: 52,\n    description: 'some information about the park'\n  }\n};\nexport const PHYSICAL_TIP = ['Eat a high protein breakfast', 'Lower Carbohydrates', 'Avoid sugary drinks and fruit juice', 'Drink sufficient water every day', 'Choose weight-loss-friendly foods', 'Eat slowly, Chew slowly', 'Weigh your self every day', 'Lift weights at least three times per week', 'Cardiovascular exercise every day', 'Get good quality of Sleep'];\nexport const MENTAL_TIP = ['Avoid alcohol, smoking, and drugs', 'Get enough of sunlight', 'Do something fun or enjoyable', 'Build self-confidence', 'Socialize with others', 'Ask for help if you need one', 'Relax and take a break', 'Exercise may help you get rid of worries', 'Learn how to deal with Stress', 'Set goals, describe to yourself what you really want', 'Start today'];\nexport const MOODLIST = [{\n  value: 'angry',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084520.svg'\n}, {\n  value: 'sad',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084540.svg'\n}, {\n  value: 'thoughtful',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084437.svg'\n}, {\n  value: 'soso',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084473.svg'\n}, {\n  value: 'happy',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084424.svg'\n}, {\n  value: 'lovely',\n  icon: 'https://image.flaticon.com/icons/svg/3084/3084622.svg'\n}];\nexport const DAYSOFWEEK = ['Sunday', 'Monday', 'Tuesday', 'Wedsnesday', 'Thursday', 'Friday', 'Saturday'];\nexport const SYMPTOM_OPTION = ['Fever or chills', 'Cough', 'Difficulty breathing', 'Fatigue', 'Muscle or body aches', 'Headaches', 'Sore throat', 'Congestion or runny nose', 'Nausea or vomiting', 'Diarrhea', 'Bluish lips or face'];","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/constants.js"],"names":["APP_NAME","ADMIN_ACCOUNT_TYPE","USER_ACCOUNT_TYPE","ACCOUNT_TYPES","admin","user","HEALTH_CATEGORIES","phsycial","mental","medical","HEALTH_SUB_CATEGORIES","REMINDER_STATUS","active","completed","overdue","USERS","useruser","firstName","lastName","hash","type","reminders","id","category","subCategory","name","time","note","status","otherReminders","notifications","adminadmin","PAGE_ADDRESS","LOCATIONS","isAvaliable","address","country","imageUrl","maxOccupancy","currOccupancy","description","PHYSICAL_TIP","MENTAL_TIP","MOODLIST","value","icon","DAYSOFWEEK","SYMPTOM_OPTION"],"mappings":"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","sourcesContent":["export const APP_NAME = 'Health Tracker';\n\nexport const ADMIN_ACCOUNT_TYPE = 'admin';\nexport const USER_ACCOUNT_TYPE = 'user';\nexport const ACCOUNT_TYPES = {\n  admin: ADMIN_ACCOUNT_TYPE,\n  user: USER_ACCOUNT_TYPE,\n};\n\nexport const HEALTH_CATEGORIES = {\n  phsycial: 'Physical Health',\n  mental: 'Mental Health',\n  medical: 'Medical Health',\n};\n\nexport const HEALTH_SUB_CATEGORIES = {\n  [HEALTH_CATEGORIES.phsycial]: ['BMI', 'Hydration', 'Calories'],\n  [HEALTH_CATEGORIES.mental]: ['Mood', 'Sleep', 'Stress'],\n  [HEALTH_CATEGORIES.medical]: ['Medication', 'Symptoms', 'Appointments'],\n};\n\nexport const REMINDER_STATUS = {\n  active: 'active',\n  completed: 'completed',\n  overdue: 'overdue',\n};\n\nexport const USERS = {\n  useruser: {\n    firstName: 'Ben',\n    lastName: 'John',\n    hash: 'useruser',\n    type: USER_ACCOUNT_TYPE,\n    reminders: {\n      [HEALTH_CATEGORIES.medical]: [],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: [\n        {\n          id: 'r0',\n          category: HEALTH_CATEGORIES.phsycial,\n          subCategory: 'Appointments',\n          name: 'Go for 30 minute run',\n          time: '2020-07-01T21:15',\n          note: 'call Jack to check if he wants to come',\n          status: REMINDER_STATUS.active,\n        },\n        {\n          id: 'r1',\n          category: HEALTH_CATEGORIES.phsycial,\n          subCategory: 'BMI',\n          name: 'Go for 30 minute run',\n          time: 1598996595261,\n          note: 'call Jack to check if he wants to come',\n          status: REMINDER_STATUS.active,\n        },\n      ],\n      otherReminders: null,\n    },\n    notifications: [\n      \n    ]\n  },\n  adminadmin: {\n    firstName: 'IAmAdmin',\n    lastName: 'John',\n    hash: 'adminadmin',\n    type: ADMIN_ACCOUNT_TYPE,\n  },\n};\n\nexport const PAGE_ADDRESS = [\n  '/overview',\n  '/trends',\n  '/reminders',\n  '/calendar',\n  '/check-in',\n  '/overview/logWeight',\n  '/overview/logWater',\n  '/overview/logCalories',\n  '/overview/logMood',\n  '/overview/logSleep',\n  '/overview/logStress',\n  '/overview/logMedical',\n  '/overview/logSick',\n  '/reminders/add/:cat?/:sub?/:name?/:time?/:note?/:id?',\n];\n\nexport const LOCATIONS = {\n  'loc 1': {\n    id: 'loc 1',\n    name: \"Queen's Park\",\n    isAvaliable: true,\n    address: '111 Wellesley St W, Toronto, ON',\n    country: 'Canada',\n    imageUrl:\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Looking_down_University_Avenue_Toronto_August_2012.jpg/1200px-Looking_down_University_Avenue_Toronto_August_2012.jpg',\n    maxOccupancy: 53,\n    currOccupancy: 52,\n    description: 'some information about the park',\n  },\n};\n\nexport const PHYSICAL_TIP = [\n  'Eat a high protein breakfast',\n  'Lower Carbohydrates',\n  'Avoid sugary drinks and fruit juice',\n  'Drink sufficient water every day',\n  'Choose weight-loss-friendly foods',\n  'Eat slowly, Chew slowly',\n  'Weigh your self every day',\n  'Lift weights at least three times per week',\n  'Cardiovascular exercise every day',\n  'Get good quality of Sleep',\n];\n\nexport const MENTAL_TIP = [\n  'Avoid alcohol, smoking, and drugs',\n  'Get enough of sunlight',\n  'Do something fun or enjoyable',\n  'Build self-confidence',\n  'Socialize with others',\n  'Ask for help if you need one',\n  'Relax and take a break',\n  'Exercise may help you get rid of worries',\n  'Learn how to deal with Stress',\n  'Set goals, describe to yourself what you really want',\n  'Start today',\n];\n\nexport const MOODLIST = [\n  { value: 'angry', icon: 'https://image.flaticon.com/icons/svg/3084/3084520.svg' },\n  { value: 'sad', icon: 'https://image.flaticon.com/icons/svg/3084/3084540.svg' },\n  { value: 'thoughtful', icon: 'https://image.flaticon.com/icons/svg/3084/3084437.svg' },\n  { value: 'soso', icon: 'https://image.flaticon.com/icons/svg/3084/3084473.svg' },\n  { value: 'happy', icon: 'https://image.flaticon.com/icons/svg/3084/3084424.svg' },\n  { value: 'lovely', icon: 'https://image.flaticon.com/icons/svg/3084/3084622.svg' },\n];\n\nexport const DAYSOFWEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wedsnesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n\nexport const SYMPTOM_OPTION = [\n  'Fever or chills',\n  'Cough',\n  'Difficulty breathing',\n  'Fatigue',\n  'Muscle or body aches',\n  'Headaches',\n  'Sore throat',\n  'Congestion or runny nose',\n  'Nausea or vomiting',\n  'Diarrhea',\n  'Bluish lips or face',\n];\n"]},"metadata":{},"sourceType":"module"}