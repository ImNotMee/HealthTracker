{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Redirect}from'react-router-dom';import ListSelector from'../../General/ListSelector';import{onSelectHandler,onInputChangeHandler}from'../../../actions/utils';import'./styles.css';import{HEALTH_CATEGORIES,HEALTH_SUB_CATEGORIES,ADMIN_ACCOUNT_TYPE,ADMIN_REMINDER_TYPES}from'../../../constants';var AddReminder=/*#__PURE__*/function(_Component){_inherits(AddReminder,_Component);var _super=_createSuper(AddReminder);function AddReminder(){var _this$props$match,_this$props$match2,_this$props$match3,_this$props$match4,_this$props$match5;var _this;_classCallCheck(this,AddReminder);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={category:(_this$props$match=_this.props.match)===null||_this$props$match===void 0?void 0:_this$props$match.params.cat,subCategory:(_this$props$match2=_this.props.match)===null||_this$props$match2===void 0?void 0:_this$props$match2.params.sub,reminderName:(_this$props$match3=_this.props.match)===null||_this$props$match3===void 0?void 0:_this$props$match3.params.name,reminderTime:(_this$props$match4=_this.props.match)===null||_this$props$match4===void 0?void 0:_this$props$match4.params.time,reminderNote:(_this$props$match5=_this.props.match)===null||_this$props$match5===void 0?void 0:_this$props$match5.params.note,isCategoryValid:true,isSubCategoryValid:true,isNameValid:true,isDateTimeValid:true,isNoteValid:true,newReminderAdded:false};_this.goToReminders=function(){if(_this.state.newReminderAdded){return/*#__PURE__*/React.createElement(Redirect,{to:\"/reminders\"});}};_this.displayErrorMsg=function(){var _this$state=_this.state,isCategoryValid=_this$state.isCategoryValid,isSubCategoryValid=_this$state.isSubCategoryValid,isNameValid=_this$state.isNameValid,isDateTimeValid=_this$state.isDateTimeValid;if(isCategoryValid&&isSubCategoryValid&&isNameValid&&isDateTimeValid){return'';}else{return/*#__PURE__*/React.createElement(\"span\",{className:\"errorMsg\"},\" Input fields in red are missing \");}};return _this;}_createClass(AddReminder,[{key:\"render\",value:function render(){var _this2=this,_this$props$match6;var activeUser=this.props.activeUser;return/*#__PURE__*/React.createElement(\"div\",{id:\"AddReminderWrapper\"},this.goToReminders(),/*#__PURE__*/React.createElement(\"div\",{id:\"AddReminderWindow\",className:\"windowWrapper\"},/*#__PURE__*/React.createElement(\"h1\",null,\" Add Reminder \"),this.displayErrorMsg(),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"reminderInputWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"inputLabel\"},\" Category: \"),/*#__PURE__*/React.createElement(ListSelector,{id:\"HealthCatList\",className:this.state.isCategoryValid?'':'invalidInput',name:\"categories\",autoComplete:\"false\",defaultValue:this.state.category===undefined?'':this.state.category,options:activeUser.type===ADMIN_ACCOUNT_TYPE?Object.values(ADMIN_REMINDER_TYPES):Object.values(HEALTH_CATEGORIES),onChangeHandler:function onChangeHandler(event){onSelectHandler(_this2,event,'category');}})),this.state.category!==undefined&&activeUser.type!==ADMIN_ACCOUNT_TYPE?/*#__PURE__*/React.createElement(\"div\",{className:\"reminderInputWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"inputLabel\"},\" Sub-Category: \"),/*#__PURE__*/React.createElement(ListSelector,{id:\"SubHealthCatList\",className:this.state.isSubCategoryValid?'':'invalidInput',name:\"subCategories\",autoComplete:\"false\",defaultValue:this.state.subCategory===undefined?'':this.state.subCategory,options:HEALTH_SUB_CATEGORIES[this.state.category],onChangeHandler:function onChangeHandler(event){onSelectHandler(_this2,event,'subCategory');}})):'',/*#__PURE__*/React.createElement(\"div\",{className:\"reminderInputWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"inputLabel\"},\" Title: \"),/*#__PURE__*/React.createElement(\"input\",{id:\"ReminderTitleInput\",className:\"input \".concat(this.state.isNameValid?'':'invalidInput'),type:\"text\",name:\"reminderName\",value:this.state.reminderName===undefined?'':this.state.reminderName,placeholder:\"Title\",onChange:function onChange(event){onInputChangeHandler(_this2,event);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"reminderInputWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"inputLabel\"},\" When to remind: \"),/*#__PURE__*/React.createElement(\"input\",{className:\"input \".concat(this.state.isDateTimeValid?'':'invalidInput'),type:\"datetime-local\",id:\"DateTimeInput\",name:\"reminderTime\",value:this.state.reminderTime===undefined?'':this.state.reminderTime,min:new Date(),onChange:function onChange(event){onInputChangeHandler(_this2,event);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"reminderInputWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"inputLabel\"},\" Notes: \"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"ReminderNotesInput\",className:\"input \".concat(this.state.isNoteValid?'':'invalidInput'),name:\"reminderNote\",maxLength:\"225\",placeholder:\"Notes\",value:this.state.reminderNote===undefined?'':this.state.reminderNote,onChange:function onChange(event){onInputChangeHandler(_this2,event);}}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"charCount\"},this.state.reminderNote!==undefined?this.state['reminderNote'].length:'0',\"/225\")),((_this$props$match6=this.props.match)===null||_this$props$match6===void 0?void 0:_this$props$match6.params.id)!==undefined?/*#__PURE__*/React.createElement(\"button\",{className:\"primary-btn\",onClick:function onClick(){_this2.props.editReminderHandler(_this2,_this2.props.match.params.cat,_this2.props.match.params.id);}},' ',\"Edit\",' '):/*#__PURE__*/React.createElement(\"button\",{className:\"primary-btn\",onClick:function onClick(){_this2.props.addReminderHandler(_this2);}},' ',\"Add\",' ')));}}]);return AddReminder;}(Component);export default AddReminder;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/AddReminder/index.js"],"names":["React","Component","Redirect","ListSelector","onSelectHandler","onInputChangeHandler","HEALTH_CATEGORIES","HEALTH_SUB_CATEGORIES","ADMIN_ACCOUNT_TYPE","ADMIN_REMINDER_TYPES","AddReminder","state","category","props","match","params","cat","subCategory","sub","reminderName","name","reminderTime","time","reminderNote","note","isCategoryValid","isSubCategoryValid","isNameValid","isDateTimeValid","isNoteValid","newReminderAdded","goToReminders","displayErrorMsg","activeUser","undefined","type","Object","values","event","Date","length","id","editReminderHandler","addReminderHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ListSelector from '../../General/ListSelector';\nimport { onSelectHandler, onInputChangeHandler } from '../../../actions/utils';\nimport './styles.css';\nimport {\n  HEALTH_CATEGORIES,\n  HEALTH_SUB_CATEGORIES,\n  ADMIN_ACCOUNT_TYPE,\n  ADMIN_REMINDER_TYPES,\n} from '../../../constants';\n\nclass AddReminder extends Component {\n  state = {\n    category: this.props.match?.params.cat,\n    subCategory: this.props.match?.params.sub,\n    reminderName: this.props.match?.params.name,\n    reminderTime: this.props.match?.params.time,\n    reminderNote: this.props.match?.params.note,\n    isCategoryValid: true,\n    isSubCategoryValid: true,\n    isNameValid: true,\n    isDateTimeValid: true,\n    isNoteValid: true,\n    newReminderAdded: false,\n  };\n\n  goToReminders = () => {\n    if (this.state.newReminderAdded) {\n      return <Redirect to=\"/reminders\" />;\n    }\n  };\n\n  displayErrorMsg = () => {\n    const { isCategoryValid, isSubCategoryValid, isNameValid, isDateTimeValid } = this.state;\n    if (isCategoryValid && isSubCategoryValid && isNameValid && isDateTimeValid) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Input fields in red are missing </span>;\n    }\n  };\n\n  render() {\n    const { activeUser } = this.props;\n    return (\n      <div id=\"AddReminderWrapper\">\n        {this.goToReminders()}\n        <div id=\"AddReminderWindow\" className=\"windowWrapper\">\n          <h1> Add Reminder </h1>\n          {this.displayErrorMsg()}\n          <br />\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Category: </span>\n            <ListSelector\n              id=\"HealthCatList\"\n              className={this.state.isCategoryValid ? '' : 'invalidInput'}\n              name=\"categories\"\n              autoComplete=\"false\"\n              defaultValue={this.state.category === undefined ? '' : this.state.category}\n              options={\n                activeUser.type === ADMIN_ACCOUNT_TYPE\n                  ? Object.values(ADMIN_REMINDER_TYPES)\n                  : Object.values(HEALTH_CATEGORIES)\n              }\n              onChangeHandler={(event) => {\n                onSelectHandler(this, event, 'category');\n              }}\n            />\n          </div>\n          {this.state.category !== undefined && activeUser.type !== ADMIN_ACCOUNT_TYPE ? (\n            <div className=\"reminderInputWrapper\">\n              <span className=\"inputLabel\"> Sub-Category: </span>\n              <ListSelector\n                id=\"SubHealthCatList\"\n                className={this.state.isSubCategoryValid ? '' : 'invalidInput'}\n                name=\"subCategories\"\n                autoComplete=\"false\"\n                defaultValue={this.state.subCategory === undefined ? '' : this.state.subCategory}\n                options={HEALTH_SUB_CATEGORIES[this.state.category]}\n                onChangeHandler={(event) => {\n                  onSelectHandler(this, event, 'subCategory');\n                }}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Title: </span>\n            <input\n              id=\"ReminderTitleInput\"\n              className={`input ${this.state.isNameValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              name=\"reminderName\"\n              value={this.state.reminderName === undefined ? '' : this.state.reminderName}\n              placeholder=\"Title\"\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> When to remind: </span>\n            <input\n              className={`input ${this.state.isDateTimeValid ? '' : 'invalidInput'}`}\n              type=\"datetime-local\"\n              id=\"DateTimeInput\"\n              name=\"reminderTime\"\n              value={this.state.reminderTime === undefined ? '' : this.state.reminderTime}\n              min={new Date()}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Notes: </span>\n            <textarea\n              id=\"ReminderNotesInput\"\n              className={`input ${this.state.isNoteValid ? '' : 'invalidInput'}`}\n              name=\"reminderNote\"\n              maxLength=\"225\"\n              placeholder=\"Notes\"\n              value={this.state.reminderNote === undefined ? '' : this.state.reminderNote}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n            <br />\n            <span className=\"charCount\">\n              {this.state.reminderNote !== undefined ? this.state['reminderNote'].length : '0'}/225\n            </span>\n          </div>\n          {this.props.match?.params.id !== undefined ? (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.editReminderHandler(\n                  this,\n                  this.props.match.params.cat,\n                  this.props.match.params.id,\n                );\n              }}\n            >\n              {' '}\n              Edit{' '}\n            </button>\n          ) : (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.addReminderHandler(this);\n              }}\n            >\n              {' '}\n              Add{' '}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddReminder;\n"]},"metadata":{},"sourceType":"module"}