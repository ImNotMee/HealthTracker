{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Reminders/index.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES } from '../../constants';\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"EmptyReminderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \" No reminders set \"));\n};\n\nclass Reminders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser\n    };\n\n    this.getUserReminderView = () => {\n      var _this$state$user, _this$state$user2, _this$state$user3, _this$state$user4, _this$state$user5, _this$state$user6;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"RemindersView\",\n        className: \"windowWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"catTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, \" Medical Health \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titleLine\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }), ((_this$state$user = this.state.user) === null || _this$state$user === void 0 ? void 0 : _this$state$user.reminders[HEALTH_CATEGORIES.medical].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }) : (_this$state$user2 = this.state.user) === null || _this$state$user2 === void 0 ? void 0 : _this$state$user2.reminders[HEALTH_CATEGORIES.medical].map(reminder => {\n        return /*#__PURE__*/React.createElement(ReminderItem, {\n          key: reminder.id,\n          reminder: reminder,\n          notifyAboutReminder: this.props.notifyAboutReminder,\n          completeReminderHandler: this.props.completeReminderHandler,\n          deleteReminderHandler: this.props.deleteReminderHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"catTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \" Mental Health \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titleLine\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }), ((_this$state$user3 = this.state.user) === null || _this$state$user3 === void 0 ? void 0 : _this$state$user3.reminders[HEALTH_CATEGORIES.mental].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }) : (_this$state$user4 = this.state.user) === null || _this$state$user4 === void 0 ? void 0 : _this$state$user4.reminders[HEALTH_CATEGORIES.mental].map(reminder => {\n        return /*#__PURE__*/React.createElement(ReminderItem, {\n          key: reminder.id,\n          reminder: reminder,\n          notifyAboutReminder: this.props.notifyAboutReminder,\n          completeReminderHandler: this.props.completeReminderHandler,\n          deleteReminderHandler: this.props.deleteReminderHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"catTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \" Physical Health \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"titleLine\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), ((_this$state$user5 = this.state.user) === null || _this$state$user5 === void 0 ? void 0 : _this$state$user5.reminders[HEALTH_CATEGORIES.phsycial].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }) : (_this$state$user6 = this.state.user) === null || _this$state$user6 === void 0 ? void 0 : _this$state$user6.reminders[HEALTH_CATEGORIES.phsycial].map(reminder => {\n        return /*#__PURE__*/React.createElement(ReminderItem, {\n          key: reminder.id,\n          reminder: reminder,\n          notifyAboutReminder: this.props.notifyAboutReminder,\n          completeReminderHandler: this.props.completeReminderHandler,\n          deleteReminderHandler: this.props.deleteReminderHandler,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }\n        });\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"RemindersWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"fabNavLink\",\n      to: \"/reminders/add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      id: \"Fab\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }), \"Add Reminder\")));\n  }\n\n}\n\nexport default Reminders;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/index.jsx"],"names":["React","Component","NavLink","Fab","AddIcon","ReminderItem","HEALTH_CATEGORIES","EmptyReminderList","Reminders","state","user","props","activeUser","getUserReminderView","reminders","medical","length","map","reminder","id","notifyAboutReminder","completeReminderHandler","deleteReminderHandler","mental","phsycial","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES } from '../../constants';\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return (\n    <div id=\"EmptyReminderList\">\n      <p> No reminders set </p>\n    </div>\n  );\n};\n\nclass Reminders extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  getUserReminderView = () => {\n    return (\n      <div id=\"RemindersView\" className=\"windowWrapper\">\n          <span className=\"catTitle\"> Medical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.medical].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.medical].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Mental Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.mental].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.mental].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Physical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n      </div>\n    );\n  }\n  \n\n  render() {\n    return (\n      <div id=\"RemindersWrapper\">\n\n        <NavLink className=\"fabNavLink\" to=\"/reminders/add\">\n          <Fab variant=\"extended\" id=\"Fab\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n            Add Reminder\n          </Fab>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Reminders;\n"]},"metadata":{},"sourceType":"module"}