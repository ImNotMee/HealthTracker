{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./styles.css';import CalendarModule from'./calendar.js';var Calendar=/*#__PURE__*/function(_Component){_inherits(Calendar,_Component);var _super=_createSuper(Calendar);function Calendar(){var _this;_classCallCheck(this,Calendar);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.activeUser,type:'calendar'};return _this;}_createClass(Calendar,[{key:\"getMonth\",value:function getMonth(){var months=['January','February','March','April','May','June','July','August','September','October','November','December'];var d=new Date();return months[d.getMonth()];}},{key:\"updateType\",value:function updateType(type){if(type==='calendar'){this.setState({user:this.props.activeUser,type:'calendar'});}else if(type==='streaks'){this.setState({user:this.props.activeUser,type:'streaks'});}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{id:\"CalendarWrapper\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"month\"},this.getMonth()),/*#__PURE__*/React.createElement(\"div\",{id:\"calendarContainer\"},/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.updateType('calendar');}},\"Calendar\"),/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.updateType('streaks');}},\"Streaks\")),/*#__PURE__*/React.createElement(CalendarModule,{type:this.state.type}));}}]);return Calendar;}(Component);export default Calendar;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Calendar/index.jsx"],"names":["React","Component","CalendarModule","Calendar","state","user","props","activeUser","type","months","d","Date","getMonth","setState","updateType"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,eAA3B,C,GAEMC,CAAAA,Q,mUACJC,K,CAAQ,CACNC,IAAI,CAAE,MAAKC,KAAL,CAAWC,UADX,CAENC,IAAI,CAAE,UAFA,C,+EAKG,CACT,GAAMC,CAAAA,MAAM,CAAG,CACb,SADa,CAEb,UAFa,CAGb,OAHa,CAIb,OAJa,CAKb,KALa,CAMb,MANa,CAOb,MAPa,CAQb,QARa,CASb,WATa,CAUb,SAVa,CAWb,UAXa,CAYb,UAZa,CAAf,CAcA,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,EAAR,CACA,MAAOF,CAAAA,MAAM,CAACC,CAAC,CAACE,QAAF,EAAD,CAAb,CACD,C,8CAEUJ,I,CAAM,CACf,GAAIA,IAAI,GAAK,UAAb,CAAyB,CACvB,KAAKK,QAAL,CAAc,CACZR,IAAI,CAAE,KAAKC,KAAL,CAAWC,UADL,CAEZC,IAAI,CAAE,UAFM,CAAd,EAID,CALD,IAKO,IAAIA,IAAI,GAAK,SAAb,CAAwB,CAC7B,KAAKK,QAAL,CAAc,CACZR,IAAI,CAAE,KAAKC,KAAL,CAAWC,UADL,CAEZC,IAAI,CAAE,SAFM,CAAd,EAID,CACF,C,uCAEQ,iBACP,mBACE,2BAAK,EAAE,CAAC,iBAAR,eACE,0BAAI,EAAE,CAAC,OAAP,EAAgB,KAAKI,QAAL,EAAhB,CADF,cAEE,2BAAK,EAAE,CAAC,mBAAR,eACE,8BAAQ,EAAE,CAAC,MAAX,CAAkB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACE,UAAL,CAAgB,UAAhB,CAAN,EAA3B,aADF,cAIE,8BAAQ,EAAE,CAAC,MAAX,CAAkB,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACA,UAAL,CAAgB,SAAhB,CAAN,EAA3B,YAJF,CAFF,cAUE,oBAAC,cAAD,EAAgB,IAAI,CAAE,KAAKV,KAAL,CAAWI,IAAjC,EAVF,CADF,CAcD,C,sBAtDoBP,S,EAyDvB,cAAeE,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport CalendarModule from './calendar.js';\n\nclass Calendar extends Component {\n  state = {\n    user: this.props.activeUser,\n    type: 'calendar',\n  };\n\n  getMonth() {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    let d = new Date();\n    return months[d.getMonth()];\n  }\n\n  updateType(type) {\n    if (type === 'calendar') {\n      this.setState({\n        user: this.props.activeUser,\n        type: 'calendar',\n      });\n    } else if (type === 'streaks') {\n      this.setState({\n        user: this.props.activeUser,\n        type: 'streaks',\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"CalendarWrapper\">\n        <h1 id=\"month\">{this.getMonth()}</h1>\n        <div id=\"calendarContainer\">\n          <button id=\"tabs\" onClick={() => this.updateType('calendar')}>\n            Calendar\n          </button>\n          <button id=\"tabs\" onClick={() => this.updateType('streaks')}>\n            Streaks\n          </button>\n        </div>\n        <CalendarModule type={this.state.type} />\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}