{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/client/src/js/components/Card/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport PieChart from './Chart.js';\nimport { NavLink } from 'react-router-dom';\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser,\n      title: this.props.title,\n      value: this.props.value,\n      image: this.props.image,\n      address: this.props.address,\n      type: this.props.type\n    };\n  }\n\n  CardSwitch(type) {\n    switch (type) {\n      case '1':\n        // BMI\n        return this.ShowImage('BMI');\n\n      case '2':\n        // water\n        return this.ShowChart();\n\n      case '3':\n        // calories\n        return this.ShowChart();\n\n      case '4':\n        // mood\n        return this.ShowImage(this.state.value['value']);\n\n      case '5':\n        // sleep\n        return this.ShowSleep(this.state.value['hours'], this.state.value['quality']);\n\n      case '6':\n        // stress\n        return this.ShowStress(this.state.value['value']);\n\n      case '7':\n        // medication\n        return this.ShowList(this.state.value);\n\n      case '8':\n        // sickness\n        return this.ShowSickness(this.state.value);\n\n      case '9':\n        // appointments\n        return this.ShowList(this.state.value);\n\n      default:\n        return;\n    }\n  }\n\n  ShowChart() {\n    const completed = this.state.value['completed'];\n    const remaining = this.state.value['remaining'];\n    const unit = this.state.value['unit'];\n    const dataset = [completed, remaining, unit];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(PieChart, {\n      data: dataset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"cardValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, completed, \" \", unit));\n  }\n\n  ShowImage(value) {\n    var imageSrc = '';\n    var text = '';\n\n    switch (value) {\n      case 'angry':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084520.svg';\n        text = 'Angry';\n        break;\n\n      case 'sad':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084540.svg';\n        text = 'Sad';\n        break;\n\n      case 'thoughtful':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084437.svg';\n        text = 'Thoughtful';\n        break;\n\n      case 'soso':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084473.svg';\n        text = 'So So';\n        break;\n\n      case 'happy':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084424.svg';\n        text = 'Happy';\n        break;\n\n      case 'lovely':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084622.svg';\n        text = 'Lovely';\n        break;\n\n      case 'BMI':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3023/3023711.svg';\n        text = this.state.value['value'];\n        break;\n\n      case 'sick':\n        imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/nauseated-face_1f922.png';\n        text = 'Feeling Unwell';\n        break;\n\n      case 'healthy':\n        imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/face-with-party-horn-and-party-hat_1f973.png';\n        text = 'Healthy!';\n        break;\n\n      default:\n        imageSrc = 'https://camo.githubusercontent.com/ec4fa9947e66613fa4315e34dc4cb9581462b4d4/68747470733a2f2f692e696d6775722e636f6d2f6e4f53313264362e676966';\n        text = '';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"cardIcon\",\n      alt: \"card\",\n      src: imageSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"cardValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, text));\n  }\n\n  ShowStress(stress) {\n    var imageSrc = '';\n    const stressInt = parseInt(stress);\n\n    if (stressInt < 4) {\n      imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grinning-face_1f600.png';\n    } else if (stressInt >= 4 && stressInt < 7) {\n      imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grimacing-face_1f62c.png';\n    } else {\n      imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/angry-face_1f620.png';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"cardIcon\",\n      alt: \"card icon\",\n      src: imageSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"inputSlider\",\n      type: \"range\",\n      min: 0,\n      max: 10,\n      value: stressInt,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"cardValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, stress)));\n  }\n\n  ShowSleep(hours, quality) {\n    var imageSrc = 'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/sleeping-face_1f634.png';\n    var hoursDisplay = '';\n    var qualityDisplay = '';\n    const hoursInt = parseInt(hours);\n\n    if (hoursInt < 5) {\n      hoursDisplay = 'sleepBad';\n    } else if (hoursInt >= 5 && hoursInt < 7) {\n      hoursDisplay = 'sleepOkay';\n    } else {\n      hoursDisplay = 'sleepGood';\n    }\n\n    if (quality === 'Bad') {\n      qualityDisplay = 'sleepBad';\n    } else if (quality === 'Normal') {\n      qualityDisplay = 'sleepOkay';\n    } else {\n      qualityDisplay = 'sleepGood';\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: hoursDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"sleepIcon\",\n      alt: \"card icon\",\n      src: imageSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }), hours, \" Hours\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: qualityDisplay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"Sleep Quality: \", quality)));\n  }\n\n  ShowList(list) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"itemList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, list.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"eventName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, item['name'], \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"eventTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, this.fixTime(item['time'])), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"eventNote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"Note: \", item['note']))));\n  }\n\n  fixTime(time) {\n    const options = {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    };\n    const dateTimeValue = new Date(time);\n    const dateTimeStr = new Intl.DateTimeFormat('en-US', options).format(dateTimeValue);\n    return dateTimeStr;\n  }\n\n  ShowSickness(sickness) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sicknessList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, sickness.map((sick, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"sickness\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, sick)));\n  }\n\n  render() {\n    const add = this.state.address;\n    return /*#__PURE__*/React.createElement(NavLink, {\n      to: add,\n      id: \"cardWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"cardTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }\n    }, this.state.title), this.CardSwitch(this.state.type));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/client/src/js/components/Card/index.jsx"],"names":["React","Component","PieChart","NavLink","Card","state","user","props","activeUser","title","value","image","address","type","CardSwitch","ShowImage","ShowChart","ShowSleep","ShowStress","ShowList","ShowSickness","completed","remaining","unit","dataset","imageSrc","text","stress","stressInt","parseInt","hours","quality","hoursDisplay","qualityDisplay","hoursInt","list","map","item","index","fixTime","time","options","month","day","year","hour","minute","second","dateTimeValue","Date","dateTimeStr","Intl","DateTimeFormat","format","sickness","sick","render","add"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport PieChart from './Chart.js';\nimport { NavLink } from 'react-router-dom';\n\nclass Card extends Component {\n  state = {\n    user: this.props.activeUser,\n    title: this.props.title,\n    value: this.props.value,\n    image: this.props.image,\n    address: this.props.address,\n    type: this.props.type,\n  };\n\n  CardSwitch(type) {\n    switch (type) {\n      case '1': // BMI\n        return this.ShowImage('BMI');\n      case '2': // water\n        return this.ShowChart();\n      case '3': // calories\n        return this.ShowChart();\n      case '4': // mood\n        return this.ShowImage(this.state.value['value']);\n      case '5': // sleep\n        return this.ShowSleep(this.state.value['hours'], this.state.value['quality']);\n      case '6': // stress\n        return this.ShowStress(this.state.value['value']);\n      case '7': // medication\n        return this.ShowList(this.state.value);\n      case '8': // sickness\n        return this.ShowSickness(this.state.value);\n      case '9': // appointments\n        return this.ShowList(this.state.value);\n      default:\n        return;\n    }\n  }\n\n  ShowChart() {\n    const completed = this.state.value['completed'];\n    const remaining = this.state.value['remaining'];\n    const unit = this.state.value['unit'];\n    const dataset = [completed, remaining, unit];\n    return (\n      <div>\n        <PieChart data={dataset} />\n        <p id=\"cardValue\">\n          {completed} {unit}\n        </p>\n      </div>\n    );\n  }\n\n  ShowImage(value) {\n    var imageSrc = '';\n    var text = '';\n    switch (value) {\n      case 'angry':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084520.svg';\n        text = 'Angry';\n        break;\n      case 'sad':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084540.svg';\n        text = 'Sad';\n        break;\n      case 'thoughtful':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084437.svg';\n        text = 'Thoughtful';\n        break;\n      case 'soso':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084473.svg';\n        text = 'So So';\n        break;\n      case 'happy':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084424.svg';\n        text = 'Happy';\n        break;\n      case 'lovely':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084622.svg';\n        text = 'Lovely';\n        break;\n      case 'BMI':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3023/3023711.svg';\n        text = this.state.value['value'];\n        break;\n      case 'sick':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/nauseated-face_1f922.png';\n        text = 'Feeling Unwell';\n        break;\n      case 'healthy':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/face-with-party-horn-and-party-hat_1f973.png';\n        text = 'Healthy!';\n        break;\n      default:\n        imageSrc =\n          'https://camo.githubusercontent.com/ec4fa9947e66613fa4315e34dc4cb9581462b4d4/68747470733a2f2f692e696d6775722e636f6d2f6e4f53313264362e676966';\n        text = '';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card\" src={imageSrc}></img>\n        <p id=\"cardValue\">{text}</p>\n      </div>\n    );\n  }\n\n  ShowStress(stress) {\n    var imageSrc = '';\n    const stressInt = parseInt(stress);\n    if (stressInt < 4) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grinning-face_1f600.png';\n    } else if (stressInt >= 4 && stressInt < 7) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grimacing-face_1f62c.png';\n    } else {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/angry-face_1f620.png';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card icon\" src={imageSrc}></img>\n        <div>\n          <input\n            className=\"inputSlider\"\n            type=\"range\"\n            min={0}\n            max={10}\n            value={stressInt}\n            readOnly\n          ></input>\n          <span id=\"cardValue\">{stress}</span>\n        </div>\n      </div>\n    );\n  }\n\n  ShowSleep(hours, quality) {\n    var imageSrc =\n      'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/sleeping-face_1f634.png';\n    var hoursDisplay = '';\n    var qualityDisplay = '';\n\n    const hoursInt = parseInt(hours);\n    if (hoursInt < 5) {\n      hoursDisplay = 'sleepBad';\n    } else if (hoursInt >= 5 && hoursInt < 7) {\n      hoursDisplay = 'sleepOkay';\n    } else {\n      hoursDisplay = 'sleepGood';\n    }\n\n    if (quality === 'Bad') {\n      qualityDisplay = 'sleepBad';\n    } else if (quality === 'Normal') {\n      qualityDisplay = 'sleepOkay';\n    } else {\n      qualityDisplay = 'sleepGood';\n    }\n\n    return (\n      <div>\n        <div>\n          <p className={hoursDisplay}>\n            <img className=\"sleepIcon\" alt=\"card icon\" src={imageSrc}></img>\n            {hours} Hours\n          </p>\n        </div>\n        <div>\n          <p className={qualityDisplay}>Sleep Quality: {quality}</p>\n        </div>\n      </div>\n    );\n  }\n\n  ShowList(list) {\n    return (\n      <div className=\"itemList\">\n        {list.map((item, index) => (\n          <div key={index} className=\"item\">\n            <span className=\"eventName\">{item['name']} </span>\n            <span className=\"eventTime\">{this.fixTime(item['time'])}</span>\n            <span className=\"eventNote\">Note: {item['note']}</span>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  fixTime(time) {\n    const options = {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n    };\n    const dateTimeValue = new Date(time);\n    const dateTimeStr = new Intl.DateTimeFormat('en-US', options).format(dateTimeValue);\n    return dateTimeStr;\n  }\n\n  ShowSickness(sickness) {\n    return (\n      <div className=\"sicknessList\">\n        {sickness.map((sick, index) => (\n          <div key={index} className=\"sickness\">\n            {sick}\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const add = this.state.address;\n    return (\n      <NavLink to={add} id=\"cardWrapper\">\n        <h2 id=\"cardTitle\">{this.state.title}</h2>\n        {this.CardSwitch(this.state.type)}\n      </NavLink>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}