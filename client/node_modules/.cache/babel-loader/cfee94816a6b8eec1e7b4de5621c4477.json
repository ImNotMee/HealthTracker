{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./styles.css';import TabList from'./TabList';import{NavLink}from'react-router-dom';import TipBox from'./../TipBox/TipBox';var LogWeight=/*#__PURE__*/function(_Component){_inherits(LogWeight,_Component);var _super=_createSuper(LogWeight);function LogWeight(){var _this;_classCallCheck(this,LogWeight);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.activeUser,weight:0,height:0,BMI:0};return _this;}_createClass(LogWeight,[{key:\"metricInput\",value:function metricInput(){return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"weightLog\",placeholder:\"Enter Weight\"}),/*#__PURE__*/React.createElement(\"label\",{id:\"units\"},\"kg(kilograms)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"heightLog\",placeholder:\"Enter Height\"}),/*#__PURE__*/React.createElement(\"label\",{id:\"units\"},\"m(meters)\"),/*#__PURE__*/React.createElement(\"p\",null,\"BMI = Weight(kg) / [height(m)]^2\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Underweight: ~18.5\"),/*#__PURE__*/React.createElement(\"li\",null,\"Healthy weight: 18.5 ~ 24.9\"),/*#__PURE__*/React.createElement(\"li\",null,\"Overweight: 25 ~ 29.9\"),/*#__PURE__*/React.createElement(\"li\",null,\"Obese: 30 ~ 39.9\")),/*#__PURE__*/React.createElement(\"button\",{className:\"primary-btn\",id:\"logButton\"},\"Save\")));}},{key:\"standardInput\",value:function standardInput(){return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"weightLog\",placeholder:\"Enter Weight\"}),/*#__PURE__*/React.createElement(\"label\",{id:\"units\"},\"lbs(pounds)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"heightLog\",placeholder:\"Enter Height\"}),/*#__PURE__*/React.createElement(\"label\",{id:\"units\"},\"in(inches)\"),/*#__PURE__*/React.createElement(\"p\",null,\"BMI = 703 * Weight(lbs) / [height(in)]^2\"),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"li\",null,\"Underweight: ~18.5\"),/*#__PURE__*/React.createElement(\"li\",null,\"Healthy weight: 18.5 ~ 24.9\"),/*#__PURE__*/React.createElement(\"li\",null,\"Overweight: 25 ~ 29.9\"),/*#__PURE__*/React.createElement(\"li\",null,\"Obese: 30 ~ 39.9\")),/*#__PURE__*/React.createElement(\"button\",{className:\"primary-btn\",id:\"logButton\"},\"Save\")));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"LogWeightWrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"logWeightView left\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/overview\",id:\"closeButton\"},/*#__PURE__*/React.createElement(\"img\",{id:\"xButton\",src:\"https://image.flaticon.com/icons/svg/565/565313.svg\",alt:\"icon\",s:true})),/*#__PURE__*/React.createElement(\"h1\",{id:\"weightHeader\"},/*#__PURE__*/React.createElement(\"img\",{id:\"icon\",src:\"https://image.flaticon.com/icons/svg/3023/3023711.svg\",alt:\"icon\"}),\"Body Mass Index\"),/*#__PURE__*/React.createElement(\"div\",{className:\"logbox\"},/*#__PURE__*/React.createElement(TabList,null,/*#__PURE__*/React.createElement(\"div\",{label:\"Metric\"},this.metricInput()),/*#__PURE__*/React.createElement(\"div\",{label:\"Standard\"},this.standardInput())))),/*#__PURE__*/React.createElement(\"div\",{className:\"logWeightView right\"},/*#__PURE__*/React.createElement(TipBox,{label:\"physical\"})));}}]);return LogWeight;}(Component);export default LogWeight;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/LogPages/LogWeight/index.jsx"],"names":["React","Component","TabList","NavLink","TipBox","LogWeight","state","user","props","activeUser","weight","height","BMI","metricInput","standardInput"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,C,GAEMC,CAAAA,S,uUACJC,K,CAAQ,CACNC,IAAI,CAAE,MAAKC,KAAL,CAAWC,UADX,CAENC,MAAM,CAAE,CAFF,CAGNC,MAAM,CAAE,CAHF,CAINC,GAAG,CAAE,CAJC,C,sFAOM,CACZ,mBACE,6CACE,iDACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,WAAW,CAAC,cAA9C,EADF,cAEE,6BAAO,EAAE,CAAC,OAAV,kBAFF,cAGE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,WAAW,CAAC,cAA9C,EAHF,cAIE,6BAAO,EAAE,CAAC,OAAV,cAJF,cAKE,gEALF,cAME,2CACE,mDADF,cAEE,4DAFF,cAGE,sDAHF,cAIE,iDAJF,CANF,cAYE,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,EAAE,CAAC,WAAnC,SAZF,CADF,CADF,CAoBD,C,qDAEe,CACd,mBACE,6CACE,iDACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,WAAW,CAAC,cAA9C,EADF,cAEE,6BAAO,EAAE,CAAC,OAAV,gBAFF,cAGE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,WAAW,CAAC,cAA9C,EAHF,cAIE,6BAAO,EAAE,CAAC,OAAV,eAJF,cAKE,wEALF,cAME,2CACE,mDADF,cAEE,4DAFF,cAGE,sDAHF,cAIE,iDAJF,CANF,cAYE,8BAAQ,SAAS,CAAC,aAAlB,CAAgC,EAAE,CAAC,WAAnC,SAZF,CADF,CADF,CAoBD,C,uCACQ,CACP,mBACE,2BAAK,EAAE,CAAC,kBAAR,eACE,2BAAK,SAAS,CAAC,oBAAf,eACE,oBAAC,OAAD,EAAS,EAAE,CAAC,WAAZ,CAAwB,EAAE,CAAC,aAA3B,eACE,2BACE,EAAE,CAAC,SADL,CAEE,GAAG,CAAC,qDAFN,CAGE,GAAG,CAAC,MAHN,CAIE,CAAC,KAJH,EADF,CADF,cASE,0BAAI,EAAE,CAAC,cAAP,eACE,2BACE,EAAE,CAAC,MADL,CAEE,GAAG,CAAC,uDAFN,CAGE,GAAG,CAAC,MAHN,EADF,mBATF,cAiBE,2BAAK,SAAS,CAAC,QAAf,eACE,oBAAC,OAAD,mBACE,2BAAK,KAAK,CAAC,QAAX,EAAqB,KAAKC,WAAL,EAArB,CADF,cAEE,2BAAK,KAAK,CAAC,UAAX,EAAuB,KAAKC,aAAL,EAAvB,CAFF,CADF,CAjBF,CADF,cA0BE,2BAAK,SAAS,CAAC,qBAAf,eACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,UAAd,EADF,CA1BF,CADF,CAgCD,C,uBAtFqBb,S,EAyFxB,cAAeI,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\n\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  state = {\n    user: this.props.activeUser,\n    weight: 0,\n    height: 0,\n    BMI: 0,\n  };\n\n  metricInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">kg(kilograms)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">m(meters)</label>\n          <p>BMI = Weight(kg) / [height(m)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n\n  standardInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">lbs(pounds)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">in(inches)</label>\n          <p>BMI = 703 * Weight(lbs) / [height(in)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n  render() {\n    return (\n      <div id=\"LogWeightWrapper\">\n        <div className=\"logWeightView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n              s\n            ></img>\n          </NavLink>\n          <h1 id=\"weightHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3023/3023711.svg\"\n              alt=\"icon\"\n            ></img>\n            Body Mass Index\n          </h1>\n          <div className=\"logbox\">\n            <TabList>\n              <div label=\"Metric\">{this.metricInput()}</div>\n              <div label=\"Standard\">{this.standardInput()}</div>\n            </TabList>\n          </div>\n        </div>\n\n        <div className=\"logWeightView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogWeight;\n"]},"metadata":{},"sourceType":"module"}