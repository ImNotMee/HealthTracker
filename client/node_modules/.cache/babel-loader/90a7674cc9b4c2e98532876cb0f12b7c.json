{"ast":null,"code":"const log = console.log;\nexport const setActiveUser = (app, user) => {\n  console.log(app + user);\n  app.setState({\n    activeUser: user\n  });\n};\nexport const onLogin = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n\n  log(authKey);\n  const user = getUserByAuthKey(landingPage, authKey); // check login attempt\n\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true\n    });\n    log(\"Invalid aogin attempt. Try again\");\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false\n    });\n    landingPage.props.setActiveUserHandler(user);\n    log(\"Successful login\");\n  }\n};\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n  log(userId);\n\n  if (userId === undefined) {\n    return userId;\n  }\n\n  return getUserById(ctx, userId);\n};\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/login.js"],"names":["log","console","setActiveUser","app","user","setState","activeUser","onLogin","landingPage","email","password","authKey","_getUserHash","getUserByAuthKey","undefined","invalidLogin","userEmail","userPassword","props","setActiveUserHandler","ctx","userId","state","loginUserIdMap","getUserById","id","users"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,aAAa,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AACxCH,EAAAA,OAAO,CAACD,GAAR,CAAYG,GAAG,GAAGC,IAAlB;AACAD,EAAAA,GAAG,CAACE,QAAJ,CAAa;AACTC,IAAAA,UAAU,EAAEF;AADH,GAAb;AAGH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,CAACC,WAAD,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AACrD,QAAMC,OAAO,GAAGC,YAAY,CAACH,KAAD,EAAQC,QAAR,CAA5B;;AACAV,EAAAA,GAAG,CAACW,OAAD,CAAH;AACA,QAAMP,IAAI,GAAGS,gBAAgB,CAACL,WAAD,EAAcG,OAAd,CAA7B,CAHqD,CAIrD;;AACA,MAAIP,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKU,SAA9B,EAAyC;AACrCN,IAAAA,WAAW,CAACH,QAAZ,CAAqB;AACjBU,MAAAA,YAAY,EAAE;AADG,KAArB;AAGAf,IAAAA,GAAG,CAAC,kCAAD,CAAH;AACH,GALD,MAKO;AACHQ,IAAAA,WAAW,CAACH,QAAZ,CAAqB;AACjBW,MAAAA,SAAS,EAAEP,KADM;AAEjBQ,MAAAA,YAAY,EAAEP,QAFG;AAGjBK,MAAAA,YAAY,EAAE;AAHG,KAArB;AAKAP,IAAAA,WAAW,CAACU,KAAZ,CAAkBC,oBAAlB,CAAuCf,IAAvC;AACAJ,IAAAA,GAAG,CAAC,kBAAD,CAAH;AACH;AACJ,CAnBM;AAqBP,OAAO,MAAMY,YAAY,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAQD,KAAK,GAAGC,QAAhB;AACH,CAFM;AAIP,OAAO,MAAMG,gBAAgB,GAAG,CAACO,GAAD,EAAMT,OAAN,KAAkB;AAC9C,QAAMU,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAUC,cAAV,CAAyBZ,OAAzB,CAAf;AACAX,EAAAA,GAAG,CAACqB,MAAD,CAAH;;AACA,MAAIA,MAAM,KAAKP,SAAf,EAA0B;AACtB,WAAOO,MAAP;AACH;;AACD,SAAOG,WAAW,CAACJ,GAAD,EAAMC,MAAN,CAAlB;AACH,CAPM;AASP,OAAO,MAAMG,WAAW,GAAG,CAACJ,GAAD,EAAMK,EAAN,KAAa;AACpC,SAAOL,GAAG,CAACE,KAAJ,CAAUI,KAAV,CAAgBD,EAAhB,CAAP;AACH,CAFM","sourcesContent":["const log = console.log;\n\nexport const setActiveUser = (app, user) => {\n    console.log(app + user);\n    app.setState({\n        activeUser: user\n    })\n}\n\nexport const onLogin = (landingPage, email, password) => {\n    const authKey = _getUserHash(email, password);\n    log(authKey)\n    const user = getUserByAuthKey(landingPage, authKey)\n    // check login attempt\n    if (user === null || user === undefined) {\n        landingPage.setState({\n            invalidLogin: true,\n        })\n        log(\"Invalid aogin attempt. Try again\");\n    } else {\n        landingPage.setState({\n            userEmail: email, \n            userPassword: password,\n            invalidLogin: false,\n        });\n        landingPage.props.setActiveUserHandler(user)\n        log(\"Successful login\")\n    }\n}\n\nexport const _getUserHash = (email, password) => {\n    return (email + password);\n}\n\nexport const getUserByAuthKey = (ctx, authKey) => {\n    const userId = ctx.state.loginUserIdMap[authKey]\n    log(userId);\n    if (userId === undefined) {\n        return userId;\n    }\n    return getUserById(ctx, userId);\n}\n\nexport const getUserById = (ctx, id) => {\n    return ctx.state.users[id];\n}"]},"metadata":{},"sourceType":"module"}