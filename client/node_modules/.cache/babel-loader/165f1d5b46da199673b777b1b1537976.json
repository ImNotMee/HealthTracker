{"ast":null,"code":"import _defineProperty from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./styles.css';import{USERS,USER_ACCOUNT_TYPE,ADMIN_ACCOUNT_TYPE,ADMIN_REMINDER_TYPES}from'./../../constants';import Button from'@material-ui/core/Button';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import{NavLink}from'react-router-dom';var ManageUser=/*#__PURE__*/function(_Component){_inherits(ManageUser,_Component);var _super=_createSuper(ManageUser);function ManageUser(){var _this;_classCallCheck(this,ManageUser);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onClickDeleteUser=function(user){if(user in USERS){delete USERS[user];_this.forceUpdate();}};_this.onClickAssignAdmin=function(user){if(user in USERS&&USERS[user].type===USER_ACCOUNT_TYPE){USERS[user].type=ADMIN_ACCOUNT_TYPE;USERS[user].reminders=_defineProperty({},ADMIN_REMINDER_TYPES.task,[]);_this.forceUpdate();}};return _this;}_createClass(ManageUser,[{key:\"render\",value:function render(){var _this2=this;var keys=Object.getOwnPropertyNames(USERS);return/*#__PURE__*/React.createElement(\"div\",{id:\"ManageUserWrapper\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"ManagementHeader\"},/*#__PURE__*/React.createElement(\"img\",{id:\"userManageicon\",src:\"https://image.flaticon.com/icons/svg/876/876176.svg\",alt:\"icon\"}),\"User Management\"),/*#__PURE__*/React.createElement(\"div\",{id:\"userManageBox\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(\"h2\",{id:\"userListTitle\"},\"User List\"),keys.map(function(user){if(USERS[user].type===USER_ACCOUNT_TYPE){return/*#__PURE__*/React.createElement(TableRow,{id:\"userRow\",key:USERS[user].email},/*#__PURE__*/React.createElement(TableCell,{id:\"userInfoCell\",component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(\"li\",{id:\"userInfoList\"},\"User : \",USERS[user].firstName,\" \",USERS[user].lastName,' '),/*#__PURE__*/React.createElement(\"li\",{id:\"userInfoList\"},\"Email: \",USERS[user].email)),/*#__PURE__*/React.createElement(TableCell,{id:\"userManageButton\",component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/user-profile/\".concat(USERS[user].hash),id:\"linkView\"},/*#__PURE__*/React.createElement(Button,{className:\"clickable View\"},\"View Profile\"))),/*#__PURE__*/React.createElement(TableCell,{id:\"userManageButton\",component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(Button,{className:\"clickable Manage\",onClick:function onClick(){return _this2.onClickAssignAdmin(user);}},\"Assign Admin\")),/*#__PURE__*/React.createElement(TableCell,{id:\"userManageButton\",component:\"th\",scope:\"row\"},/*#__PURE__*/React.createElement(Button,{className:\"clickable Delete\",onClick:function onClick(){return _this2.onClickDeleteUser(user);}},\"Remove\")));}else{return undefined;}})))));}}]);return ManageUser;}(Component);export default ManageUser;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/ManageUser/index.jsx"],"names":["React","Component","USERS","USER_ACCOUNT_TYPE","ADMIN_ACCOUNT_TYPE","ADMIN_REMINDER_TYPES","Button","TableCell","TableRow","NavLink","ManageUser","onClickDeleteUser","user","forceUpdate","onClickAssignAdmin","type","reminders","task","keys","Object","getOwnPropertyNames","map","email","firstName","lastName","hash","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport {\n  USERS,\n  USER_ACCOUNT_TYPE,\n  ADMIN_ACCOUNT_TYPE,\n  ADMIN_REMINDER_TYPES,\n} from './../../constants';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { NavLink } from 'react-router-dom';\nclass ManageUser extends Component {\n  onClickDeleteUser = (user) => {\n    if (user in USERS) {\n      delete USERS[user];\n      this.forceUpdate();\n    }\n  };\n  onClickAssignAdmin = (user) => {\n    if (user in USERS && USERS[user].type === USER_ACCOUNT_TYPE) {\n      USERS[user].type = ADMIN_ACCOUNT_TYPE;\n      USERS[user].reminders = { [ADMIN_REMINDER_TYPES.task]: [] };\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const keys = Object.getOwnPropertyNames(USERS);\n    return (\n      <div id=\"ManageUserWrapper\">\n        <h1 id=\"ManagementHeader\">\n          <img\n            id=\"userManageicon\"\n            src=\"https://image.flaticon.com/icons/svg/876/876176.svg\"\n            alt=\"icon\"\n          ></img>\n          User Management\n        </h1>\n        <div id=\"userManageBox\">\n          <div>\n            <fieldset>\n              <h2 id=\"userListTitle\">User List</h2>\n              {keys.map((user) => {\n                if (USERS[user].type === USER_ACCOUNT_TYPE) {\n                  return (\n                    <TableRow id=\"userRow\" key={USERS[user].email}>\n                      <TableCell id=\"userInfoCell\" component=\"th\" scope=\"row\">\n                        <li id=\"userInfoList\">\n                          User : {USERS[user].firstName} {USERS[user].lastName}{' '}\n                        </li>\n                        <li id=\"userInfoList\">Email: {USERS[user].email}</li>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <NavLink to={`/user-profile/${USERS[user].hash}`} id=\"linkView\">\n                          <Button className=\"clickable View\">View Profile</Button>\n                        </NavLink>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Manage\"\n                          onClick={() => this.onClickAssignAdmin(user)}\n                        >\n                          Assign Admin\n                        </Button>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Delete\"\n                          onClick={() => this.onClickDeleteUser(user)}\n                        >\n                          Remove\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                } else {\n                  return undefined;\n                }\n              })}\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManageUser;\n"]},"metadata":{},"sourceType":"module"}