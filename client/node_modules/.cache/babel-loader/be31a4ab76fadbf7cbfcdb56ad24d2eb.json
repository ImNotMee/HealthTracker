{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{NavLink}from'react-router-dom';import Fab from'@material-ui/core/Fab';import AddIcon from'@material-ui/icons/Add';import ReminderItem from'./ReminderItem';import{HEALTH_CATEGORIES}from'../../constants';import'./styles.css';var EmptyReminderList=function EmptyReminderList(){return/*#__PURE__*/React.createElement(\"div\",{id:\"EmptyReminderList\"},/*#__PURE__*/React.createElement(\"p\",null,\" No reminders set \"));};var Reminders=/*#__PURE__*/function(_Component){_inherits(Reminders,_Component);var _super=_createSuper(Reminders);function Reminders(){var _this;_classCallCheck(this,Reminders);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.activeUser};return _this;}_createClass(Reminders,[{key:\"render\",value:function render(){var _this$state$user,_this$state$user2,_this2=this,_this$state$user3,_this$state$user4,_this$state$user5,_this$state$user6;return/*#__PURE__*/React.createElement(\"div\",{id:\"RemindersWrapper\"},/*#__PURE__*/React.createElement(\"div\",{id:\"RemindersView\",className:\"windowWrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"catTitle\"},\" Medical Health \"),/*#__PURE__*/React.createElement(\"div\",{className:\"titleLine\"}),((_this$state$user=this.state.user)===null||_this$state$user===void 0?void 0:_this$state$user.reminders[HEALTH_CATEGORIES.medical].length)===0?/*#__PURE__*/React.createElement(EmptyReminderList,null):(_this$state$user2=this.state.user)===null||_this$state$user2===void 0?void 0:_this$state$user2.reminders[HEALTH_CATEGORIES.medical].map(function(reminder){return/*#__PURE__*/React.createElement(ReminderItem,{key:reminder.id,reminder:reminder,activeUser:_this2.props.activeUser,addTimerHandler:_this2.props.addTimerHandler,notifyAboutReminder:_this2.props.notifyAboutReminder,completeReminderHandler:_this2.props.completeReminderHandler,deleteReminderHandler:_this2.props.deleteReminderHandler});}),/*#__PURE__*/React.createElement(\"span\",{className:\"catTitle\"},\" Mental Health \"),/*#__PURE__*/React.createElement(\"div\",{className:\"titleLine\"}),((_this$state$user3=this.state.user)===null||_this$state$user3===void 0?void 0:_this$state$user3.reminders[HEALTH_CATEGORIES.mental].length)===0?/*#__PURE__*/React.createElement(EmptyReminderList,null):(_this$state$user4=this.state.user)===null||_this$state$user4===void 0?void 0:_this$state$user4.reminders[HEALTH_CATEGORIES.mental].map(function(reminder){return/*#__PURE__*/React.createElement(ReminderItem,{key:reminder.id,reminder:reminder,activeUser:_this2.state.user,addTimerHandler:_this2.props.addTimerHandler,notifyAboutReminder:_this2.props.notifyAboutReminder,completeReminderHandler:_this2.props.completeReminderHandler,deleteReminderHandler:_this2.props.deleteReminderHandler});}),/*#__PURE__*/React.createElement(\"span\",{className:\"catTitle\"},\" Physical Health \"),/*#__PURE__*/React.createElement(\"div\",{className:\"titleLine\"}),((_this$state$user5=this.state.user)===null||_this$state$user5===void 0?void 0:_this$state$user5.reminders[HEALTH_CATEGORIES.phsycial].length)===0?/*#__PURE__*/React.createElement(EmptyReminderList,null):(_this$state$user6=this.state.user)===null||_this$state$user6===void 0?void 0:_this$state$user6.reminders[HEALTH_CATEGORIES.phsycial].map(function(reminder){return/*#__PURE__*/React.createElement(ReminderItem,{key:reminder.id,reminder:reminder,activeUser:_this2.state.user,addTimerHandler:_this2.props.addTimerHandler,notifyAboutReminder:_this2.props.notifyAboutReminder,completeReminderHandler:_this2.props.completeReminderHandler,deleteReminderHandler:_this2.props.deleteReminderHandler});})),/*#__PURE__*/React.createElement(NavLink,{id:\"FabNavLink\",to:\"/reminders/add\"},/*#__PURE__*/React.createElement(Fab,{variant:\"extended\",id:\"Fab\",color:\"primary\",\"aria-label\":\"add\"},/*#__PURE__*/React.createElement(AddIcon,null),\"Add Reminder\")));}}]);return Reminders;}(Component);export default Reminders;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/index.jsx"],"names":["React","Component","NavLink","Fab","AddIcon","ReminderItem","HEALTH_CATEGORIES","EmptyReminderList","Reminders","state","user","props","activeUser","reminders","medical","length","map","reminder","id","addTimerHandler","notifyAboutReminder","completeReminderHandler","deleteReminderHandler","mental","phsycial"],"mappings":"4iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,iBAAT,KAAkC,iBAAlC,CACA,MAAO,cAAP,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,mBACE,2BAAK,EAAE,CAAC,mBAAR,eACE,kDADF,CADF,CAKD,CAND,C,GAQMC,CAAAA,S,uUACJC,K,CAAQ,CACNC,IAAI,CAAE,MAAKC,KAAL,CAAWC,UADX,C,4EAMC,4HACP,mBACE,2BAAK,EAAE,CAAC,kBAAR,eACE,2BAAK,EAAE,CAAC,eAAR,CAAwB,SAAS,CAAC,eAAlC,eACE,4BAAM,SAAS,CAAC,UAAhB,qBADF,cAEE,2BAAK,SAAS,CAAC,WAAf,EAFF,CAGG,wBAAKH,KAAL,CAAWC,IAAX,4DAAiBG,SAAjB,CAA2BP,iBAAiB,CAACQ,OAA7C,EAAsDC,MAAtD,IAAiE,CAAjE,cACC,oBAAC,iBAAD,MADD,oBAGC,KAAKN,KAAL,CAAWC,IAHZ,4CAGC,kBAAiBG,SAAjB,CAA2BP,iBAAiB,CAACQ,OAA7C,EAAsDE,GAAtD,CAA0D,SAACC,QAAD,CAAc,CACtE,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEA,QAAQ,CAACC,EADhB,CAEE,QAAQ,CAAED,QAFZ,CAGE,UAAU,CAAE,MAAI,CAACN,KAAL,CAAWC,UAHzB,CAIE,eAAe,CAAE,MAAI,CAACD,KAAL,CAAWQ,eAJ9B,CAKE,mBAAmB,CAAE,MAAI,CAACR,KAAL,CAAWS,mBALlC,CAME,uBAAuB,CAAE,MAAI,CAACT,KAAL,CAAWU,uBANtC,CAOE,qBAAqB,CAAE,MAAI,CAACV,KAAL,CAAWW,qBAPpC,EADF,CAWD,CAZD,CANJ,cAoBE,4BAAM,SAAS,CAAC,UAAhB,oBApBF,cAqBE,2BAAK,SAAS,CAAC,WAAf,EArBF,CAsBG,yBAAKb,KAAL,CAAWC,IAAX,8DAAiBG,SAAjB,CAA2BP,iBAAiB,CAACiB,MAA7C,EAAqDR,MAArD,IAAgE,CAAhE,cACC,oBAAC,iBAAD,MADD,oBAGC,KAAKN,KAAL,CAAWC,IAHZ,4CAGC,kBAAiBG,SAAjB,CAA2BP,iBAAiB,CAACiB,MAA7C,EAAqDP,GAArD,CAAyD,SAACC,QAAD,CAAc,CACrE,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEA,QAAQ,CAACC,EADhB,CAEE,QAAQ,CAAED,QAFZ,CAGE,UAAU,CAAE,MAAI,CAACR,KAAL,CAAWC,IAHzB,CAIE,eAAe,CAAE,MAAI,CAACC,KAAL,CAAWQ,eAJ9B,CAKE,mBAAmB,CAAE,MAAI,CAACR,KAAL,CAAWS,mBALlC,CAME,uBAAuB,CAAE,MAAI,CAACT,KAAL,CAAWU,uBANtC,CAOE,qBAAqB,CAAE,MAAI,CAACV,KAAL,CAAWW,qBAPpC,EADF,CAWD,CAZD,CAzBJ,cAuCE,4BAAM,SAAS,CAAC,UAAhB,sBAvCF,cAwCE,2BAAK,SAAS,CAAC,WAAf,EAxCF,CAyCG,yBAAKb,KAAL,CAAWC,IAAX,8DAAiBG,SAAjB,CAA2BP,iBAAiB,CAACkB,QAA7C,EAAuDT,MAAvD,IAAkE,CAAlE,cACC,oBAAC,iBAAD,MADD,oBAGC,KAAKN,KAAL,CAAWC,IAHZ,4CAGC,kBAAiBG,SAAjB,CAA2BP,iBAAiB,CAACkB,QAA7C,EAAuDR,GAAvD,CAA2D,SAACC,QAAD,CAAc,CACvE,mBACE,oBAAC,YAAD,EACE,GAAG,CAAEA,QAAQ,CAACC,EADhB,CAEE,QAAQ,CAAED,QAFZ,CAGE,UAAU,CAAE,MAAI,CAACR,KAAL,CAAWC,IAHzB,CAIE,eAAe,CAAE,MAAI,CAACC,KAAL,CAAWQ,eAJ9B,CAKE,mBAAmB,CAAE,MAAI,CAACR,KAAL,CAAWS,mBALlC,CAME,uBAAuB,CAAE,MAAI,CAACT,KAAL,CAAWU,uBANtC,CAOE,qBAAqB,CAAE,MAAI,CAACV,KAAL,CAAWW,qBAPpC,EADF,CAWD,CAZD,CA5CJ,CADF,cA6DE,oBAAC,OAAD,EAAS,EAAE,CAAC,YAAZ,CAAyB,EAAE,CAAC,gBAA5B,eACE,oBAAC,GAAD,EAAK,OAAO,CAAC,UAAb,CAAwB,EAAE,CAAC,KAA3B,CAAiC,KAAK,CAAC,SAAvC,CAAiD,aAAW,KAA5D,eACE,oBAAC,OAAD,MADF,gBADF,CA7DF,CADF,CAsED,C,uBA9EqBrB,S,EAiFxB,cAAeO,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES } from '../../constants';\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return (\n    <div id=\"EmptyReminderList\">\n      <p> No reminders set </p>\n    </div>\n  );\n};\n\nclass Reminders extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  loadReminders;\n\n  render() {\n    return (\n      <div id=\"RemindersWrapper\">\n        <div id=\"RemindersView\" className=\"windowWrapper\">\n          <span className=\"catTitle\"> Medical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.medical].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.medical].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  activeUser={this.props.activeUser}\n                  addTimerHandler={this.props.addTimerHandler}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Mental Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.mental].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.mental].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  activeUser={this.state.user}\n                  addTimerHandler={this.props.addTimerHandler}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Physical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].map((reminder) => {\n              return (\n                <ReminderItem\n                  key={reminder.id}\n                  reminder={reminder}\n                  activeUser={this.state.user}\n                  addTimerHandler={this.props.addTimerHandler}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              );\n            })\n          )}\n        </div>\n\n        <NavLink id=\"FabNavLink\" to=\"/reminders/add\">\n          <Fab variant=\"extended\" id=\"Fab\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n            Add Reminder\n          </Fab>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Reminders;\n"]},"metadata":{},"sourceType":"module"}