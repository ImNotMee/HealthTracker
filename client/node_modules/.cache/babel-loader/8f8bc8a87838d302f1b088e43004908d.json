{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Trends/adminTrend.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\nimport { avgStress, avgCalories, avgSleep, avgWeight } from '../../actions/trends';\n\nclass AdminTrends extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser,\n      userDB: this.props.userDB,\n      trends: {\n        title: '',\n        data: [],\n        type: 'line'\n      }\n    };\n  }\n\n  renderGraph(type) {\n    let avg = [];\n\n    switch (type) {\n      case 'weight':\n        avg = avgWeight(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Body Weight',\n            data: avg,\n            type: 'line'\n          }\n        });\n        break;\n\n      case 'sleep':\n        avg = avgSleep(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Hours of Sleep',\n            data: avg,\n            type: 'bar'\n          }\n        });\n        break;\n\n      case 'calories':\n        avg = avgCalories(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Calorie Intake',\n            data: avg,\n            type: 'bar'\n          }\n        });\n        break;\n\n      case 'stress':\n        avg = avgStress(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Stress Level',\n            data: avg,\n            type: 'line'\n          }\n        });\n        break;\n\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: avg,\n            type: 'line'\n          }\n        });\n        break;\n    }\n  } // To render admin:\n  // import AdminTrends from './adminTrend';\n  // <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />\n\n\n  render() {\n    const {\n      title,\n      data,\n      type\n    } = this.state.trends;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"TrendsWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"trendsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Weight\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('sleep'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Sleep\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('calories'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Calories\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('stress'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Stress\")), /*#__PURE__*/React.createElement(Graph, {\n      data: data,\n      title: title,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AdminTrends;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Trends/adminTrend.js"],"names":["React","Component","Graph","avgStress","avgCalories","avgSleep","avgWeight","AdminTrends","state","user","props","activeUser","userDB","trends","title","data","type","renderGraph","avg","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,EAA2CC,SAA3C,QAA4D,sBAA5D;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCO,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,UADX;AAENC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAFb;AAGNC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,IAAI,EAAE,EAFA;AAGNC,QAAAA,IAAI,EAAE;AAHA;AAHF,KAD0B;AAAA;;AAWlCC,EAAAA,WAAW,CAACD,IAAD,EAAO;AAChB,QAAIE,GAAG,GAAG,EAAV;;AACA,YAAQF,IAAR;AACE,WAAK,QAAL;AACEE,QAAAA,GAAG,GAAGZ,SAAS,CAAC,KAAKE,KAAL,CAAWI,MAAZ,CAAf;AACA,aAAKO,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,qBADD;AAENC,YAAAA,IAAI,EAAEG,GAFA;AAGNF,YAAAA,IAAI,EAAE;AAHA;AADI,SAAd;AAOA;;AACF,WAAK,OAAL;AACEE,QAAAA,GAAG,GAAGb,QAAQ,CAAC,KAAKG,KAAL,CAAWI,MAAZ,CAAd;AACA,aAAKO,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,wBADD;AAENC,YAAAA,IAAI,EAAEG,GAFA;AAGNF,YAAAA,IAAI,EAAE;AAHA;AADI,SAAd;AAOA;;AACF,WAAK,UAAL;AACEE,QAAAA,GAAG,GAAGd,WAAW,CAAC,KAAKI,KAAL,CAAWI,MAAZ,CAAjB;AACA,aAAKO,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,wBADD;AAENC,YAAAA,IAAI,EAAEG,GAFA;AAGNF,YAAAA,IAAI,EAAE;AAHA;AADI,SAAd;AAOA;;AACF,WAAK,QAAL;AACEE,QAAAA,GAAG,GAAGf,SAAS,CAAC,KAAKK,KAAL,CAAWI,MAAZ,CAAf;AACA,aAAKO,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,sBADD;AAENC,YAAAA,IAAI,EAAEG,GAFA;AAGNF,YAAAA,IAAI,EAAE;AAHA;AADI,SAAd;AAOA;;AACF;AACE,aAAKG,QAAL,CAAc;AACZN,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,EADD;AAENC,YAAAA,IAAI,EAAEG,GAFA;AAGNF,YAAAA,IAAI,EAAE;AAHA;AADI,SAAd;AAOA;AAjDJ;AAmDD,GAhEiC,CAkElC;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwB,KAAKR,KAAL,CAAWK,MAAzC;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAE,MAAM,KAAKI,WAAL,CAAiB,QAAjB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,OAAjB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,eAOE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,UAAjB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAE,MAAM,KAAKA,WAAL,CAAiB,QAAjB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,CADF,eAeE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,KAAK,EAAED,KAA1B;AAAiC,MAAA,IAAI,EAAEE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF;AAmBD;;AA3FiC;;AA8FpC,eAAeT,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\nimport { avgStress, avgCalories, avgSleep, avgWeight } from '../../actions/trends';\n\nclass AdminTrends extends Component {\n  state = {\n    user: this.props.activeUser,\n    userDB: this.props.userDB,\n    trends: {\n      title: '',\n      data: [],\n      type: 'line',\n    },\n  };\n\n  renderGraph(type) {\n    let avg = [];\n    switch (type) {\n      case 'weight':\n        avg = avgWeight(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Body Weight',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      case 'sleep':\n        avg = avgSleep(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Hours of Sleep',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'calories':\n        avg = avgCalories(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Calorie Intake',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'stress':\n        avg = avgStress(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Stress Level',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n    }\n  }\n\n  // To render admin:\n  // import AdminTrends from './adminTrend';\n  // <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />\n\n  render() {\n    const { title, data, type } = this.state.trends;\n    return (\n      <div id=\"TrendsWrapper\">\n        <div id=\"trendsContainer\">\n          <button id=\"tabs\" onClick={() => this.renderGraph('weight')}>\n            Weight\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('sleep')}>\n            Sleep\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('calories')}>\n            Calories\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('stress')}>\n            Stress\n          </button>\n        </div>\n        <Graph data={data} title={title} type={type} />\n      </div>\n    );\n  }\n}\n\nexport default AdminTrends;\n"]},"metadata":{},"sourceType":"module"}