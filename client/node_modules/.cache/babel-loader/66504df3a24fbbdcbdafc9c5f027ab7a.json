{"ast":null,"code":"import { NOTIFICATION_TYPE, USER_ACCOUNT_TYPE } from '../constants';\nimport { Notification } from './notification';\nimport { Location } from './checkIn';\nconst log = console.log;\nexport const sendAlertHandler = (ctx, location) => {\n  log('Alerting users...');\n  const users = ctx.state.userDB;\n\n  for (let key in users) {\n    let user = users[key];\n\n    if (user.type === USER_ACCOUNT_TYPE && _wasUserCheckedIn(user, location)) {\n      let notif = new Notification(NOTIFICATION_TYPE.alert, 'You May Have COVID', `A covid case has been reported at ${location.name}`);\n      user.notifications.push(notif);\n      users[key] = user;\n    }\n  }\n\n  ctx.setState({\n    userDB: users\n  }, () => {\n    log('Successfully alerted users ' + JSON.stringify(ctx.state.userDB));\n  });\n};\n\nconst _wasUserCheckedIn = (user, location) => {\n  const locs = user.checkInHistory;\n\n  for (let loc in locs) {\n    if (loc.id === location.id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const addLocationHandler = (ctx, name, maxOccupancy, address, description, image) => {\n  const newLoc = new Location(name, maxOccupancy, address, description, image);\n  const locDB = ctx.state.locationDB;\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/adminCheckIn.js"],"names":["NOTIFICATION_TYPE","USER_ACCOUNT_TYPE","Notification","Location","log","console","sendAlertHandler","ctx","location","users","state","userDB","key","user","type","_wasUserCheckedIn","notif","alert","name","notifications","push","setState","JSON","stringify","locs","checkInHistory","loc","id","addLocationHandler","maxOccupancy","address","description","image","newLoc","locDB","locationDB"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,cAArD;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,gBAAgB,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACjDJ,EAAAA,GAAG,CAAC,mBAAD,CAAH;AACA,QAAMK,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAUC,MAAxB;;AACA,OAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;AACrB,QAAII,IAAI,GAAGJ,KAAK,CAACG,GAAD,CAAhB;;AACA,QAAIC,IAAI,CAACC,IAAL,KAAcb,iBAAd,IAAmCc,iBAAiB,CAACF,IAAD,EAAOL,QAAP,CAAxD,EAA0E;AACxE,UAAIQ,KAAK,GAAG,IAAId,YAAJ,CACVF,iBAAiB,CAACiB,KADR,EAEV,oBAFU,EAGT,qCAAoCT,QAAQ,CAACU,IAAK,EAHzC,CAAZ;AAKAL,MAAAA,IAAI,CAACM,aAAL,CAAmBC,IAAnB,CAAwBJ,KAAxB;AACAP,MAAAA,KAAK,CAACG,GAAD,CAAL,GAAaC,IAAb;AACD;AACF;;AAEDN,EAAAA,GAAG,CAACc,QAAJ,CACE;AACEV,IAAAA,MAAM,EAAEF;AADV,GADF,EAIE,MAAM;AACJL,IAAAA,GAAG,CAAC,gCAAgCkB,IAAI,CAACC,SAAL,CAAehB,GAAG,CAACG,KAAJ,CAAUC,MAAzB,CAAjC,CAAH;AACD,GANH;AAQD,CAxBM;;AA0BP,MAAMI,iBAAiB,GAAG,CAACF,IAAD,EAAOL,QAAP,KAAoB;AAC5C,QAAMgB,IAAI,GAAGX,IAAI,CAACY,cAAlB;;AACA,OAAK,IAAIC,GAAT,IAAgBF,IAAhB,EAAsB;AACpB,QAAIE,GAAG,CAACC,EAAJ,KAAWnB,QAAQ,CAACmB,EAAxB,EAA4B;AAC1B,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD,CARD;;AAUA,OAAO,MAAMC,kBAAkB,GAAG,CAACrB,GAAD,EAAMW,IAAN,EAAYW,YAAZ,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,KAAhD,KAA0D;AAC1F,QAAMC,MAAM,GAAG,IAAI9B,QAAJ,CAAae,IAAb,EAAmBW,YAAnB,EAAiCC,OAAjC,EAA0CC,WAA1C,EAAuDC,KAAvD,CAAf;AACA,QAAME,KAAK,GAAG3B,GAAG,CAACG,KAAJ,CAAUyB,UAAxB;AACD,CAHM","sourcesContent":["import { NOTIFICATION_TYPE, USER_ACCOUNT_TYPE } from '../constants';\nimport { Notification } from './notification';\nimport { Location } from './checkIn';\n\nconst log = console.log;\n\nexport const sendAlertHandler = (ctx, location) => {\n  log('Alerting users...');\n  const users = ctx.state.userDB;\n  for (let key in users) {\n    let user = users[key];\n    if (user.type === USER_ACCOUNT_TYPE && _wasUserCheckedIn(user, location)) {\n      let notif = new Notification(\n        NOTIFICATION_TYPE.alert,\n        'You May Have COVID',\n        `A covid case has been reported at ${location.name}`,\n      );\n      user.notifications.push(notif);\n      users[key] = user;\n    }\n  }\n\n  ctx.setState(\n    {\n      userDB: users,\n    },\n    () => {\n      log('Successfully alerted users ' + JSON.stringify(ctx.state.userDB));\n    },\n  );\n};\n\nconst _wasUserCheckedIn = (user, location) => {\n  const locs = user.checkInHistory;\n  for (let loc in locs) {\n    if (loc.id === location.id) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const addLocationHandler = (ctx, name, maxOccupancy, address, description, image) => {\n  const newLoc = new Location(name, maxOccupancy, address, description, image);\n  const locDB = ctx.state.locationDB\n}\n"]},"metadata":{},"sourceType":"module"}