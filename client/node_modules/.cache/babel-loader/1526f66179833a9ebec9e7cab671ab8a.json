{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./styles.css';import Graph from'./Graph/index.jsx';import{avgStress,avgCalories,avgSleep,avgWeight}from'../../actions/trends';var AdminTrends=/*#__PURE__*/function(_Component){_inherits(AdminTrends,_Component);var _super=_createSuper(AdminTrends);function AdminTrends(){var _this;_classCallCheck(this,AdminTrends);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.activeUser,userDB:_this.props.userDB,trends:{title:'',data:[],type:'line'}};return _this;}_createClass(AdminTrends,[{key:\"renderGraph\",value:function renderGraph(type){var avg=[];switch(type){case'weight':avg=avgWeight(this.state.userDB);this.setState({trends:{title:'Average Body Weight',data:avg,type:'line'}});break;case'sleep':avg=avgSleep(this.state.userDB);this.setState({trends:{title:'Average Hours of Sleep',data:avg,type:'bar'}});break;case'calories':avg=avgCalories(this.state.userDB);this.setState({trends:{title:'Average Calorie Intake',data:avg,type:'bar'}});break;case'stress':avg=avgStress(this.state.userDB);this.setState({trends:{title:'Average Stress Level',data:avg,type:'line'}});break;default:this.setState({trends:{title:'',data:avg,type:'line'}});break;}}// To render admin:\n// import AdminTrends from './adminTrend';\n// <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />\n},{key:\"render\",value:function render(){var _this2=this;var _this$state$trends=this.state.trends,title=_this$state$trends.title,data=_this$state$trends.data,type=_this$state$trends.type;return/*#__PURE__*/React.createElement(\"div\",{id:\"TrendsWrapper\"},/*#__PURE__*/React.createElement(\"div\",{id:\"trendsContainer\"},/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.renderGraph('weight');}},\"Weight\"),/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.renderGraph('sleep');}},\"Sleep\"),/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.renderGraph('calories');}},\"Calories\"),/*#__PURE__*/React.createElement(\"button\",{id:\"tabs\",onClick:function onClick(){return _this2.renderGraph('stress');}},\"Stress\")),/*#__PURE__*/React.createElement(Graph,{data:data,title:title,type:type}));}}]);return AdminTrends;}(Component);export default AdminTrends;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Trends/adminTrend.js"],"names":["React","Component","Graph","avgStress","avgCalories","avgSleep","avgWeight","AdminTrends","state","user","props","activeUser","userDB","trends","title","data","type","avg","setState","renderGraph"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\nimport { avgStress, avgCalories, avgSleep, avgWeight } from '../../actions/trends';\n\nclass AdminTrends extends Component {\n  state = {\n    user: this.props.activeUser,\n    userDB: this.props.userDB,\n    trends: {\n      title: '',\n      data: [],\n      type: 'line',\n    },\n  };\n\n  renderGraph(type) {\n    let avg = [];\n    switch (type) {\n      case 'weight':\n        avg = avgWeight(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Body Weight',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      case 'sleep':\n        avg = avgSleep(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Hours of Sleep',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'calories':\n        avg = avgCalories(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Calorie Intake',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'stress':\n        avg = avgStress(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Stress Level',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n    }\n  }\n\n  // To render admin:\n  // import AdminTrends from './adminTrend';\n  // <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />\n\n  render() {\n    const { title, data, type } = this.state.trends;\n    return (\n      <div id=\"TrendsWrapper\">\n        <div id=\"trendsContainer\">\n          <button id=\"tabs\" onClick={() => this.renderGraph('weight')}>\n            Weight\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('sleep')}>\n            Sleep\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('calories')}>\n            Calories\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('stress')}>\n            Stress\n          </button>\n        </div>\n        <Graph data={data} title={title} type={type} />\n      </div>\n    );\n  }\n}\n\nexport default AdminTrends;\n"]},"metadata":{},"sourceType":"module"}