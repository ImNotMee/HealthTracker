{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/client/src/js/components/ManageUser/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport { USERS, USER_ACCOUNT_TYPE, ADMIN_ACCOUNT_TYPE, ADMIN_REMINDER_TYPES } from './../../constants';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { NavLink } from 'react-router-dom';\n\nclass ManageUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickDeleteUser = user => {\n      if (user in USERS) {\n        delete USERS[user];\n        this.forceUpdate();\n      }\n    };\n\n    this.onClickAssignAdmin = user => {\n      if (user in USERS && USERS[user].type === USER_ACCOUNT_TYPE) {\n        USERS[user].type = ADMIN_ACCOUNT_TYPE;\n        USERS[user].reminders = {\n          [ADMIN_REMINDER_TYPES.task]: []\n        };\n        this.forceUpdate();\n      }\n    };\n  }\n\n  render() {\n    const keys = Object.getOwnPropertyNames(USERS);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"ManageUserWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"ManagementHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"userManageicon\",\n      src: \"https://image.flaticon.com/icons/svg/876/876176.svg\",\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), \"User Management\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"userManageBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      id: \"userListTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"User List\"), keys.map(user => {\n      if (USERS[user].type === USER_ACCOUNT_TYPE) {\n        return /*#__PURE__*/React.createElement(TableRow, {\n          id: \"userRow\",\n          key: USERS[user].email,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(TableCell, {\n          id: \"userInfoCell\",\n          component: \"th\",\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          id: \"userInfoList\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, \"User : \", USERS[user].firstName, \" \", USERS[user].lastName, ' '), /*#__PURE__*/React.createElement(\"li\", {\n          id: \"userInfoList\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }\n        }, \"Email: \", USERS[user].email)), /*#__PURE__*/React.createElement(TableCell, {\n          id: \"userManageButton\",\n          component: \"th\",\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: `/user-profile/${USERS[user].hash}`,\n          id: \"linkView\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"clickable View\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 27\n          }\n        }, \"View Profile\"))), /*#__PURE__*/React.createElement(TableCell, {\n          id: \"userManageButton\",\n          component: \"th\",\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"clickable Manage\",\n          onClick: () => this.onClickAssignAdmin(user),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }\n        }, \"Assign Admin\")), /*#__PURE__*/React.createElement(TableCell, {\n          id: \"userManageButton\",\n          component: \"th\",\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          className: \"clickable Delete\",\n          onClick: () => this.onClickDeleteUser(user),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        }, \"Remove\")));\n      } else {\n        return undefined;\n      }\n    })))));\n  }\n\n}\n\nexport default ManageUser;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/client/src/js/components/ManageUser/index.jsx"],"names":["React","Component","USERS","USER_ACCOUNT_TYPE","ADMIN_ACCOUNT_TYPE","ADMIN_REMINDER_TYPES","Button","TableCell","TableRow","NavLink","ManageUser","onClickDeleteUser","user","forceUpdate","onClickAssignAdmin","type","reminders","task","render","keys","Object","getOwnPropertyNames","map","email","firstName","lastName","hash","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport {\n  USERS,\n  USER_ACCOUNT_TYPE,\n  ADMIN_ACCOUNT_TYPE,\n  ADMIN_REMINDER_TYPES,\n} from './../../constants';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { NavLink } from 'react-router-dom';\nclass ManageUser extends Component {\n  onClickDeleteUser = (user) => {\n    if (user in USERS) {\n      delete USERS[user];\n      this.forceUpdate();\n    }\n  };\n  onClickAssignAdmin = (user) => {\n    if (user in USERS && USERS[user].type === USER_ACCOUNT_TYPE) {\n      USERS[user].type = ADMIN_ACCOUNT_TYPE;\n      USERS[user].reminders = { [ADMIN_REMINDER_TYPES.task]: [] };\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const keys = Object.getOwnPropertyNames(USERS);\n    return (\n      <div id=\"ManageUserWrapper\">\n        <h1 id=\"ManagementHeader\">\n          <img\n            id=\"userManageicon\"\n            src=\"https://image.flaticon.com/icons/svg/876/876176.svg\"\n            alt=\"icon\"\n          ></img>\n          User Management\n        </h1>\n        <div id=\"userManageBox\">\n          <div>\n            <fieldset>\n              <h2 id=\"userListTitle\">User List</h2>\n              {keys.map((user) => {\n                if (USERS[user].type === USER_ACCOUNT_TYPE) {\n                  return (\n                    <TableRow id=\"userRow\" key={USERS[user].email}>\n                      <TableCell id=\"userInfoCell\" component=\"th\" scope=\"row\">\n                        <li id=\"userInfoList\">\n                          User : {USERS[user].firstName} {USERS[user].lastName}{' '}\n                        </li>\n                        <li id=\"userInfoList\">Email: {USERS[user].email}</li>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <NavLink to={`/user-profile/${USERS[user].hash}`} id=\"linkView\">\n                          <Button className=\"clickable View\">View Profile</Button>\n                        </NavLink>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Manage\"\n                          onClick={() => this.onClickAssignAdmin(user)}\n                        >\n                          Assign Admin\n                        </Button>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Delete\"\n                          onClick={() => this.onClickDeleteUser(user)}\n                        >\n                          Remove\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                } else {\n                  return undefined;\n                }\n              })}\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManageUser;\n"]},"metadata":{},"sourceType":"module"}