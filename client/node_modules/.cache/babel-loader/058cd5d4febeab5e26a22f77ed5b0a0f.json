{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Reminders/index.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES } from '../../constants';\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"EmptyReminderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \" No reminders set \"));\n};\n\nclass Reminders extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser\n    };\n  }\n\n  render() {\n    var _this$state$user, _this$state$user2, _this$state$user3, _this$state$user4, _this$state$user5, _this$state$user6;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"RemindersWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"RemindersView\",\n      className: \"windowWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"catTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \" Medical Health \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titleLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }), ((_this$state$user = this.state.user) === null || _this$state$user === void 0 ? void 0 : _this$state$user.reminders[HEALTH_CATEGORIES.medical].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }) : (_this$state$user2 = this.state.user) === null || _this$state$user2 === void 0 ? void 0 : _this$state$user2.reminders[HEALTH_CATEGORIES.medical].map(reminder => {\n      return /*#__PURE__*/React.createElement(ReminderItem, {\n        reminder: reminder,\n        setReminderToOverdue: this.props.setReminderToOverdue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"catTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \" Mental Health \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titleLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), ((_this$state$user3 = this.state.user) === null || _this$state$user3 === void 0 ? void 0 : _this$state$user3.reminders[HEALTH_CATEGORIES.mental].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }) : (_this$state$user4 = this.state.user) === null || _this$state$user4 === void 0 ? void 0 : _this$state$user4.reminders[HEALTH_CATEGORIES.mental].map(reminder => {\n      return /*#__PURE__*/React.createElement(ReminderItem, {\n        key: reminder.id,\n        reminder: reminder,\n        setReminderToOverdue: this.props.setReminderToOverdue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"catTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \" Physical Health \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"titleLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), ((_this$state$user5 = this.state.user) === null || _this$state$user5 === void 0 ? void 0 : _this$state$user5.reminders[HEALTH_CATEGORIES.phsycial].length) === 0 ? /*#__PURE__*/React.createElement(EmptyReminderList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }) : (_this$state$user6 = this.state.user) === null || _this$state$user6 === void 0 ? void 0 : _this$state$user6.reminders[HEALTH_CATEGORIES.phsycial].map(reminder => {\n      return /*#__PURE__*/React.createElement(ReminderItem, {\n        key: reminder.id,\n        reminder: reminder,\n        setReminderToOverdue: this.props.setReminderToOverdue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      });\n    })), /*#__PURE__*/React.createElement(NavLink, {\n      id: \"FabNavLink\",\n      to: \"/reminders/add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fab, {\n      variant: \"extended\",\n      id: \"Fab\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), \"Add Reminder\")));\n  }\n\n}\n\nexport default Reminders;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/index.jsx"],"names":["React","Component","NavLink","Fab","AddIcon","ReminderItem","HEALTH_CATEGORIES","EmptyReminderList","Reminders","state","user","props","activeUser","render","reminders","medical","length","map","reminder","setReminderToOverdue","mental","id","phsycial"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES } from '../../constants'\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return (\n    <div id=\"EmptyReminderList\">\n      <p> No reminders set </p>\n    </div>\n  );\n};\n\nclass Reminders extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  loadReminders;\n\n  render() {\n    return (\n      <div id=\"RemindersWrapper\">\n        <div id=\"RemindersView\" className=\"windowWrapper\">\n          <span className=\"catTitle\"> Medical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.medical].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.medical].map((reminder) => {\n              return (\n                <ReminderItem \n                  reminder={reminder} \n                  setReminderToOverdue={this.props.setReminderToOverdue}\n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Mental Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.mental].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.mental].map((reminder) => {\n              return (\n                <ReminderItem \n                  key={reminder.id} \n                  reminder={reminder}\n                  setReminderToOverdue={this.props.setReminderToOverdue} \n                />\n              );\n            })\n          )}\n          <span className=\"catTitle\"> Physical Health </span>\n          <div className=\"titleLine\" />\n          {this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].length === 0 ? (\n            <EmptyReminderList />\n          ) : (\n            this.state.user?.reminders[HEALTH_CATEGORIES.phsycial].map((reminder) => {\n              return (\n                <ReminderItem \n                  key={reminder.id} \n                  reminder={reminder}\n                  setReminderToOverdue={this.props.setReminderToOverdue} \n                />\n              );\n            })\n          )}\n        </div>\n\n        <NavLink id=\"FabNavLink\" to=\"/reminders/add\">\n          <Fab variant=\"extended\" id=\"Fab\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n            Add Reminder\n          </Fab>\n        </NavLink>\n\n      </div>\n    );\n  }\n}\n\nexport default Reminders;\n"]},"metadata":{},"sourceType":"module"}