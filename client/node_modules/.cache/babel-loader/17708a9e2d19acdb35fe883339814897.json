{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Trends/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\n\nclass Trends extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: this.props.activeUser,\n      trends: {\n        title: '',\n        sleep: [],\n        weight: [],\n        calories: [],\n        stress: [],\n        type: 'line'\n      }\n    };\n  }\n\n  renderGraph(type) {\n    switch (type) {\n      case 'weight':\n        this.setState({\n          trends: {\n            title: 'Body Weight',\n            data: this.state.user.trends.weight,\n            type: 'line'\n          }\n        });\n        break;\n\n      case 'sleep':\n        this.setState({\n          trends: {\n            title: 'Hours of Sleep',\n            data: this.state.user.trends.sleep,\n            type: 'bar'\n          }\n        });\n        break;\n\n      case 'calories':\n        this.setState({\n          trends: {\n            title: 'Calorie Intake',\n            data: this.state.user.trends.calories,\n            type: 'bar'\n          }\n        });\n        break;\n\n      case 'stress':\n        this.setState({\n          trends: {\n            title: 'Stress Level',\n            data: this.state.user.trends.stress,\n            type: 'line'\n          }\n        });\n        break;\n\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: [],\n            type: 'line'\n          }\n        });\n        break;\n    }\n  }\n\n  render() {\n    const {\n      title,\n      data,\n      type\n    } = this.state.trends;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"TrendsWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"trendsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Weight\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('sleep'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Sleep\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('calories'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Calories\"), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"tabs\",\n      onClick: () => this.renderGraph('stress'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Stress\")), /*#__PURE__*/React.createElement(Graph, {\n      data: data,\n      title: title,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Trends;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Trends/index.jsx"],"names":["React","Component","Graph","Trends","state","user","props","activeUser","trends","title","sleep","weight","calories","stress","type","renderGraph","setState","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\n\nclass Trends extends Component {\n  state = {\n    user: this.props.activeUser,\n    trends: {\n      title: '',\n      sleep: [],\n      weight: [],\n      calories: [],\n      stress: [],\n      type: 'line',\n    },\n  };\n\n  renderGraph(type) {\n    switch (type) {\n      case 'weight':\n        this.setState({\n          trends: {\n            title: 'Body Weight',\n            data: this.state.user.trends.weight,\n            type: 'line',\n          },\n        });\n        break;\n      case 'sleep':\n        this.setState({\n          trends: {\n            title: 'Hours of Sleep',\n            data: this.state.user.trends.sleep,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'calories':\n        this.setState({\n          trends: {\n            title: 'Calorie Intake',\n            data: this.state.user.trends.calories,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'stress':\n        this.setState({\n          trends: {\n            title: 'Stress Level',\n            data: this.state.user.trends.stress,\n            type: 'line',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: [],\n            type: 'line',\n          },\n        });\n        break;\n    }\n  }\n\n  render() {\n    const { title, data, type } = this.state.trends;\n    return (\n      <div id=\"TrendsWrapper\">\n        <div id=\"trendsContainer\">\n          <button id=\"tabs\" onClick={() => this.renderGraph('weight')}>\n            Weight\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('sleep')}>\n            Sleep\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('calories')}>\n            Calories\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('stress')}>\n            Stress\n          </button>\n        </div>\n        <Graph data={data} title={title} type={type} />\n      </div>\n    );\n  }\n}\n\nexport default Trends;\n"]},"metadata":{},"sourceType":"module"}