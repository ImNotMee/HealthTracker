{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Reminders/AddReminder/index.js\";\nimport React, { Component } from 'react';\nimport ListSelector from '../../General/ListSelector';\nimport { onSelectHandler, onInputChangeHandler } from '../../../actions/utils';\nimport './styles.css';\nimport { HEALTH_CATEGORIES, HEALTH_SUB_CATEGORIES } from '../../../constants';\n\nclass AddReminder extends Component {\n  constructor(...args) {\n    var _this$props, _this$props2, _this$props3, _this$props4, _this$props5;\n\n    super(...args);\n    this.state = {\n      category: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.category,\n      subCategory: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.subCategory,\n      reminderName: (_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : _this$props3.reminderName,\n      remiderTime: (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : _this$props4.remiderTime,\n      reminderNote: (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.reminderNote\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddReminderWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddReminderWindow\",\n      className: \"windowWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, \" Add Reminder \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \" Category: \"), /*#__PURE__*/React.createElement(ListSelector, {\n      id: \"HealthCatList\",\n      name: \"categories\",\n      autoComplete: \"false\",\n      defaultValue: this.state.category === undefined ? '' : this.state.category,\n      options: Object.values(HEALTH_CATEGORIES),\n      onChangeHandler: event => {\n        onSelectHandler(this, event, \"category\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })), this.state.category !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, \" Sub-Category: \"), /*#__PURE__*/React.createElement(ListSelector, {\n      id: \"SubHealthCatList\",\n      name: \"subCategories\",\n      autoComplete: \"false\",\n      defaultValue: this.state.subCategory === undefined ? '' : this.state.subCategory,\n      options: HEALTH_SUB_CATEGORIES[this.state.category],\n      onChangeHandler: event => {\n        onSelectHandler(this, event, \"subCategory\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    })) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \" Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"ReminderTitleInput\",\n      className: \"input\",\n      type: \"text\",\n      name: \"reminderName\",\n      placeholder: \"Title\",\n      onChange: onInputChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \" When to remind: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"datetime-local\",\n      id: \"DateTimeInput\",\n      name: \"reminderTime\",\n      value: this.state.remiderTime,\n      min: new Date(),\n      onChange: onInputChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \" Notes: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"ReminderNotesInput\",\n      className: \"input\",\n      name: \"reminderNotes\",\n      maxlength: \"225\",\n      placeholder: \"Notes\",\n      onChange: event => {\n        onInputChangeHandler(this, event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"charCount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, this.state.reminderNote === undefined ? '0' : this.state.reminderNote.length, \"/225\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      onClick: this.props.addReminderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \" Add \")));\n  }\n\n}\n\nexport default AddReminder;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/AddReminder/index.js"],"names":["React","Component","ListSelector","onSelectHandler","onInputChangeHandler","HEALTH_CATEGORIES","HEALTH_SUB_CATEGORIES","AddReminder","state","category","props","subCategory","reminderName","remiderTime","reminderNote","render","undefined","Object","values","event","Date","length","addReminderHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListSelector from '../../General/ListSelector'\nimport { onSelectHandler, onInputChangeHandler} from '../../../actions/utils'\nimport './styles.css'\nimport { HEALTH_CATEGORIES, HEALTH_SUB_CATEGORIES } from '../../../constants';\n\nclass AddReminder extends Component {\n  state = {\n    category: this.props?.category,\n    subCategory: this.props?.subCategory,\n    reminderName: this.props?.reminderName,\n    remiderTime: this.props?.remiderTime,\n    reminderNote: this.props?.reminderNote\n  }\n\n  render() {\n    return (\n      <div id=\"AddReminderWrapper\" >\n        <div id=\"AddReminderWindow\" className=\"windowWrapper\">\n          <h1> Add Reminder </h1>\n          <br/>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Category: </span>\n            <ListSelector \n              id=\"HealthCatList\"\n              name=\"categories\"\n              autoComplete=\"false\"\n              defaultValue={this.state.category === undefined ? '' : this.state.category}\n              options={Object.values(HEALTH_CATEGORIES)}\n              onChangeHandler={(event)=>{onSelectHandler(this, event, \"category\")}}\n            />\n          </div>\n          {this.state.category !== undefined ?\n            <div className=\"reminderInputWrapper\">\n              <span className=\"inputLabel\"> Sub-Category: </span>\n              <ListSelector \n                id=\"SubHealthCatList\"\n                name=\"subCategories\"\n                autoComplete=\"false\"\n                defaultValue={this.state.subCategory === undefined ? '' : this.state.subCategory}\n                options={HEALTH_SUB_CATEGORIES[this.state.category]}\n                onChangeHandler={(event)=>{onSelectHandler(this, event, \"subCategory\")}}\n              /> \n            </div> : ''\n          }\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Title: </span>\n            <input \n              id=\"ReminderTitleInput\"\n              className=\"input\" \n              type=\"text\" \n              name=\"reminderName\" \n              placeholder=\"Title\"\n              onChange={onInputChangeHandler}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> When to remind: </span>\n            <input \n              className=\"input\" \n              type=\"datetime-local\" \n              id=\"DateTimeInput\"\n              name=\"reminderTime\" \n              value={this.state.remiderTime}\n              min={(new Date())}\n              onChange={onInputChangeHandler}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Notes: </span>\n            <textarea \n              id=\"ReminderNotesInput\"\n              className=\"input\"  \n              name=\"reminderNotes\"\n              maxlength='225' \n              placeholder=\"Notes\"\n              onChange={(event) => {onInputChangeHandler(this, event)}}\n            />\n            <br/>\n            <span className=\"charCount\">{this.state.reminderNote === undefined ? '0' : this.state.reminderNote.length}/225</span>\n          </div>\n          <button className=\"primary-btn\" onClick={this.props.addReminderHandler}> Add </button>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default AddReminder;"]},"metadata":{},"sourceType":"module"}