{"ast":null,"code":"import _classCallCheck from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/cd/Desktop/team27/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./styles.css';import PieChart from'./Chart.js';var Card=/*#__PURE__*/function(_Component){_inherits(Card,_Component);var _super=_createSuper(Card);function Card(){var _this;_classCallCheck(this,Card);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={user:_this.props.activeUser,title:_this.props.title,value:_this.props.value,image:_this.props.image,type:_this.props.type};return _this;}_createClass(Card,[{key:\"CardSwitch\",value:function CardSwitch(type){switch(type){case'1':// BMI\nreturn this.ShowImage('BMI');case'2':// water\nreturn this.ShowChart();case'3':// calories\nreturn this.ShowChart();case'4':// mood\nreturn this.ShowImage(this.state.value['value']);case'5':// sleep\nreturn this.ShowSleep(this.state.value['hours'],this.state.value['quality']);case'6':// stress\nreturn this.ShowStress(this.state.value['value']);case'7':// medication\nreturn;case'8':// sickness\nif(this.state.value['sick']===true)return this.ShowImage('sick');else return this.ShowImage('healthy');case'9':// appointments\nreturn;default:return;}}},{key:\"ShowChart\",value:function ShowChart(){var completed=this.state.value['completed'];var remaining=this.state.value['remaining'];var unit=this.state.value['unit'];var dataset=[completed,remaining,unit];return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PieChart,{data:dataset}),/*#__PURE__*/React.createElement(\"p\",{id:\"cardValue\"},completed,\" \",unit));}},{key:\"ShowImage\",value:function ShowImage(value){var imageSrc='';var text='';switch(value){case'angry':imageSrc='https://image.flaticon.com/icons/svg/3084/3084520.svg';text='Angry';break;case'sad':imageSrc='https://image.flaticon.com/icons/svg/3084/3084540.svg';text='Sad';break;case'thoughtful':imageSrc='https://image.flaticon.com/icons/svg/3084/3084437.svg';text='Thoughtful';break;case'soso':imageSrc='https://image.flaticon.com/icons/svg/3084/3084473.svg';text='So So';break;case'happy':imageSrc='https://image.flaticon.com/icons/svg/3084/3084424.svg';text='Happy';break;case'lovely':imageSrc='https://image.flaticon.com/icons/svg/3084/3084622.svg';text='Lovely';break;case'BMI':imageSrc='https://image.flaticon.com/icons/svg/3023/3023711.svg';text=this.state.value['value'];break;case'sick':imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/nauseated-face_1f922.png';text='Feeling Unwell';break;case'healthy':imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/face-with-party-horn-and-party-hat_1f973.png';text='Healthy!';break;default:imageSrc='https://camo.githubusercontent.com/ec4fa9947e66613fa4315e34dc4cb9581462b4d4/68747470733a2f2f692e696d6775722e636f6d2f6e4f53313264362e676966';text='';}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"cardIcon\",alt:\"card\",src:imageSrc}),/*#__PURE__*/React.createElement(\"p\",{id:\"cardValue\"},text));}},{key:\"ShowStress\",value:function ShowStress(stress){var imageSrc='';var stressInt=parseInt(stress);if(stressInt<4){imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grinning-face_1f600.png';}else if(stressInt>=4&&stressInt<7){imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grimacing-face_1f62c.png';}else{imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/angry-face_1f620.png';}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"cardIcon\",alt:\"card icon\",src:imageSrc}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{className:\"inputSlider\",type:\"range\",min:0,max:10,value:stressInt}),/*#__PURE__*/React.createElement(\"span\",{id:\"cardValue\"},stress)));}},{key:\"ShowSleep\",value:function ShowSleep(hours,quality){var imageSrc='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/sleeping-face_1f634.png';var hoursDisplay='';var qualityDisplay='';var hoursInt=parseInt(hours);if(hoursInt<5){hoursDisplay='sleepBad';}else if(hoursInt>=5&&hoursInt<7){hoursDisplay='sleepOkay';}else{hoursDisplay='sleepGood';}if(quality==='bad'){qualityDisplay='sleepBad';}else if(quality==='okay'){qualityDisplay='sleepOkay';}else{qualityDisplay='sleepGood';}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:hoursDisplay},/*#__PURE__*/React.createElement(\"img\",{className:\"sleepIcon\",alt:\"card icon\",src:imageSrc}),hours,\" Hours\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{className:qualityDisplay},\"Sleep Quality: \",quality)));}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"cardWrapper\"},/*#__PURE__*/React.createElement(\"h2\",{id:\"cardTitle\"},this.state.title),this.CardSwitch(this.state.type));}}]);return Card;}(Component);export default Card;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Card/index.jsx"],"names":["React","Component","PieChart","Card","state","user","props","activeUser","title","value","image","type","ShowImage","ShowChart","ShowSleep","ShowStress","completed","remaining","unit","dataset","imageSrc","text","stress","stressInt","parseInt","hours","quality","hoursDisplay","qualityDisplay","hoursInt","CardSwitch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport PieChart from './Chart.js';\n\nclass Card extends Component {\n  state = {\n    user: this.props.activeUser,\n    title: this.props.title,\n    value: this.props.value,\n    image: this.props.image,\n    type: this.props.type,\n  };\n\n  CardSwitch(type) {\n    switch (type) {\n      case '1': // BMI\n        return this.ShowImage('BMI');\n      case '2': // water\n        return this.ShowChart();\n      case '3': // calories\n        return this.ShowChart();\n      case '4': // mood\n        return this.ShowImage(this.state.value['value']);\n      case '5': // sleep\n        return this.ShowSleep(this.state.value['hours'], this.state.value['quality']);\n      case '6': // stress\n        return this.ShowStress(this.state.value['value']);\n      case '7': // medication\n        return;\n      case '8': // sickness\n        if (this.state.value['sick'] === true) return this.ShowImage('sick');\n        else return this.ShowImage('healthy');\n      case '9': // appointments\n        return;\n      default:\n        return;\n    }\n  }\n\n  ShowChart() {\n    const completed = this.state.value['completed'];\n    const remaining = this.state.value['remaining'];\n    const unit = this.state.value['unit'];\n    const dataset = [completed, remaining, unit];\n    return (\n      <div>\n        <PieChart data={dataset} />\n        <p id=\"cardValue\">\n          {completed} {unit}\n        </p>\n      </div>\n    );\n  }\n\n  ShowImage(value) {\n    var imageSrc = '';\n    var text = '';\n    switch (value) {\n      case 'angry':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084520.svg';\n        text = 'Angry';\n        break;\n      case 'sad':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084540.svg';\n        text = 'Sad';\n        break;\n      case 'thoughtful':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084437.svg';\n        text = 'Thoughtful';\n        break;\n      case 'soso':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084473.svg';\n        text = 'So So';\n        break;\n      case 'happy':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084424.svg';\n        text = 'Happy';\n        break;\n      case 'lovely':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084622.svg';\n        text = 'Lovely';\n        break;\n      case 'BMI':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3023/3023711.svg';\n        text = this.state.value['value'];\n        break;\n      case 'sick':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/nauseated-face_1f922.png';\n        text = 'Feeling Unwell';\n        break;\n      case 'healthy':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/face-with-party-horn-and-party-hat_1f973.png';\n        text = 'Healthy!';\n        break;\n      default:\n        imageSrc =\n          'https://camo.githubusercontent.com/ec4fa9947e66613fa4315e34dc4cb9581462b4d4/68747470733a2f2f692e696d6775722e636f6d2f6e4f53313264362e676966';\n        text = '';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card\" src={imageSrc}></img>\n        <p id=\"cardValue\">{text}</p>\n      </div>\n    );\n  }\n\n  ShowStress(stress) {\n    var imageSrc = '';\n    const stressInt = parseInt(stress);\n    if (stressInt < 4) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grinning-face_1f600.png';\n    } else if (stressInt >= 4 && stressInt < 7) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grimacing-face_1f62c.png';\n    } else {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/angry-face_1f620.png';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card icon\" src={imageSrc}></img>\n        <div>\n          <input className=\"inputSlider\" type=\"range\" min={0} max={10} value={stressInt}></input>\n          <span id=\"cardValue\">{stress}</span>\n        </div>\n      </div>\n    );\n  }\n\n  ShowSleep(hours, quality) {\n    var imageSrc =\n      'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/sleeping-face_1f634.png';\n    var hoursDisplay = '';\n    var qualityDisplay = '';\n\n    const hoursInt = parseInt(hours);\n    if (hoursInt < 5) {\n      hoursDisplay = 'sleepBad';\n    } else if (hoursInt >= 5 && hoursInt < 7) {\n      hoursDisplay = 'sleepOkay';\n    } else {\n      hoursDisplay = 'sleepGood';\n    }\n\n    if (quality === 'bad') {\n      qualityDisplay = 'sleepBad';\n    } else if (quality === 'okay') {\n      qualityDisplay = 'sleepOkay';\n    } else {\n      qualityDisplay = 'sleepGood';\n    }\n\n    return (\n      <div>\n        <div>\n          <p className={hoursDisplay}>\n            <img className=\"sleepIcon\" alt=\"card icon\" src={imageSrc}></img>\n            {hours} Hours\n          </p>\n        </div>\n        <div>\n          <p className={qualityDisplay}>Sleep Quality: {quality}</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div id=\"cardWrapper\">\n        <h2 id=\"cardTitle\">{this.state.title}</h2>\n        {this.CardSwitch(this.state.type)}\n      </div>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}