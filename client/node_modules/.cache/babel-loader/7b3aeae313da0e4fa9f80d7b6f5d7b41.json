{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/client/src/js/components/LogPages/LogWeight/index.jsx\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\nimport SavedBox from './../SavedBox/SavedBox';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weight: 0,\n      height: 0,\n      BMI: 0.0,\n      unit: 'metric',\n      saved: false\n    };\n\n    this.BMICalcStandard = () => {\n      this.BMICalc(true);\n    };\n\n    this.BMICalcMetric = () => {\n      this.BMICalc(false);\n    };\n\n    this.BMICalc = standard => {\n      // BMI = kg/m^2\n      // 1kg = 2.2 pounds\n      // 1m = 39.37 inches\n      console.log('hello');\n      let height = this.state.height;\n      let weight = this.state.weight;\n      let unit = 'metric';\n      this.setState({\n        unit: 'metric'\n      });\n\n      if (standard === true) {\n        weight = weight / 2.205;\n        height = height / 39.37;\n      }\n\n      let BMI = 0;\n\n      if (height !== 0) {\n        BMI = weight / height ** 2;\n      }\n\n      this.setState({\n        BMI: BMI\n      });\n      this.setState({\n        saved: true\n      });\n      this.setState({\n        unit: unit\n      });\n      this.props.setBMI(BMI, height, weight, unit);\n      this.savedTimeout = setTimeout(() => this.setState({\n        saved: false\n      }), 3000);\n    };\n\n    this.weightChange = event => {\n      const weightInt = event.target.value;\n      this.setState({\n        weight: weightInt\n      });\n    };\n\n    this.heightChange = event => {\n      const heightInt = event.target.value;\n      this.setState({\n        height: heightInt\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.savedTimeout);\n  }\n\n  metricInput() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"weightLog\",\n      placeholder: \"Enter Weight\",\n      value: this.state.weight,\n      onChange: this.weightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"kg(kilograms)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"heightLog\",\n      placeholder: \"Enter Height\",\n      value: this.state.height,\n      onChange: this.heightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"m(meters)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"BMI = Weight(kg) / [height(m)]^2\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Underweight: ~18.5\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Healthy weight: 18.5 ~ 24.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Overweight: 25 ~ 29.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Obese: 30 ~ 39.9\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      id: \"logButton\",\n      onClick: this.BMICalcMetric,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n  standardInput() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"weightLog\",\n      placeholder: \"Enter Weight\",\n      value: this.state.weight,\n      onChange: this.weightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"lbs(pounds)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"heightLog\",\n      placeholder: \"Enter Height\",\n      value: this.state.height,\n      onChange: this.heightChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      id: \"units\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, \"in(inches)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, \"BMI = 703 * Weight(lbs) / [height(in)]^2\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Underweight: ~18.5\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Healthy weight: 18.5 ~ 24.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, \"Overweight: 25 ~ 29.9\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Obese: 30 ~ 39.9\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"primary-btn\",\n      id: \"logButton\",\n      onClick: this.BMICalcStandard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Save\"));\n  }\n\n  render() {\n    let saved = null;\n\n    if (this.state.saved === true) {\n      saved = /*#__PURE__*/React.createElement(SavedBox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"LogWeightWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logWeightView left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/overview\",\n      id: \"closeButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"xButton\",\n      src: \"https://image.flaticon.com/icons/svg/565/565313.svg\",\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"weightHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"icon\",\n      src: \"https://image.flaticon.com/icons/svg/3023/3023711.svg\",\n      alt: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), \"Body Mass Index\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TabList, {\n      id: \"weightTab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      label: \"Metric\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, this.metricInput()), /*#__PURE__*/React.createElement(\"div\", {\n      label: \"Standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, this.standardInput()))), saved), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logWeightView right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TipBox, {\n      label: \"physical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default LogWeight;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/client/src/js/components/LogPages/LogWeight/index.jsx"],"names":["React","Component","TabList","NavLink","SavedBox","TipBox","LogWeight","state","weight","height","BMI","unit","saved","BMICalcStandard","BMICalc","BMICalcMetric","standard","console","log","setState","props","setBMI","savedTimeout","setTimeout","weightChange","event","weightInt","target","value","heightChange","heightInt","componentWillUnmount","clearTimeout","metricInput","standardInput","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\nimport SavedBox from './../SavedBox/SavedBox';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  state = {\n    weight: 0,\n    height: 0,\n    BMI: 0.0,\n    unit: 'metric',\n    saved: false,\n  };\n\n  BMICalcStandard = () => {\n    this.BMICalc(true);\n  };\n\n  BMICalcMetric = () => {\n    this.BMICalc(false);\n  };\n\n  BMICalc = (standard) => {\n    // BMI = kg/m^2\n    // 1kg = 2.2 pounds\n    // 1m = 39.37 inches\n    console.log('hello');\n    let height = this.state.height;\n    let weight = this.state.weight;\n    let unit = 'metric';\n    this.setState({ unit: 'metric' });\n    if (standard === true) {\n      weight = weight / 2.205;\n      height = height / 39.37;\n    }\n    let BMI = 0;\n    if (height !== 0) {\n      BMI = weight / height ** 2;\n    }\n    this.setState({ BMI: BMI });\n    this.setState({ saved: true });\n    this.setState({ unit: unit });\n    this.props.setBMI(BMI, height, weight, unit);\n    this.savedTimeout = setTimeout(() => this.setState({ saved: false }), 3000);\n  };\n\n  weightChange = (event) => {\n    const weightInt = event.target.value;\n    this.setState({ weight: weightInt });\n  };\n\n  heightChange = (event) => {\n    const heightInt = event.target.value;\n    this.setState({ height: heightInt });\n  };\n\n  componentWillUnmount() {\n    clearTimeout(this.savedTimeout);\n  }\n\n  metricInput() {\n    return (\n      <div>\n        <input\n          type=\"number\"\n          id=\"weightLog\"\n          placeholder=\"Enter Weight\"\n          value={this.state.weight}\n          onChange={this.weightChange}\n        />\n        <label id=\"units\">kg(kilograms)</label>\n        <input\n          type=\"number\"\n          id=\"heightLog\"\n          placeholder=\"Enter Height\"\n          value={this.state.height}\n          onChange={this.heightChange}\n        />\n        <label id=\"units\">m(meters)</label>\n        <p>BMI = Weight(kg) / [height(m)]^2</p>\n        <ul>\n          <li>Underweight: ~18.5</li>\n          <li>Healthy weight: 18.5 ~ 24.9</li>\n          <li>Overweight: 25 ~ 29.9</li>\n          <li>Obese: 30 ~ 39.9</li>\n        </ul>\n        <button className=\"primary-btn\" id=\"logButton\" onClick={this.BMICalcMetric}>\n          Save\n        </button>\n      </div>\n    );\n  }\n\n  standardInput() {\n    return (\n      <div>\n        <input\n          type=\"number\"\n          id=\"weightLog\"\n          placeholder=\"Enter Weight\"\n          value={this.state.weight}\n          onChange={this.weightChange}\n        />\n        <label id=\"units\">lbs(pounds)</label>\n        <input\n          type=\"number\"\n          id=\"heightLog\"\n          placeholder=\"Enter Height\"\n          value={this.state.height}\n          onChange={this.heightChange}\n        />\n        <label id=\"units\">in(inches)</label>\n        <p>BMI = 703 * Weight(lbs) / [height(in)]^2</p>\n        <ul>\n          <li>Underweight: ~18.5</li>\n          <li>Healthy weight: 18.5 ~ 24.9</li>\n          <li>Overweight: 25 ~ 29.9</li>\n          <li>Obese: 30 ~ 39.9</li>\n        </ul>\n        <button className=\"primary-btn\" id=\"logButton\" onClick={this.BMICalcStandard}>\n          Save\n        </button>\n      </div>\n    );\n  }\n  render() {\n    let saved = null;\n    if (this.state.saved === true) {\n      saved = <SavedBox />;\n    }\n    return (\n      <div id=\"LogWeightWrapper\">\n        <div className=\"logWeightView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n          <h1 id=\"weightHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3023/3023711.svg\"\n              alt=\"icon\"\n            ></img>\n            Body Mass Index\n          </h1>\n          <div className=\"logbox\">\n            <TabList id=\"weightTab\">\n              <div label=\"Metric\">{this.metricInput()}</div>\n              <div label=\"Standard\">{this.standardInput()}</div>\n            </TabList>\n          </div>\n          {/*saved dialog box*/}\n          {saved}\n        </div>\n\n        <div className=\"logWeightView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogWeight;\n"]},"metadata":{},"sourceType":"module"}