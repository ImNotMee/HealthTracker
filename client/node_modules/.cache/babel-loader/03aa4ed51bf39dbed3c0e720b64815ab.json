{"ast":null,"code":"var _jsxFileName = \"/Users/cd/Desktop/team27/src/js/components/Reminders/AddReminder/index.js\";\nimport React, { Component } from 'react';\nimport ListSelector from '../../General/ListSelector';\nimport { onSelectHandler } from '../../../actions/utils';\nimport './styles.css';\nimport { HEALTH_CATEGORIES, HEALTH_SUB_CATEGORIES } from '../../../constants';\n\nclass AddReminder extends Component {\n  constructor(...args) {\n    var _this$props, _this$props2, _this$props3, _this$props4, _this$props5;\n\n    super(...args);\n    this.state = {\n      category: (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.category,\n      subCategory: (_this$props2 = this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.subCategory,\n      reminderName: (_this$props3 = this.props) === null || _this$props3 === void 0 ? void 0 : _this$props3.reminderName,\n      remiderTime: (_this$props4 = this.props) === null || _this$props4 === void 0 ? void 0 : _this$props4.remiderTime,\n      reminderNote: (_this$props5 = this.props) === null || _this$props5 === void 0 ? void 0 : _this$props5.reminderNote\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"AddReminderWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, \" Category: \"), /*#__PURE__*/React.createElement(ListSelector, {\n      id: \"HealthCatList\",\n      name: \"categories\",\n      autoComplete: \"false\",\n      defaultValue: this.state.category === undefined ? '' : this.state.category,\n      options: Object.values(HEALTH_CATEGORIES),\n      onChangeHandler: event => {\n        onSelectHandler(this, event, \"category\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    })), this.state.category !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \" Sub-Category: \"), /*#__PURE__*/React.createElement(ListSelector, {\n      id: \"SubHealthCatList\",\n      name: \"sub-categories\",\n      autoComplete: \"false\",\n      defaultValue: this.state.subCategory === undefined ? '' : this.state.subCategory,\n      options: HEALTH_SUB_CATEGORIES[this.state.category],\n      onChangeHandler: event => {\n        onSelectHandler(this, event, \"subCategory\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })) : '', /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, \" Title: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"text\",\n      name: \"reminder-name\",\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \" When to remind: \"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"input\",\n      type: \"datetime-local\",\n      id: \"DateTimeInput\",\n      name: \"reminderTime\",\n      value: this.state.remiderTime,\n      min: new Date(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reminderInputWrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, \" Notes: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"input\",\n      name: \"reminder-notes\",\n      maxlength: \"225\",\n      placeholder: \"Notes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, this.state.reminderNote === undefined ? '0' : this.state.reminderNote.length, \"/225\")));\n  }\n\n}\n\nexport default AddReminder;","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/components/Reminders/AddReminder/index.js"],"names":["React","Component","ListSelector","onSelectHandler","HEALTH_CATEGORIES","HEALTH_SUB_CATEGORIES","AddReminder","state","category","props","subCategory","reminderName","remiderTime","reminderNote","render","undefined","Object","values","event","Date","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListSelector from '../../General/ListSelector'\nimport { onSelectHandler } from '../../../actions/utils'\nimport './styles.css'\nimport { HEALTH_CATEGORIES, HEALTH_SUB_CATEGORIES } from '../../../constants';\n\nclass AddReminder extends Component {\n  state = {\n    category: this.props?.category,\n    subCategory: this.props?.subCategory,\n    reminderName: this.props?.reminderName,\n    remiderTime: this.props?.remiderTime,\n    reminderNote: this.props?.reminderNote\n  }\n\n  render() {\n    return (\n      <div id=\"AddReminderWrapper\" >\n        <div className=\"reminderInputWrapper\">\n          <h3> Category: </h3>\n          <ListSelector \n            id=\"HealthCatList\"\n            name=\"categories\"\n            autoComplete=\"false\"\n            defaultValue={this.state.category === undefined ? '' : this.state.category}\n            options={Object.values(HEALTH_CATEGORIES)}\n            onChangeHandler={(event)=>{onSelectHandler(this, event, \"category\")}}\n          />\n        </div>\n        {this.state.category !== undefined ?\n          <div className=\"reminderInputWrapper\">\n            <h3> Sub-Category: </h3>\n            <ListSelector \n              id=\"SubHealthCatList\"\n              name=\"sub-categories\"\n              autoComplete=\"false\"\n              defaultValue={this.state.subCategory === undefined ? '' : this.state.subCategory}\n              options={HEALTH_SUB_CATEGORIES[this.state.category]}\n              onChangeHandler={(event)=>{onSelectHandler(this, event, \"subCategory\")}}\n            /> \n          </div> : ''\n        }\n        <div className=\"reminderInputWrapper\">\n          <h3> Title: </h3>\n          <input \n            className=\"input\" \n            type=\"text\" \n            name=\"reminder-name\" \n            placeholder=\"Title\"\n          />\n        </div>\n        <div className=\"reminderInputWrapper\">\n          <h3> When to remind: </h3>\n          <input \n            className=\"input\" \n            type=\"datetime-local\" \n            id=\"DateTimeInput\"\n            name=\"reminderTime\" \n            value={this.state.remiderTime}\n            min={(new Date())}\n          />\n        </div>\n        <div className=\"reminderInputWrapper\">\n          <h3> Notes: </h3>\n          <textarea \n            className=\"input\"  \n            name=\"reminder-notes\"\n            maxlength='225' \n            placeholder=\"Notes\"\n          />\n          <br/>\n          <span>{this.state.reminderNote === undefined ? '0' : this.state.reminderNote.length}/225</span>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default AddReminder;"]},"metadata":{},"sourceType":"module"}