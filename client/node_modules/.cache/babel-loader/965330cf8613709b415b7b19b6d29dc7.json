{"ast":null,"code":"import { HEALTH_CATEGORIES, USER_ACCOUNT_TYPE } from '../constants';\nconst log = console.log;\nexport const addUserHandler = (ctx, newUser) => {\n  log('Adding user...');\n  const users = ctx.state.userDB;\n  users[newUser.hash] = newUser;\n  ctx.setState({\n    userDB: users\n  });\n  log(ctx.state.userDB);\n};\nexport const signUpUser = signUpCtx => {\n  log('Creating user...');\n  const inputs = signUpCtx.state;\n  const newUser = new User(inputs.first, inputs.last, inputs.email, inputs.password, inputs.accountType, inputs.sex);\n  signUpCtx.props.addUserHandler(newUser);\n  log('User successfully added');\n\n  _clearSignUpInputs(signUpCtx);\n};\nexport class User {\n  constructor(firstName, lastName, email, password, sex) {\n    this.getHash = () => {\n      return this.hash;\n    };\n\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.password = password;\n    this.type = USER_ACCOUNT_TYPE;\n    this.sex = sex;\n    this.hash = this.email + this.password;\n    this.reminders = {\n      [HEALTH_CATEGORIES.medical]: [],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: []\n    };\n    this.notifications = [];\n  }\n\n}\n\nconst _clearSignUpInputs = ctx => {\n  ctx.setState({\n    first: '',\n    last: '',\n    email: '',\n    password: '',\n    sex: '',\n    accountType: ''\n  });\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/signUp.js"],"names":["HEALTH_CATEGORIES","USER_ACCOUNT_TYPE","log","console","addUserHandler","ctx","newUser","users","state","userDB","hash","setState","signUpUser","signUpCtx","inputs","User","first","last","email","password","accountType","sex","props","_clearSignUpInputs","constructor","firstName","lastName","getHash","type","reminders","medical","mental","phsycial","notifications"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,cAArD;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,cAAc,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC9CJ,EAAAA,GAAG,CAAC,gBAAD,CAAH;AACA,QAAMK,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAUC,MAAxB;AAEAF,EAAAA,KAAK,CAACD,OAAO,CAACI,IAAT,CAAL,GAAsBJ,OAAtB;AACAD,EAAAA,GAAG,CAACM,QAAJ,CAAa;AACXF,IAAAA,MAAM,EAAEF;AADG,GAAb;AAGAL,EAAAA,GAAG,CAACG,GAAG,CAACG,KAAJ,CAAUC,MAAX,CAAH;AACD,CATM;AAWP,OAAO,MAAMG,UAAU,GAAIC,SAAD,IAAe;AACvCX,EAAAA,GAAG,CAAC,kBAAD,CAAH;AACA,QAAMY,MAAM,GAAGD,SAAS,CAACL,KAAzB;AACA,QAAMF,OAAO,GAAG,IAAIS,IAAJ,CACdD,MAAM,CAACE,KADO,EAEdF,MAAM,CAACG,IAFO,EAGdH,MAAM,CAACI,KAHO,EAIdJ,MAAM,CAACK,QAJO,EAKdL,MAAM,CAACM,WALO,EAMdN,MAAM,CAACO,GANO,CAAhB;AAQAR,EAAAA,SAAS,CAACS,KAAV,CAAgBlB,cAAhB,CAA+BE,OAA/B;AACAJ,EAAAA,GAAG,CAAC,yBAAD,CAAH;;AACAqB,EAAAA,kBAAkB,CAACV,SAAD,CAAlB;AACD,CAdM;AAgBP,OAAO,MAAME,IAAN,CAAW;AAChBS,EAAAA,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBR,KAAtB,EAA6BC,QAA7B,EAAuCE,GAAvC,EAA4C;AAAA,SAgBvDM,OAhBuD,GAgB7C,MAAM;AACd,aAAO,KAAKjB,IAAZ;AACD,KAlBsD;;AACrD,SAAKe,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKR,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKS,IAAL,GAAY3B,iBAAZ;AACA,SAAKoB,GAAL,GAAWA,GAAX;AACA,SAAKX,IAAL,GAAY,KAAKQ,KAAL,GAAa,KAAKC,QAA9B;AACA,SAAKU,SAAL,GAAiB;AACf,OAAC7B,iBAAiB,CAAC8B,OAAnB,GAA6B,EADd;AAEf,OAAC9B,iBAAiB,CAAC+B,MAAnB,GAA4B,EAFb;AAGf,OAAC/B,iBAAiB,CAACgC,QAAnB,GAA8B;AAHf,KAAjB;AAKA,SAAKC,aAAL,GAAqB,EAArB;AACD;;AAfe;;AAsBlB,MAAMV,kBAAkB,GAAIlB,GAAD,IAAS;AAClCA,EAAAA,GAAG,CAACM,QAAJ,CAAa;AACXK,IAAAA,KAAK,EAAE,EADI;AAEXC,IAAAA,IAAI,EAAE,EAFK;AAGXC,IAAAA,KAAK,EAAE,EAHI;AAIXC,IAAAA,QAAQ,EAAE,EAJC;AAKXE,IAAAA,GAAG,EAAE,EALM;AAMXD,IAAAA,WAAW,EAAE;AANF,GAAb;AAQD,CATD","sourcesContent":["import { HEALTH_CATEGORIES, USER_ACCOUNT_TYPE } from '../constants';\n\nconst log = console.log;\n\nexport const addUserHandler = (ctx, newUser) => {\n  log('Adding user...');\n  const users = ctx.state.userDB;\n\n  users[newUser.hash] = newUser;\n  ctx.setState({\n    userDB: users,\n  });\n  log(ctx.state.userDB);\n};\n\nexport const signUpUser = (signUpCtx) => {\n  log('Creating user...');\n  const inputs = signUpCtx.state;\n  const newUser = new User(\n    inputs.first,\n    inputs.last,\n    inputs.email,\n    inputs.password,\n    inputs.accountType,\n    inputs.sex,\n  );\n  signUpCtx.props.addUserHandler(newUser);\n  log('User successfully added');\n  _clearSignUpInputs(signUpCtx);\n};\n\nexport class User {\n  constructor(firstName, lastName, email, password, sex) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.password = password;\n    this.type = USER_ACCOUNT_TYPE;\n    this.sex = sex;\n    this.hash = this.email + this.password;\n    this.reminders = {\n      [HEALTH_CATEGORIES.medical]: [],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: [],\n    };\n    this.notifications = [];\n  }\n\n  getHash = () => {\n    return this.hash;\n  };\n}\n\nconst _clearSignUpInputs = (ctx) => {\n  ctx.setState({\n    first: '',\n    last: '',\n    email: '',\n    password: '',\n    sex: '',\n    accountType: '',\n  });\n};\n"]},"metadata":{},"sourceType":"module"}