{"ast":null,"code":"const log = console.log;\nexport const setActiveUser = (app, user) => {\n  app.setState({\n    activeUser: user\n  });\n};\nexport const onLogin = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n\n  const user = getUserByAuthKey(landingPage, authKey); // check login attempt\n\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true\n    });\n    log('Invalid aogin attempt. Try again');\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false\n    });\n    landingPage.props.setActiveUserHandler(user);\n    log('Successful login');\n  }\n};\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n\n  if (userId === undefined) {\n    return userId;\n  }\n\n  return getUserById(ctx, userId);\n};\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/login.js"],"names":["log","console","setActiveUser","app","user","setState","activeUser","onLogin","landingPage","email","password","authKey","_getUserHash","getUserByAuthKey","undefined","invalidLogin","userEmail","userPassword","props","setActiveUserHandler","ctx","userId","state","loginUserIdMap","getUserById","id","users"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,aAAa,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1CD,EAAAA,GAAG,CAACE,QAAJ,CAAa;AACXC,IAAAA,UAAU,EAAEF;AADD,GAAb;AAGD,CAJM;AAMP,OAAO,MAAMG,OAAO,GAAG,CAACC,WAAD,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AACvD,QAAMC,OAAO,GAAGC,YAAY,CAACH,KAAD,EAAQC,QAAR,CAA5B;;AACA,QAAMN,IAAI,GAAGS,gBAAgB,CAACL,WAAD,EAAcG,OAAd,CAA7B,CAFuD,CAGvD;;AACA,MAAIP,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKU,SAA9B,EAAyC;AACvCN,IAAAA,WAAW,CAACH,QAAZ,CAAqB;AACnBU,MAAAA,YAAY,EAAE;AADK,KAArB;AAGAf,IAAAA,GAAG,CAAC,kCAAD,CAAH;AACD,GALD,MAKO;AACLQ,IAAAA,WAAW,CAACH,QAAZ,CAAqB;AACnBW,MAAAA,SAAS,EAAEP,KADQ;AAEnBQ,MAAAA,YAAY,EAAEP,QAFK;AAGnBK,MAAAA,YAAY,EAAE;AAHK,KAArB;AAKAP,IAAAA,WAAW,CAACU,KAAZ,CAAkBC,oBAAlB,CAAuCf,IAAvC;AACAJ,IAAAA,GAAG,CAAC,kBAAD,CAAH;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMY,YAAY,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC/C,SAAOD,KAAK,GAAGC,QAAf;AACD,CAFM;AAIP,OAAO,MAAMG,gBAAgB,GAAG,CAACO,GAAD,EAAMT,OAAN,KAAkB;AAChD,QAAMU,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAUC,cAAV,CAAyBZ,OAAzB,CAAf;;AACA,MAAIU,MAAM,KAAKP,SAAf,EAA0B;AACxB,WAAOO,MAAP;AACD;;AACD,SAAOG,WAAW,CAACJ,GAAD,EAAMC,MAAN,CAAlB;AACD,CANM;AAQP,OAAO,MAAMG,WAAW,GAAG,CAACJ,GAAD,EAAMK,EAAN,KAAa;AACtC,SAAOL,GAAG,CAACE,KAAJ,CAAUI,KAAV,CAAgBD,EAAhB,CAAP;AACD,CAFM","sourcesContent":["const log = console.log;\n\nexport const setActiveUser = (app, user) => {\n  app.setState({\n    activeUser: user,\n  });\n};\n\nexport const onLogin = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n  const user = getUserByAuthKey(landingPage, authKey);\n  // check login attempt\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true,\n    });\n    log('Invalid aogin attempt. Try again');\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false,\n    });\n    landingPage.props.setActiveUserHandler(user);\n    log('Successful login');\n  }\n};\n\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\n\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n  if (userId === undefined) {\n    return userId;\n  }\n  return getUserById(ctx, userId);\n};\n\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};\n"]},"metadata":{},"sourceType":"module"}