{"ast":null,"code":"const log = console.log;\nexport const setActiveUser = (app, user) => {\n  app.setState({\n    activeUser: user\n  }, () => {\n    log(`${app.state.activeUser === user ? 'Successfully' : 'Unsuccessfully'} login`);\n  });\n};\nexport const onLoginHandler = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n\n  const user = landingPage.props.users[authKey]; // check login attempt\n\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true\n    });\n    log('Invalid aogin attempt. Try again');\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false\n    });\n    landingPage.props.setActiveUserHandler(user);\n  }\n};\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n\n  if (userId === undefined) {\n    return userId;\n  }\n\n  return getUserById(ctx, userId);\n};\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};","map":{"version":3,"sources":["/Users/cd/Desktop/team27/src/js/actions/login.js"],"names":["log","console","setActiveUser","app","user","setState","activeUser","state","onLoginHandler","landingPage","email","password","authKey","_getUserHash","props","users","undefined","invalidLogin","userEmail","userPassword","setActiveUserHandler","getUserByAuthKey","ctx","userId","loginUserIdMap","getUserById","id"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACD,GAApB;AAEA,OAAO,MAAME,aAAa,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1CD,EAAAA,GAAG,CAACE,QAAJ,CAAa;AACXC,IAAAA,UAAU,EAAEF;AADD,GAAb,EAEG,MAAM;AACPJ,IAAAA,GAAG,CAAE,GAAEG,GAAG,CAACI,KAAJ,CAAUD,UAAV,KAAyBF,IAAzB,GAAgC,cAAhC,GAAiD,gBAAiB,QAAtE,CAAH;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMI,cAAc,GAAG,CAACC,WAAD,EAAcC,KAAd,EAAqBC,QAArB,KAAkC;AAC9D,QAAMC,OAAO,GAAGC,YAAY,CAACH,KAAD,EAAQC,QAAR,CAA5B;;AACA,QAAMP,IAAI,GAAGK,WAAW,CAACK,KAAZ,CAAkBC,KAAlB,CAAwBH,OAAxB,CAAb,CAF8D,CAG9D;;AACA,MAAIR,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAKY,SAA9B,EAAyC;AACvCP,IAAAA,WAAW,CAACJ,QAAZ,CAAqB;AACnBY,MAAAA,YAAY,EAAE;AADK,KAArB;AAGAjB,IAAAA,GAAG,CAAC,kCAAD,CAAH;AACD,GALD,MAKO;AACLS,IAAAA,WAAW,CAACJ,QAAZ,CAAqB;AACnBa,MAAAA,SAAS,EAAER,KADQ;AAEnBS,MAAAA,YAAY,EAAER,QAFK;AAGnBM,MAAAA,YAAY,EAAE;AAHK,KAArB;AAKAR,IAAAA,WAAW,CAACK,KAAZ,CAAkBM,oBAAlB,CAAuChB,IAAvC;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMS,YAAY,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAqB;AAC/C,SAAOD,KAAK,GAAGC,QAAf;AACD,CAFM;AAIP,OAAO,MAAMU,gBAAgB,GAAG,CAACC,GAAD,EAAMV,OAAN,KAAkB;AAChD,QAAMW,MAAM,GAAGD,GAAG,CAACf,KAAJ,CAAUiB,cAAV,CAAyBZ,OAAzB,CAAf;;AACA,MAAIW,MAAM,KAAKP,SAAf,EAA0B;AACxB,WAAOO,MAAP;AACD;;AACD,SAAOE,WAAW,CAACH,GAAD,EAAMC,MAAN,CAAlB;AACD,CANM;AAQP,OAAO,MAAME,WAAW,GAAG,CAACH,GAAD,EAAMI,EAAN,KAAa;AACtC,SAAOJ,GAAG,CAACf,KAAJ,CAAUQ,KAAV,CAAgBW,EAAhB,CAAP;AACD,CAFM","sourcesContent":["const log = console.log;\n\nexport const setActiveUser = (app, user) => {\n  app.setState({\n    activeUser: user,\n  }, () => {\n    log(`${app.state.activeUser === user ? 'Successfully' : 'Unsuccessfully'} login`);\n  });\n};\n\nexport const onLoginHandler = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n  const user = landingPage.props.users[authKey];\n  // check login attempt\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true,\n    });\n    log('Invalid aogin attempt. Try again');\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false,\n    });\n    landingPage.props.setActiveUserHandler(user);\n  }\n};\n\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\n\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n  if (userId === undefined) {\n    return userId;\n  }\n  return getUserById(ctx, userId);\n};\n\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};\n"]},"metadata":{},"sourceType":"module"}