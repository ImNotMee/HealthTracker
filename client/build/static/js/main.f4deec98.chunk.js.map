{"version":3,"sources":["assets/good_status.png","assets/bad_status.png","assets/logo.svg","assets/alert.png","assets/bell.png","assets/hourglass.png","assets/light.mp3","assets/map.png","assets/adminMap.png","js/components/Calendar/calendar.js","js/actions/utils.js","js/components/LandingPage/Login/index.jsx","js/constants.js","js/components/LandingPage/Header/index.jsx","js/components/General/ListSelector/index.jsx","js/actions/signUp.js","js/components/LandingPage/SignUp/index.jsx","js/actions/login.js","js/components/LandingPage/index.jsx","js/components/General/Notification/index.js","js/components/UserSettings/index.js","js/components/SideBar/index.jsx","js/components/Card/Chart.js","js/components/Card/index.jsx","js/components/Overview/index.jsx","js/components/LogPages/LogWeight/Tab.js","js/components/LogPages/LogWeight/TabList.js","js/components/LogPages/TipBox/TipBox.jsx","js/components/LogPages/LogWeight/index.jsx","js/components/LogPages/LogWater/index.jsx","js/components/LogPages/LogCalories/index.jsx","js/components/LogPages/LogMood/RadioMood.js","js/components/LogPages/LogMood/index.jsx","js/components/LogPages/LogSleep/RadioSleep.js","js/components/LogPages/LogSleep/index.jsx","js/components/LogPages/LogStress/index.jsx","js/components/LogPages/LogSick/SymptomInput/SymptomInput.jsx","js/actions/sicknessTag.js","js/components/LogPages/LogSick/SymptomTag/SymptomTag.jsx","js/components/LogPages/LogSick/SymptomList/SymptomList.jsx","js/components/LogPages/LogSick/index.jsx","js/components/Trends/Graph/index.jsx","js/components/Trends/index.jsx","js/actions/notification.js","js/components/Reminders/ReminderItem/index.js","js/components/Reminders/index.jsx","js/components/Reminders/AddReminder/index.js","js/components/Calendar/appointment.js","js/components/Calendar/streaks.js","js/actions/calendarItems.js","js/components/Calendar/index.jsx","js/components/General/LocationSelector/index.js","js/actions/checkIn.js","js/components/CheckIn/PlaceViewer/index.js","js/components/CheckIn/CheckOutView/index.js","js/components/CheckIn/index.jsx","js/components/AdminCheckIn/index.js","js/components/AddLocation/index.js","js/actions/trends.js","js/components/Trends/adminTrend.js","js/components/ManageUser/index.jsx","js/components/UserProfile/index.jsx","js/components/HomePage/index.jsx","js/actions/settings.js","js/actions/adminCheckIn.js","js/actions/logout.js","js/actions/reminders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","date","onSelectHandler","ctx","event","key","TARGET","target","setState","value","onInputChangeHandler","name","LoginForm","state","email","password","invalidLogin","props","invalidLoginStatus","displayErrorMsg","className","id","this","type","onChange","placeholder","onClick","loginHandler","Component","HEALTH_CATEGORIES","phsycial","mental","medical","HEALTH_SUB_CATEGORIES","REMINDER_STATUS","NOTIFICATION_TYPE","ADMIN_REMINDER_TYPES","task","USERS","useruser","firstName","lastName","hash","sex","timers","checkInHistory","reminders","category","subCategory","time","note","status","notifications","title","message","trends","weight","sleep","calories","stress","adminadmin","undefined","PAGE_ADDRESS","LOCATIONS","isAvaliable","address","country","imageUrl","maxOccupancy","currOccupancy","description","PHYSICAL_TIP","MENTAL_TIP","MOODLIST","icon","DAYSOFWEEK","SYMPTOM_OPTION","MONTHS","Header","src","logo","width","alt","Login","loginValidityStatus","ListSelector","user","activeUser","options","onChangeHandler","autoComplete","list","defaultValue","map","log","console","_signUpInputValidate","signUpCtx","isFirstValid","_isInvalid","first","isLastValid","last","isEmailValid","_isEmailValid","users","isPassValid","isSexValid","User","getHash","_clearSignUpInputs","SignUpForm","inputs","newUser","addUserHandler","signUpUser","_getUserHash","LandingPage","userEmail","userPassword","landingPage","authKey","setActiveUserHandler","onLoginHandler","SignUp","Notification","notification","alertIcon","bellIcon","removeNotificationHandler","UserSettings","pass","newInfoSet","goToAlertSystem","to","saveUserInfoHandler","Sidebar","profilePic","notifCount","count","getUserNavOptions","activeClassName","reminderCount","alertCount","getAdminNavOptions","IconButton","aria-label","logoutHandler","PieChart","chartRef","React","createRef","pieChartRef","current","getContext","Chart","data","labels","datasets","backgroundColor","ref","Card","image","ShowImage","ShowChart","ShowSleep","ShowStress","completed","remaining","unit","dataset","imageSrc","text","stressInt","parseInt","min","max","hours","quality","hoursDisplay","qualityDisplay","hoursInt","add","CardSwitch","Overview","BMI","Water","Calories","Mood","Sleep","Stress","Medication","drug","remainging","Sickness","sick","Appointments","doctor","Tab","label","activeTab","TabList","children","onClickTab","tab","child","TipBox","tip","LogWeight","height","s","metricInput","standardInput","LogWater","LogCalories","RadioMood","activeuser","mood","moodList","onChangeMood","carriers","checked","LogMood","RadioSleep","qualityList","onChangeQuality","LogSleep","LogStress","onChangeSlide","class","SymptomInput","symptom","handleChange","addTag","removeTag","reTag","filter","SymptomTag","logComponent","bind","SymptomList","symptoms","LogSick","onhandlechange","symptomList","includes","push","Graph","buildChart","graphRef","borderColor","fill","Trends","renderGraph","_getNotificationIndex","i","length","_generateId","Math","random","toString","substr","getNumNotifs","ReminderItem","reminder","getStatusIcon","hourglassIcon","goodIcon","badIcon","currTime","Date","getTime","notificationExists","reminderTimer","setTimeout","Audio","reminderSound","play","notifyAboutReminder","addTimerHandler","dateTimeValue","dateTimeStr","Intl","DateTimeFormat","month","day","year","hour","minute","second","format","completeReminderHandler","deleteReminderHandler","EmptyReminderList","Reminders","getReminderCatView","getUserReminderView","userReminderTypes","getAdminReminderView","adminReminderTypes","Fab","variant","color","AddReminder","match","params","cat","sub","reminderName","reminderTime","reminderNote","isCategoryValid","isSubCategoryValid","isNameValid","isDateTimeValid","isNoteValid","newReminderAdded","goToReminders","Object","values","maxLength","editReminderHandler","addReminderHandler","Appointment","appointments","appoint","getAppointments","Streaks","streaks","getStreaks","getMonthDay","d","getUTCMonth","getUTCDate","findApps","lists","app","formatTime","getHours","getMinutes","CalendarModule","items","renderCalendar","renderHeaders","renderFirstWeek","renderDays","headers","head","days","temp","getFullYear","getMonth","getDay","getFirstDay","Calendar","appList","loadAppointments","updateType","LocationSelector","selectedLocation","header","onSubmitHandler","action","viewPlace","locations","location","locationViewed","_isAvaliable","AppLocation","PlaceViewer","open","handleClick","sendAlertHandler","encodeURIComponent","deleteLocationHandler","checkedInLocation","isCheckInValid","onCheckInHandler","CheckOutView","checkoutHandler","CheckIn","keys","checkInHandler","AdminCheckIn","loc","AddLocation","locationName","addr","decodeURIComponent","img","maxOcc","desc","isAddressValid","isImageUrlValid","isMaxOccValid","isDescValid","newLocationAdded","editLocationHandler","addLocationHandler","AdminTrends","userDB","avg","allUser","weekAvg","sum","x","avgWeight","avgSleep","avgCalories","avgStress","ManageUser","onClickDeleteUser","forceUpdate","onClickAssignAdmin","getOwnPropertyNames","TableRow","TableCell","component","scope","Button","UserProfile","userid","uid","disabled","HomePage","check","SideBar","exact","path","render","_saveUserInfo","setCtx","_UserInputValidate","_wasUserCheckedIn","locs","_editLocation","appCtx","locCtx","locationsDB","_locationInputValidate","_addReminder","reminderCtx","newReminder","Reminder","_reminderInputValidate","_editReminder","index","_getReminderIndex","setReminderStatus","notif","addNotificationHandler","App","checkLoginState","window","pathname","setActiveUser","logoutUser","splice","timer","isInputValid","timeout","clearTimeout","addLocCtx","locDB","newLoc","adCtx","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f4deec98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/good_status.2cf02c61.png\";","module.exports = __webpack_public_path__ + \"static/media/bad_status.e4f634ab.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/alert.224e9ff1.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.763a9e08.png\";","module.exports = __webpack_public_path__ + \"static/media/hourglass.404ac0b2.png\";","module.exports = __webpack_public_path__ + \"static/media/light.abf5aa80.mp3\";","module.exports = __webpack_public_path__ + \"static/media/map.5a5ec8c5.png\";","module.exports = __webpack_public_path__ + \"static/media/adminMap.fc7e587a.png\";","import React, { Component } from 'react';\nimport './styles.css';\nimport Appointment from './appointment.js';\nimport Streaks from './streaks.js';\nimport { DAYSOFWEEK } from '../../constants.js';\nimport { getFirstDay, findApps } from '../../actions/calendarItems';\nlet date;\n\nclass CalendarModule extends Component {\n  state = {\n    user: this.props.user,\n    items: [],\n    type: 'calendar',\n  };\n\n  renderHeaders() {\n    const headers = DAYSOFWEEK;\n    let head = [];\n    for (let i = 0; i < 7; i++) {\n      head.push(\n        <div id=\"header\" key={i}>\n          <p>{headers[i]}</p>\n        </div>,\n      );\n    }\n    return <div id=\"calendarContainer\">{head}</div>;\n  }\n\n  renderFirstWeek() {\n    const days = [];\n    let lists = [];\n    let temp = getFirstDay();\n    for (let i = 0; i < 7; i++) {\n      if (i >= temp) {\n        if (this.props.type === 'calendar' && this.props.items != null) {\n          lists = findApps(this.props.items, date);\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n              <Appointment appointments={lists} />\n            </div>,\n          );\n        } else if (this.props.type === 'streaks') {\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n              <Streaks streaks={[]} />\n            </div>,\n          );\n        } else {\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n            </div>,\n          );\n        }\n        date = date + 1;\n      } else {\n        days.push(<div id=\"dates\" key={i}></div>);\n      }\n    }\n    return <div id=\"calendarContainer\">{days}</div>;\n  }\n\n  renderDays() {\n    const days = [];\n    let lists = [];\n    for (let i = 0; i < 7; i++) {\n      if (date < 32) {\n        if (this.props.type === 'calendar' && this.props.items != null) {\n          lists = findApps(this.props.items, date);\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n              <Appointment appointments={lists} />\n            </div>,\n          );\n        } else if (this.props.type === 'streaks' && date >= 27) {\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n              <Streaks streaks={['💧', '🔥', '🛏️']} />\n            </div>,\n          );\n        } else {\n          days.push(\n            <div id=\"dates\" key={i}>\n              <p>{date}</p>\n            </div>,\n          );\n        }\n      } else {\n        days.push(<div id=\"dates\" key={i}></div>);\n      }\n      date = date + 1;\n    }\n    return <div id=\"calendarContainer\">{days}</div>;\n  }\n\n  renderCalendar = () => {\n    date = 1;\n    return (\n      <div>\n        {this.renderHeaders()}\n        {this.renderFirstWeek()}\n        {this.renderDays()}\n        {this.renderDays()}\n        {this.renderDays()}\n        {this.renderDays()}\n      </div>\n    );\n  };\n\n  render() {\n    return <div>{this.renderCalendar()}</div>;\n  }\n}\n\nexport default CalendarModule;\n","'use-strict';\n\nexport const onSelectHandler = (ctx, event, key) => {\n  const TARGET = event.target;\n  ctx.setState({\n    [key]: TARGET.value,\n  });\n};\n\nexport const onInputChangeHandler = (ctx, event) => {\n  const TARGET = event.target;\n  ctx.setState({\n    [TARGET.name]: TARGET.value,\n  });\n};\n","'use-strict';\nimport React, { Component } from 'react';\nimport { onInputChangeHandler } from '../../../actions/utils';\nimport './styles.css';\n\nclass LoginForm extends Component {\n  state = {\n    email: '',\n    password: '',\n    invalidLogin: this.props.invalidLoginStatus,\n  };\n\n  displayErrorMsg = () => {\n    if (!this.props.invalidLoginStatus) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Invalid email or password </span>;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"LoginFromWrapper\">\n        {this.displayErrorMsg()}\n        <div id=\"LoginForm\">\n          <input\n            className={`space input ${this.props.invalidLoginStatus ? 'invalidInput' : ''}`}\n            type=\"email\"\n            value={this.state.email}\n            onChange={(event) => {\n              onInputChangeHandler(this, event);\n            }}\n            placeholder=\"email\"\n            name=\"email\"\n          />\n          <input\n            className={`space input ${this.props.invalidLoginStatus ? 'invalidInput' : ''}`}\n            type=\"password\"\n            value={this.state.password}\n            onChange={(event) => {\n              onInputChangeHandler(this, event);\n            }}\n            name=\"password\"\n            placeholder=\"password\"\n          />\n          <button\n            className=\"space primary-btn\"\n            onClick={() => {\n              this.props.loginHandler(this.state.email, this.state.password);\n            }}\n          >\n            {' '}\n            login{' '}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","export const APP_NAME = 'Health Tracker';\n\nexport const ADMIN_ACCOUNT_TYPE = 'admin';\nexport const USER_ACCOUNT_TYPE = 'user';\nexport const ACCOUNT_TYPES = {\n  admin: ADMIN_ACCOUNT_TYPE,\n  user: USER_ACCOUNT_TYPE,\n};\n\nexport const HEALTH_CATEGORIES = {\n  phsycial: 'Physical Health',\n  mental: 'Mental Health',\n  medical: 'Medical Health',\n};\n\nexport const HEALTH_SUB_CATEGORIES = {\n  [HEALTH_CATEGORIES.phsycial]: ['BMI', 'Hydration', 'Calories'],\n  [HEALTH_CATEGORIES.mental]: ['Mood', 'Sleep', 'Stress'],\n  [HEALTH_CATEGORIES.medical]: ['Medication', 'Symptoms', 'Appointments'],\n};\n\nexport const REMINDER_STATUS = {\n  active: 'active',\n  completed: 'completed',\n  overdue: 'overdue',\n};\n\nexport const NOTIFICATION_TYPE = {\n  alert: 'Alert',\n  reminder: 'Reminder',\n};\n\nexport const ADMIN_REMINDER_TYPES = {\n  task: 'Tasks',\n};\n\nexport const USERS = {\n  useruser: {\n    firstName: 'Ben',\n    lastName: 'John',\n    hash: 'useruser',\n    sex: 'male',\n    email: 'useruser@health.com',\n    type: USER_ACCOUNT_TYPE,\n    timers: [],\n    checkInHistory: [],\n    reminders: {\n      [HEALTH_CATEGORIES.medical]: [\n        {\n          id: 'r01',\n          category: HEALTH_CATEGORIES.medical,\n          subCategory: 'Appointments',\n          name: 'Annual Check Up',\n          time: '2020-07-26T10:15',\n          note: 'Call Dr.Jones 1hr before',\n          status: REMINDER_STATUS.active,\n        },\n      ],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: [],\n      otherReminders: null,\n    },\n    notifications: [\n      {\n        id: 'unique',\n        type: NOTIFICATION_TYPE.alert,\n        title: 'Welcome Explor The Check-In Alert System =D',\n        message: 'explor our app',\n      },\n    ],\n    trends: {\n      weight: [120, 119, 119, 120, 122, 119, 117],\n      sleep: [5, 6, 6, 7, 9, 10, 7],\n      calories: [1800, 1899, 2100, 2000, 1789, 1987, 1788],\n      stress: [2, 3, 2, 1, 4, 6, 5],\n    },\n  },\n  adminadmin: {\n    firstName: 'IAmAdmin',\n    lastName: 'John',\n    email: 'admin',\n    hash: 'adminadmin',\n    timers: [],\n    type: ADMIN_ACCOUNT_TYPE,\n    reminders: {\n      [ADMIN_REMINDER_TYPES.task]: [\n        {\n          id: 'r0',\n          category: ADMIN_REMINDER_TYPES.task,\n          subCategory: undefined,\n          name: 'Complete important admin work',\n          time: '2020-07-12T21:15',\n          note: 'call Jack to check if he wants to come help',\n          status: REMINDER_STATUS.active,\n        },\n      ],\n    },\n    notifications: [],\n  },\n};\n\nexport const PAGE_ADDRESS = [\n  '/settings',\n  '/overview',\n  '/trends',\n  '/reminders',\n  '/calendar',\n  '/check-in',\n  '/overview/logWeight',\n  '/overview/logWater',\n  '/overview/logCalories',\n  '/overview/logMood',\n  '/overview/logSleep',\n  '/overview/logStress',\n  '/overview/logMedical',\n  '/overview/logSick',\n  '/reminders/add/:cat?/:sub?/:name?/:time?/:note?/:id?',\n  '/manage-users',\n  '/trends/admin',\n  '/alert-system',\n  '/locations/add',\n  '/user-profile/:id?',\n  '/alert-system/add/:name?/:addr?/:img?/:maxOcc?/:desc?',\n];\n\nexport const LOCATIONS = {\n  \"Queen's Park\": {\n    id: \"Queen's Park\",\n    name: \"Queen's Park\",\n    isAvaliable: true,\n    address: '111 Wellesley St W, Toronto, ON',\n    country: 'Canada',\n    imageUrl:\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Looking_down_University_Avenue_Toronto_August_2012.jpg/1200px-Looking_down_University_Avenue_Toronto_August_2012.jpg',\n    maxOccupancy: 53,\n    currOccupancy: 52,\n    description: 'some information about the park',\n  },\n};\n\nexport const PHYSICAL_TIP = [\n  'Eat a high protein breakfast',\n  'Lower Carbohydrates',\n  'Avoid sugary drinks and fruit juice',\n  'Drink sufficient water every day',\n  'Choose weight-loss-friendly foods',\n  'Eat slowly, Chew slowly',\n  'Weigh your self every day',\n  'Lift weights at least three times per week',\n  'Cardiovascular exercise every day',\n  'Get good quality of Sleep',\n];\n\nexport const MENTAL_TIP = [\n  'Avoid alcohol, smoking, and drugs',\n  'Get enough of sunlight',\n  'Do something fun or enjoyable',\n  'Build self-confidence',\n  'Socialize with others',\n  'Ask for help if you need one',\n  'Relax and take a break',\n  'Exercise may help you get rid of worries',\n  'Learn how to deal with Stress',\n  'Set goals, describe to yourself what you really want',\n  'Start today',\n];\n\nexport const MOODLIST = [\n  { value: 'angry', icon: 'https://image.flaticon.com/icons/svg/3084/3084520.svg' },\n  { value: 'sad', icon: 'https://image.flaticon.com/icons/svg/3084/3084540.svg' },\n  { value: 'thoughtful', icon: 'https://image.flaticon.com/icons/svg/3084/3084437.svg' },\n  { value: 'soso', icon: 'https://image.flaticon.com/icons/svg/3084/3084473.svg' },\n  { value: 'happy', icon: 'https://image.flaticon.com/icons/svg/3084/3084424.svg' },\n  { value: 'lovely', icon: 'https://image.flaticon.com/icons/svg/3084/3084622.svg' },\n];\n\nexport const DAYSOFWEEK = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n\nexport const SYMPTOM_OPTION = [\n  'Fever or chills',\n  'Cough',\n  'Difficulty breathing',\n  'Fatigue',\n  'Muscle or body aches',\n  'Headaches',\n  'Sore throat',\n  'Congestion or runny nose',\n  'Nausea or vomiting',\n  'Diarrhea',\n  'Bluish lips or face',\n];\n\nexport const MONTHS = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n","import React, {Component} from 'react';\nimport LoginForm from '../Login';\nimport logo from '../../../../assets/logo.svg'\nimport {APP_NAME} from '../../../constants';\n\nimport './styles.css';\n\nclass Header extends Component {\n\n    render() {\n        return (\n            <div id='TitleHeader'>\n                <div className=\"logoContainer\">\n                    <img src={logo} width=\"150px\" className=\"App-logo\" alt=\"logo\" />\n                </div>\n                <h1> {APP_NAME} </h1>\n                <LoginForm \n                    invalidLoginStatus={this.props.loginValidityStatus}\n                    loginHandler={this.props.loginHandler}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Header;\n\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass ListSelector extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  render() {\n    const { options, onChangeHandler } = this.props;\n\n    return (\n      <div id={this.props.id}>\n        {this.props.autoComplete !== 'false' ? (\n          <div>\n            <input\n              className={`input ${this.props.className}`}\n              type=\"text\"\n              list={`${this.props.name}`}\n              name={`${this.props.name}`}\n              id=\"ListInput\"\n              autoComplete={this.props.autoComplete}\n              onChange={onChangeHandler}\n              value={this.props.defaultValue}\n            />\n            <datalist id={`${this.props.name}`}>\n              {options !== undefined\n                ? options.map((value) => <option key={value} className=\"option\" value={value} />)\n                : ''}\n            </datalist>\n          </div>\n        ) : (\n          <select\n            className={`input ${this.props.className}`}\n            type=\"text\"\n            list={`${this.props.name}`}\n            name={`${this.props.name}`}\n            id=\"ListInput\"\n            onChange={onChangeHandler}\n            value={this.props.defaultValue}\n          >\n            <option value=\"\"> select </option>\n            {options !== undefined\n              ? options.map((value) => (\n                  <option key={value} className=\"option\" value={value}>\n                    {value}\n                  </option>\n                ))\n              : ''}\n          </select>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ListSelector;\n","'use-strict';\nimport { HEALTH_CATEGORIES, USER_ACCOUNT_TYPE } from '../constants';\n\nconst log = console.log;\n\nexport const addUserHandler = (ctx, newUser) => {\n  log('Adding user...');\n  const users = ctx.state.userDB;\n\n  users[newUser.hash] = newUser;\n  ctx.setState({\n    userDB: users,\n  });\n  log(ctx.state.userDB);\n};\n\nexport const signUpUser = (signUpCtx) => {\n  log('Creating user...');\n  if (_signUpInputValidate(signUpCtx)) {\n    const inputs = signUpCtx.state;\n    const newUser = new User(inputs.first, inputs.last, inputs.email, inputs.password, inputs.sex);\n    signUpCtx.props.addUserHandler(newUser);\n    log('User successfully added');\n  } else {\n    log('Unsuccessful in adding user');\n  }\n  _clearSignUpInputs(signUpCtx);\n};\n\nconst _signUpInputValidate = (signUpCtx) => {\n  log('Validating sign-up inputs...');\n  const isFirstValid = _isInvalid(signUpCtx.state.first);\n  const isLastValid = _isInvalid(signUpCtx.state.last);\n  const isEmailValid =\n    _isInvalid(signUpCtx.state.email) &&\n    _isEmailValid(signUpCtx.props.users, signUpCtx.state.email);\n  const isPassValid = _isInvalid(signUpCtx.state.password);\n  const isSexValid = _isInvalid(signUpCtx.state.sex);\n\n  signUpCtx.setState({\n    isFirstValid: isFirstValid,\n    isLastValid: isLastValid,\n    isEmailValid: isEmailValid,\n    isPassValid: isPassValid,\n    isSexValid: isSexValid,\n  });\n\n  return isFirstValid && isLastValid && isEmailValid && isPassValid && isSexValid;\n};\n\nconst _isEmailValid = (users, email) => {\n  for (let key in users) {\n    if (users[key].email === email) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst _isInvalid = (value) => {\n  return value !== null && value !== undefined && value !== '' && value !== 'select';\n};\n\nexport class User {\n  constructor(firstName, lastName, email, password, sex) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n    this.password = password;\n    this.type = USER_ACCOUNT_TYPE;\n    this.sex = sex;\n    this.hash = this.email + this.password;\n    this.reminders = {\n      [HEALTH_CATEGORIES.medical]: [],\n      [HEALTH_CATEGORIES.mental]: [],\n      [HEALTH_CATEGORIES.phsycial]: [],\n    };\n    this.notifications = [];\n    this.trends = [];\n  }\n\n  getHash = () => {\n    return this.hash;\n  };\n}\n\nconst _clearSignUpInputs = (ctx) => {\n  ctx.setState({\n    first: '',\n    last: '',\n    email: '',\n    password: '',\n    sex: '',\n  });\n};\n","'use-strict';\nimport React, { Component } from 'react';\nimport ListSelector from '../../General/ListSelector';\nimport { signUpUser } from '../../../actions/signUp';\nimport { onInputChangeHandler } from '../../../actions/utils';\nimport './styles.css';\n\nclass SignUpForm extends Component {\n  state = {\n    first: '',\n    last: '',\n    email: '',\n    password: '',\n    sex: '',\n    isFirstValid: true,\n    isLastValid: true,\n    isEmailValid: true,\n    isPassValid: true,\n    isSexValid: true,\n  };\n\n  displayErrorMsg = () => {\n    const { isFirstValid, isLastValid, isEmailValid, isPassValid, isSexValid } = this.state;\n    if (isFirstValid && isLastValid && isEmailValid && isPassValid && isSexValid) {\n      return '';\n    } else {\n      return (\n        <span className=\"errorMsg\">\n          {' '}\n          Input fields in red are invalid <br />\n          <br />\n        </span>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"SignUpForm\" className=\"windowWrapper\">\n        <h1> Create Account </h1>\n        {this.displayErrorMsg()}\n        <input\n          type=\"text\"\n          id=\"firstName\"\n          className={`signupInputSpace input ${this.state.isFirstValid ? '' : 'invalidInput'}`}\n          placeholder=\"First Name\"\n          name=\"first\"\n          value={this.state.first}\n          onChange={(event) => {\n            onInputChangeHandler(this, event);\n          }}\n        />\n        <input\n          type=\"text\"\n          id=\"lastName\"\n          className={`signupInputSpace input ${this.state.isLastValid ? '' : 'invalidInput'}`}\n          placeholder=\"Last Name\"\n          name=\"last\"\n          value={this.state.last}\n          onChange={(event) => {\n            onInputChangeHandler(this, event);\n          }}\n        />\n        <input\n          type=\"email\"\n          id=\"email\"\n          className={`signupInputSpace input ${this.state.isEmailValid ? '' : 'invalidInput'}`}\n          placeholder=\"Email\"\n          name=\"email\"\n          value={this.state.email}\n          onChange={(event) => {\n            onInputChangeHandler(this, event);\n          }}\n        />\n        <input\n          type=\"password\"\n          id=\"password\"\n          className={`signupInputSpace input ${this.state.isPassValid ? '' : 'invalidInput'}`}\n          placeholder=\"password\"\n          name=\"password\"\n          value={this.state.password}\n          onChange={(event) => {\n            onInputChangeHandler(this, event);\n          }}\n        />\n        <div className=\"signupInputSpace\">\n          <ListSelector\n            id=\"Sex\"\n            className={this.state.isSexValid ? '' : 'invalidInput'}\n            name=\"sex\"\n            autoComplete=\"false\"\n            value={this.state.sex}\n            options={['male', 'female']}\n            onChangeHandler={(event) => {\n              onInputChangeHandler(this, event);\n            }}\n          />\n        </div>\n        <button className=\"signupInputSpace primary-btn\" onClick={() => signUpUser(this)}>\n          {' '}\n          Create Account{' '}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;\n","const log = console.log;\n\nexport const setActiveUser = (app, user) => {\n  app.setState(\n    {\n      activeUser: user,\n    },\n    () => {\n      log(`${app.state.activeUser === user ? 'Successfully' : 'Unsuccessfully'} login`);\n    },\n  );\n};\n\nexport const onLoginHandler = (landingPage, email, password) => {\n  const authKey = _getUserHash(email, password);\n  const user = landingPage.props.users[authKey];\n  // check login attempt\n  if (user === null || user === undefined) {\n    landingPage.setState({\n      invalidLogin: true,\n    });\n    log('Invalid aogin attempt. Try again');\n  } else {\n    landingPage.setState({\n      userEmail: email,\n      userPassword: password,\n      invalidLogin: false,\n    });\n    landingPage.props.setActiveUserHandler(user);\n  }\n};\n\nexport const _getUserHash = (email, password) => {\n  return email + password;\n};\n\nexport const getUserByAuthKey = (ctx, authKey) => {\n  const userId = ctx.state.loginUserIdMap[authKey];\n  if (userId === undefined) {\n    return userId;\n  }\n  return getUserById(ctx, userId);\n};\n\nexport const getUserById = (ctx, id) => {\n  return ctx.state.users[id];\n};\n","import React, { Component } from 'react';\n\n// Importing components\nimport Header from './Header';\nimport SignUpForm from './SignUp';\n\n// Importing actions/required methods\nimport { onLoginHandler } from '../../actions/login';\n\nimport './styles.css';\n\nclass LandingPage extends Component {\n  state = {\n    users: this.props.users,\n    userEmail: 'test',\n    userPassword: 'test',\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          loginValidityStatus={this.state.invalidLogin}\n          loginHandler={(email, password) => {\n            onLoginHandler(this, email, password);\n          }}\n        />\n        <div id=\"LandingContentWrapper\">\n          <div id=\"AboutAppWrapper\">\n            <img\n              id=\"landingPic\"\n              src=\"https://image.freepik.com/free-vector/flat-design-man-running-fitness-trackers_23-2148508679.jpg\"\n              alt=\"landingIcon\"\n            ></img>\n            <div id=\"textDContainer\">\n              <img\n                id=\"landingPageText\"\n                src=\"http://www.pngmart.com/files/9/Text-Banner-Transparent-Background.png\"\n                alt=\"landingIcon\"\n              ></img>\n              <div id=\"description\">\n                <p id=\"appDescription\">\n                  Health Tracker is here to help improve our overall communities' lifestyles to be\n                  more healthier by allowing them to track, analyze and stay motivated about\n                  specific health related activities. It is difficult to keep track of our\n                  lifestyle, and stay motivated to improve its quality. During social distancing,\n                  this becomes increasingly more difficult as we lose the sense of what a standard\n                  healthy lifestyle may be.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div id=\"signUpWapper\">\n            <SignUpForm users={this.props.users} addUserHandler={this.props.addUserHandler} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport alertIcon from '../../../../assets/alert.png';\nimport bellIcon from '../../../../assets/bell.png';\nimport './styles.css';\nimport { NOTIFICATION_TYPE } from '../../../constants';\n\nclass Notification extends Component {\n  state = {\n    id: this.props.notification?.id,\n    type: this.props.notification?.type,\n    title: this.props.notification?.title,\n    message: this.props.notification?.message,\n  };\n\n  render() {\n    return (\n      <div id=\"NotificationItemWrapper\" className={[this.state.type]}>\n        <img\n          id=\"NotifIcon\"\n          src={this.state.type === NOTIFICATION_TYPE.alert ? alertIcon : bellIcon}\n          alt=\"notification-icon\"\n        />\n        <span className=\"type\"> {this.state.type}! &nbsp; </span>\n        <span> {this.state.title} </span>\n        <span\n          className=\"closeBtn\"\n          onClick={() => {\n            this.props.removeNotificationHandler(this.state.id);\n          }}\n        >\n          &times;\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","'use-strict';\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ListSelector from '../General/ListSelector';\nimport { onInputChangeHandler } from '../../actions/utils';\nimport { ADMIN_ACCOUNT_TYPE } from '../../constants';\nimport './styles.css';\n\nclass UserSettings extends Component {\n  state = {\n    user: this.props.activeUser,\n    first: this.props.activeUser?.firstName,\n    last: this.props.activeUser?.lastName,\n    email: this.props.activeUser?.email,\n    pass: this.props.activeUser?.password,\n    sex: this.props.activeUser?.sex,\n    isFirstValid: true,\n    isLastValid: true,\n    isEmailValid: true,\n    isPassValid: true,\n    isSexValid: true,\n    newInfoSet: false,\n  };\n\n  goToAlertSystem = () => {\n    if (this.state.newInfoSet) {\n      return (\n        <Redirect\n          to={this.props.activeUser.type === ADMIN_ACCOUNT_TYPE ? '/manage-users' : '/overview'}\n        />\n      );\n    }\n  };\n\n  displayErrorMsg = () => {\n    const { isFirstValid, isLastValid, isEmailValid, isPassValid, isSexValid } = this.state;\n    if (isFirstValid && isLastValid && isEmailValid && isPassValid && isSexValid) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Input fields in red are missing</span>;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"UserSettingsWrapper\">\n        {this.goToAlertSystem()}\n        <div id=\"AddLocationWindow\" className=\"windowWrapper\">\n          <h1> Settings </h1>\n          {this.displayErrorMsg()}\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> First Name: </span>\n            <input\n              className={`input ${this.state.isFirstValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"FirstName\"\n              name=\"first\"\n              placeholder=\"First name\"\n              value={this.state.first === undefined ? '' : this.state.first}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Last Name: </span>\n            <input\n              className={`input ${this.state.isLastValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"LastName\"\n              name=\"last\"\n              placeholder=\"Last Name\"\n              value={this.state.last === undefined ? '' : this.state.last}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Email: </span>\n            <input\n              className={`input ${this.state.isEmailValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"Email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={this.state.email === undefined ? '' : this.state.email}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Password: </span>\n            <input\n              className={`input ${this.state.isPassValid ? '' : 'invalidInput'}`}\n              type=\"password\"\n              id=\"Password\"\n              name=\"pass\"\n              placeholder=\"Password\"\n              value={this.state.pass === undefined ? '' : this.state.pass}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Category: </span>\n            <ListSelector\n              id=\"Sex\"\n              className={this.state.isSexValid ? '' : 'invalidInput'}\n              name=\"sex\"\n              autoComplete=\"false\"\n              defaultValue={this.state.sex === undefined ? '' : this.state.sex}\n              options={['male', 'female']}\n              onChangeHandler={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <button\n            className=\"primary-btn\"\n            onClick={() => {\n              this.props.saveUserInfoHandler(this);\n            }}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserSettings;\n","'use-strict';\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport './styles.css';\nimport { USER_ACCOUNT_TYPE } from '../../constants';\n\nclass Sidebar extends Component {\n  state = {\n    user: this.props.activeUser,\n    profilePic:\n      'https://3.bp.blogspot.com/-qDc5kIFIhb8/UoJEpGN9DmI/AAAAAAABl1s/BfP6FcBY1R8/s1600/BlueHead.jpg',\n  };\n\n  notifCount = (count) => {\n    if (count > 0) {\n      return <span className=\"notifBadge\"> {count} </span>;\n    }\n    return '';\n  };\n\n  getUserNavOptions = () => {\n    return (\n      <div id=\"NavOptions\">\n        <NavLink to=\"/overview\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"overview icon\"\n            src=\"https://image.flaticon.com/icons/svg/3062/3062317.svg\"\n          ></img>\n          Overview\n        </NavLink>\n        <NavLink to=\"/trends\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"trends icon\"\n            src=\"https://image.flaticon.com/icons/svg/1720/1720256.svg\"\n          ></img>\n          Trends\n        </NavLink>\n        <NavLink to=\"/reminders\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          {this.notifCount(this.props.reminderCount)}\n          <img\n            id=\"icon\"\n            alt=\"reminders icon\"\n            src=\"https://image.flaticon.com/icons/svg/1792/1792756.svg\"\n          ></img>\n          Reminders\n        </NavLink>\n        <NavLink to=\"/calendar\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"calendar icon\"\n            src=\"https://image.flaticon.com/icons/svg/747/747310.svg\"\n          ></img>\n          Calendar\n        </NavLink>\n        <NavLink to=\"/check-in\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          {this.notifCount(this.props.alertCount)}\n          <img\n            id=\"icon\"\n            alt=\"check-in icon\"\n            src=\"https://image.flaticon.com/icons/svg/684/684809.svg\"\n          ></img>\n          Check-In\n        </NavLink>\n      </div>\n    );\n  };\n\n  getAdminNavOptions = () => {\n    return (\n      <div id=\"NavOptions\">\n        <NavLink to=\"/manage-users\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"overview icon\"\n            src=\"https://image.flaticon.com/icons/svg/3062/3062317.svg\"\n          ></img>\n          Users\n        </NavLink>\n        <NavLink to=\"/trends/admin\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"trends icon\"\n            src=\"https://image.flaticon.com/icons/svg/1720/1720256.svg\"\n          ></img>\n          Trends\n        </NavLink>\n        <NavLink to=\"/reminders\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          {this.notifCount(this.props.reminderCount)}\n          <img\n            id=\"icon\"\n            alt=\"reminders icon\"\n            src=\"https://image.flaticon.com/icons/svg/1792/1792756.svg\"\n          ></img>\n          Reminders\n        </NavLink>\n        <NavLink to=\"/alert-system\" activeClassName=\"activeLink\" className=\"home_navlink\">\n          <img\n            id=\"icon\"\n            alt=\"check-in icon\"\n            src=\"https://image.flaticon.com/icons/svg/684/684809.svg\"\n          ></img>\n          Alert Sys\n        </NavLink>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"sideBar\">\n        <NavLink className=\"settings\" to={'/settings'}>\n          <IconButton aria-label=\"edit\">\n            <SettingsIcon />\n          </IconButton>\n        </NavLink>\n        <div id=\"userProfile\">\n          <img id=\"userPicture\" alt=\"profile\" src={this.state.profilePic}></img>\n          <h2>{this.state.user?.firstName}</h2>\n        </div>\n        {this.props.activeUser?.type === USER_ACCOUNT_TYPE\n          ? this.getUserNavOptions()\n          : this.getAdminNavOptions()}\n        <button id=\"logOut\" onClick={this.props.logoutHandler}>\n          logout\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport Chart from 'chart.js';\n\nclass PieChart extends Component {\n  chartRef = React.createRef();\n\n  componentDidMount() {\n    const pieChartRef = this.chartRef.current.getContext('2d');\n    new Chart(pieChartRef, {\n      type: 'doughnut',\n      data: {\n        labels: ['Completed', 'Remaining'],\n        datasets: [\n          {\n            backgroundColor: ['#2980b9', '#dbedff'],\n            data: this.props.data,\n          },\n        ],\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"pieChart\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default PieChart;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport PieChart from './Chart.js';\nimport { NavLink } from 'react-router-dom';\n\nclass Card extends Component {\n  state = {\n    user: this.props.activeUser,\n    title: this.props.title,\n    value: this.props.value,\n    image: this.props.image,\n    address: this.props.address,\n    type: this.props.type,\n  };\n\n  CardSwitch(type) {\n    switch (type) {\n      case '1': // BMI\n        return this.ShowImage('BMI');\n      case '2': // water\n        return this.ShowChart();\n      case '3': // calories\n        return this.ShowChart();\n      case '4': // mood\n        return this.ShowImage(this.state.value['value']);\n      case '5': // sleep\n        return this.ShowSleep(this.state.value['hours'], this.state.value['quality']);\n      case '6': // stress\n        return this.ShowStress(this.state.value['value']);\n      case '7': // medication\n        return;\n      case '8': // sickness\n        if (this.state.value['sick'] === true) return this.ShowImage('sick');\n        else return this.ShowImage('healthy');\n      case '9': // appointments\n        return;\n      default:\n        return;\n    }\n  }\n\n  ShowChart() {\n    const completed = this.state.value['completed'];\n    const remaining = this.state.value['remaining'];\n    const unit = this.state.value['unit'];\n    const dataset = [completed, remaining, unit];\n    return (\n      <div>\n        <PieChart data={dataset} />\n        <p id=\"cardValue\">\n          {completed} {unit}\n        </p>\n      </div>\n    );\n  }\n\n  ShowImage(value) {\n    var imageSrc = '';\n    var text = '';\n    switch (value) {\n      case 'angry':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084520.svg';\n        text = 'Angry';\n        break;\n      case 'sad':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084540.svg';\n        text = 'Sad';\n        break;\n      case 'thoughtful':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084437.svg';\n        text = 'Thoughtful';\n        break;\n      case 'soso':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084473.svg';\n        text = 'So So';\n        break;\n      case 'happy':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084424.svg';\n        text = 'Happy';\n        break;\n      case 'lovely':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3084/3084622.svg';\n        text = 'Lovely';\n        break;\n      case 'BMI':\n        imageSrc = 'https://image.flaticon.com/icons/svg/3023/3023711.svg';\n        text = this.state.value['value'];\n        break;\n      case 'sick':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/nauseated-face_1f922.png';\n        text = 'Feeling Unwell';\n        break;\n      case 'healthy':\n        imageSrc =\n          'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/face-with-party-horn-and-party-hat_1f973.png';\n        text = 'Healthy!';\n        break;\n      default:\n        imageSrc =\n          'https://camo.githubusercontent.com/ec4fa9947e66613fa4315e34dc4cb9581462b4d4/68747470733a2f2f692e696d6775722e636f6d2f6e4f53313264362e676966';\n        text = '';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card\" src={imageSrc}></img>\n        <p id=\"cardValue\">{text}</p>\n      </div>\n    );\n  }\n\n  ShowStress(stress) {\n    var imageSrc = '';\n    const stressInt = parseInt(stress);\n    if (stressInt < 4) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grinning-face_1f600.png';\n    } else if (stressInt >= 4 && stressInt < 7) {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/grimacing-face_1f62c.png';\n    } else {\n      imageSrc =\n        'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/angry-face_1f620.png';\n    }\n    return (\n      <div>\n        <img className=\"cardIcon\" alt=\"card icon\" src={imageSrc}></img>\n        <div>\n          <input className=\"inputSlider\" type=\"range\" min={0} max={10} value={stressInt}></input>\n          <span id=\"cardValue\">{stress}</span>\n        </div>\n      </div>\n    );\n  }\n\n  ShowSleep(hours, quality) {\n    var imageSrc =\n      'https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/120/facebook/230/sleeping-face_1f634.png';\n    var hoursDisplay = '';\n    var qualityDisplay = '';\n\n    const hoursInt = parseInt(hours);\n    if (hoursInt < 5) {\n      hoursDisplay = 'sleepBad';\n    } else if (hoursInt >= 5 && hoursInt < 7) {\n      hoursDisplay = 'sleepOkay';\n    } else {\n      hoursDisplay = 'sleepGood';\n    }\n\n    if (quality === 'bad') {\n      qualityDisplay = 'sleepBad';\n    } else if (quality === 'okay') {\n      qualityDisplay = 'sleepOkay';\n    } else {\n      qualityDisplay = 'sleepGood';\n    }\n\n    return (\n      <div>\n        <div>\n          <p className={hoursDisplay}>\n            <img className=\"sleepIcon\" alt=\"card icon\" src={imageSrc}></img>\n            {hours} Hours\n          </p>\n        </div>\n        <div>\n          <p className={qualityDisplay}>Sleep Quality: {quality}</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const add = this.state.address;\n    return (\n      <NavLink to={add} id=\"cardWrapper\">\n        <h2 id=\"cardTitle\">{this.state.title}</h2>\n        {this.CardSwitch(this.state.type)}\n      </NavLink>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport Card from '../Card';\n\nclass Overview extends Component {\n  state = {\n    user: this.props.activeUser,\n    BMI: {\n      value: 22,\n    },\n    Water: {\n      completed: 0.8,\n      remaining: 2,\n      unit: 'L',\n    },\n    Calories: {\n      completed: 300,\n      remaining: 1700,\n      unit: 'Calories',\n    },\n    Mood: {\n      value: 'happy',\n    },\n    Sleep: {\n      hours: 8,\n      quality: 'Good', // 3 levels bad, okay, good\n    },\n    Stress: {\n      value: 1,\n    },\n    Medication: [\n      {\n        drug: 'Cold Medicine',\n        completed: 1,\n        remainging: 2,\n      },\n      {\n        drug: 'Allergy Medicine',\n        completed: 2,\n        remainging: 4,\n      },\n    ],\n    Sickness: {\n      //\n      sick: true,\n    },\n    Appointments: [\n      // shows all appointments today\n      {\n        event: 'Annual Checkup',\n        doctor: 'Dr. Zoudas',\n        time: '16:00:00',\n      },\n      {\n        event: 'Blood Donation',\n        doctor: 'Dr. Dre',\n        time: '10:00:00',\n      },\n      {\n        event: 'Dentist',\n        doctor: 'Dr. Teth',\n        time: '12:00:00',\n      },\n    ],\n  };\n\n  render() {\n    return (\n      <div id=\"OverviewWrapper\">\n        <h1 id=\"h1-headers\">Physical Health</h1>\n        <hr id=\"line\"></hr>\n        <div id=\"cardsContainer\">\n          {/* physical tracking */}\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Body Mass Index\"\n            address=\"/overview/logWeight\"\n            value={this.state.BMI}\n            image=\"https://image.flaticon.com/icons/svg/3023/3023711.svg\"\n            type=\"1\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Water Consumption\"\n            address=\"/overview/logWater\"\n            value={this.state.Water}\n            image=\"\"\n            type=\"2\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Calories\"\n            address=\"/overview/logCalories\"\n            value={this.state.Calories}\n            image=\"\"\n            type=\"3\"\n          />\n        </div>\n        <h1 id=\"h1-headers\">Mental Health</h1>\n        <hr id=\"line\"></hr>\n        <div id=\"cardsContainer\">\n          {/* mental tracking */}\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Mood\"\n            value={this.state.Mood}\n            address=\"/overview/logMood\"\n            image=\"\"\n            type=\"4\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Sleep\"\n            value={this.state.Sleep}\n            address=\"/overview/logSleep\"\n            image=\"\"\n            type=\"5\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Stress\"\n            value={this.state.Stress}\n            address=\"/overview/logStress\"\n            image=\"\"\n            type=\"6\"\n          />\n        </div>\n        <h1 id=\"h1-headers\">Medical Health</h1>\n        <hr id=\"line\"></hr>\n        <div id=\"cardsContainer\">\n          {/* medical tracking */}\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Medication\"\n            value={this.state.Medication}\n            address=\"/reminders\"\n            image=\"\"\n            type=\"7\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Sickness\"\n            value={this.state.Sickness}\n            address=\"/overview/logSick\"\n            image=\"\"\n            type=\"8\"\n          />\n          <Card\n            id=\"cards\"\n            activeUser={this.props.activeUser}\n            title=\"Appointments\"\n            value={this.state.Appointments}\n            address=\"/reminders\"\n            image=\"\"\n            type=\"9\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\n\nclass Tab extends Component {\n  onClick = () => {\n    this.props.onClick(this.props.label);\n  };\n\n  render() {\n    let className = 'tabButton';\n    if (this.props.activeTab === this.props.label) {\n      className += ' active';\n    }\n    return (\n      <button className={className} id={this.props.id} onClick={this.onClick}>\n        {this.props.label}\n      </button>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\n\nimport Tab from './Tab';\n\nclass TabList extends Component {\n  state = {\n    activeTab: this.props.children[0].props.label,\n  };\n\n  onClickTab = (tab) => {\n    this.setState({\n      activeTab: tab,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"tabList\">\n        <div className=\"tab\" id={this.props.id}>\n          {this.props.children.map((child) => {\n            return (\n              <Tab\n                activeTab={this.state.activeTab}\n                key={child.props.label}\n                label={child.props.label}\n                id={this.props.id}\n                onClick={this.onClickTab}\n              />\n            );\n          })}\n        </div>\n        <div className=\"tabContent\">\n          {this.props.children.map((child) => {\n            if (child.props.label === this.state.activeTab) {\n              return child.props.children;\n            } else {\n              return undefined;\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TabList;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { PHYSICAL_TIP, MENTAL_TIP } from './../../../constants';\n\nclass TipBox extends Component {\n  state = {\n    user: this.props.activeUser,\n    label: this.props.label,\n  };\n\n  render() {\n    const title = () => {\n      if (this.state.label === 'physical') {\n        return 'Physical Tips';\n      } else if (this.state.label === 'mental') {\n        return 'Mental Tips';\n      }\n    };\n    const tips = () => {\n      if (this.state.label === 'physical') {\n        return PHYSICAL_TIP.map((tip) => {\n          return <li id=\"tipContent\">{tip}</li>;\n        });\n      } else if (this.state.label === 'mental') {\n        return MENTAL_TIP.map((tip) => {\n          return <li id=\"tipContent\">{tip}</li>;\n        });\n      }\n    };\n    return (\n      <div>\n        <h1 id=\"tipHead\">\n          <img\n            id=\"icon\"\n            src=\"https://image.flaticon.com/icons/png/512/900/900516.png\"\n            alt=\"tipIcon\"\n          ></img>\n          {title()}\n        </h1>\n        <div id=\"tipBox\">{tips()}</div>\n      </div>\n    );\n  }\n}\n\nexport default TipBox;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport TabList from './TabList';\nimport { NavLink } from 'react-router-dom';\n\nimport TipBox from './../TipBox/TipBox';\n\nclass LogWeight extends Component {\n  state = {\n    user: this.props.activeUser,\n    weight: 0,\n    height: 0,\n    BMI: 0,\n  };\n\n  metricInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">kg(kilograms)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">m(meters)</label>\n          <p>BMI = Weight(kg) / [height(m)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n\n  standardInput() {\n    return (\n      <form>\n        <fieldset>\n          <input type=\"text\" id=\"weightLog\" placeholder=\"Enter Weight\" />\n          <label id=\"units\">lbs(pounds)</label>\n          <input type=\"text\" id=\"heightLog\" placeholder=\"Enter Height\" />\n          <label id=\"units\">in(inches)</label>\n          <p>BMI = 703 * Weight(lbs) / [height(in)]^2</p>\n          <ul>\n            <li>Underweight: ~18.5</li>\n            <li>Healthy weight: 18.5 ~ 24.9</li>\n            <li>Overweight: 25 ~ 29.9</li>\n            <li>Obese: 30 ~ 39.9</li>\n          </ul>\n          <button className=\"primary-btn\" id=\"logButton\">\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n  render() {\n    return (\n      <div id=\"LogWeightWrapper\">\n        <div className=\"logWeightView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n              s\n            ></img>\n          </NavLink>\n          <h1 id=\"weightHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3023/3023711.svg\"\n              alt=\"icon\"\n            ></img>\n            Body Mass Index\n          </h1>\n          <div className=\"logbox\">\n            <TabList id=\"weightTab\">\n              <div label=\"Metric\">{this.metricInput()}</div>\n              <div label=\"Standard\">{this.standardInput()}</div>\n            </TabList>\n          </div>\n        </div>\n\n        <div className=\"logWeightView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogWeight;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nimport TipBox from './../TipBox/TipBox';\nimport { NavLink } from 'react-router-dom';\nclass LogWater extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  render() {\n    return (\n      <div id=\"LogWaterWrapper\">\n        <div className=\"logWaterView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n          <h1 id=\"waterHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3039/3039889.svg\"\n              alt=\"icon\"\n            ></img>\n            Water Consumption\n          </h1>\n          <div className=\"logWaterBox\">\n            <form>\n              <fieldset>\n                <h3>\n                  How much water did you drink?\n                  <img\n                    id=\"iconWater\"\n                    src=\"https://image.flaticon.com/icons/svg/3100/3100525.svg\"\n                    alt=\"icon\"\n                  ></img>\n                </h3>\n                <input type=\"text\" id=\"waterLog\" placeholder=\"Enter Amount\" />\n                <label id=\"waterUnits\">ml</label>\n                <p>Suggested amount of water per day: 2 ~ 2.5L</p>\n                <button className=\"primary-btn\" id=\"logButton\">\n                  Save\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"logWaterView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogWater;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport TipBox from './../TipBox/TipBox';\nimport { NavLink } from 'react-router-dom';\nclass LogCalories extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  render() {\n    return (\n      <div id=\"LogCaloriesWrapper\">\n        <div className=\"logCaloriesView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n          <h1 id=\"caloriesHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/1599/1599302.svg\"\n              alt=\"icon\"\n            ></img>\n            Calories\n          </h1>\n          <div className=\"logCaloriesBox\">\n            <form>\n              <fieldset>\n                <h3>How much did you eat?</h3>\n                <input type=\"text\" id=\"caloriesLog\" placeholder=\"Enter Amount\" />\n                <label id=\"caloriesUnits\">Calories</label>\n                <p>Suggested amount of Calories per day: 2000 Calories</p>\n                <button className=\"primary-btn\" id=\"logButton\">\n                  Save\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"logCaloriesView right\">\n          <TipBox label=\"physical\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogCalories;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { MOODLIST } from './../../../constants';\n\nclass RadioMood extends Component {\n  state = {\n    user: this.props.activeuser,\n    mood: '',\n    moodList: MOODLIST,\n  };\n\n  onChangeMood = (event) => {\n    this.setState({\n      mood: event.target.value,\n    });\n  };\n\n  render() {\n    const carriers = this.state.moodList.map((mood) => {\n      return (\n        <div id=\"carriers\">\n          <img id=\"emoticon\" src={mood.icon} alt=\"icon\" />\n          <input\n            type=\"radio\"\n            value={mood.value}\n            checked={this.state.mood === mood.value}\n            onClick={this.onChangeMood}\n          />\n        </div>\n      );\n    });\n\n    return <div>{carriers}</div>;\n  }\n}\nexport default RadioMood;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport RadioMood from './RadioMood';\nimport { NavLink } from 'react-router-dom';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogMood extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n  render() {\n    return (\n      <div id=\"LogMoodWrapper\">\n        <div className=\"logMoodView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n          <h1 id=\"moodHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3010/3010884.svg\"\n              alt=\"icon\"\n            ></img>\n            Mood of the day\n          </h1>\n          <div className=\"logMoodBox\">\n            <form>\n              <fieldset>\n                <h3>How do you feel today?</h3>\n                <div id=\"iconContainer\">\n                  <RadioMood></RadioMood>\n                </div>\n                <button className=\"primary-btn\" id=\"logButton\">\n                  Save\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n        <div className=\"logMoodView right\">\n          <TipBox label=\"mental\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogMood;\n","import React, { Component } from 'react';\n\nclass RadioSleep extends Component {\n  state = {\n    user: this.props.activeuser,\n    quality: '',\n    qualityList: ['Bad', 'Normal', 'Good'],\n  };\n\n  onChangeQuality = (event) => {\n    this.setState({\n      quality: event.target.value,\n    });\n  };\n\n  render() {\n    const labels = this.state.qualityList.map((quality) => {\n      return (\n        <label id=\"quality\">\n          {quality}\n          <input\n            type=\"radio\"\n            value={quality}\n            checked={this.state.quality === quality}\n            onChange={this.onChangeQuality}\n          />\n        </label>\n      );\n    });\n\n    return (\n      <div>\n        <div id=\"radioContainer\">{labels}</div>\n      </div>\n    );\n  }\n}\n\nexport default RadioSleep;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport RadioSleep from './RadioSleep';\nimport { NavLink } from 'react-router-dom';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogSleep extends Component {\n  state = {\n    user: this.props.activeuser,\n  };\n\n  render() {\n    return (\n      <div id=\"logSleepWrapper\">\n        <div className=\"logSleepView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n\n          <h1 id=\"sleepHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/png/512/865/865813.png\"\n              alt=\"icon\"\n            ></img>\n            Hours of Sleep\n          </h1>\n          <div className=\"logSleepBox\">\n            <form>\n              <fieldset>\n                <h3>\n                  How much did you sleep?\n                  <img\n                    id=\"sleepIcon\"\n                    src=\"https://image.flaticon.com/icons/svg/3094/3094837.svg\"\n                    alt=\"icon\"\n                  ></img>\n                </h3>\n\n                <input type=\"text\" id=\"sleepLog\" placeholder=\"Enter Hours\" />\n                <label id=\"sleepUnits\">Hours</label>\n                <RadioSleep></RadioSleep>\n                <p>Average person needs 7 ~ 8 hours sleep per day</p>\n                <button className=\"primary-btn\" id=\"logButton\">\n                  Save\n                </button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n        <div className=\"logMoodView right\">\n          <TipBox label=\"mental\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\nexport default LogSleep;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nimport { NavLink } from 'react-router-dom';\nimport TipBox from './../TipBox/TipBox';\n\nclass LogStress extends Component {\n  state = {\n    user: this.props.activeuser,\n    value: 5,\n  };\n\n  onChangeSlide = (event) => {\n    this.setState({\n      value: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"logStressWrapper\">\n        <div className=\"logStressView left\">\n          <NavLink to=\"/overview\" id=\"closeButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n            ></img>\n          </NavLink>\n\n          <h1 id=\"stressHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/2534/2534673.svg\"\n              alt=\"icon\"\n            ></img>\n            Stress Level\n          </h1>\n          <div className=\"logStressBox\">\n            <form>\n              <fieldset>\n                <h3>Are you stressed?</h3>\n\n                <div class=\"sliderContainer\">\n                  <input\n                    type=\"range\"\n                    min={0}\n                    max={10}\n                    value={this.state.value}\n                    className=\"stressSlider\"\n                    onChange={this.onChangeSlide}\n                  ></input>\n                  <label id=\"sliderNum\">\n                    0\n                    <img\n                      id=\"stressIcon\"\n                      src=\"https://image.flaticon.com/icons/svg/2534/2534929.svg\"\n                      alt=\"icon\"\n                    ></img>\n                  </label>\n                  <label id=\"sliderNum1\">\n                    <img\n                      id=\"stressIcon\"\n                      src=\"https://image.flaticon.com/icons/svg/2534/2534673.svg\"\n                      alt=\"icon\"\n                    ></img>\n                    10\n                  </label>\n                </div>\n                <div class=\"resultContainer\">\n                  <label id=\"outputValue\">Your stress level: {this.state.value}</label>\n                  <button className=\"primary-btn\" id=\"logButton\">\n                    Save\n                  </button>\n                </div>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n        <div className=\"logStressView right\">\n          <TipBox label=\"mental\"></TipBox>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogStress;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { SYMPTOM_OPTION } from '../../../../constants';\nimport './../styles.css';\nclass SymptomInput extends Component {\n  render() {\n    const { symptom, handleChange, addTag } = this.props;\n\n    return (\n      <div id=\"SymptomInput\">\n        <select id=\"SymptomOption\" value={symptom} onChange={handleChange} placeholder=\"Symptoms\">\n          {SYMPTOM_OPTION.map((value) => (\n            <option key={value} className=\"option\" value={value}>\n              {value}\n            </option>\n          ))}\n        </select>\n        <NavLink to=\"/overview/logSick\" id=\"addTagButton\" onClick={addTag}>\n          <img\n            id=\"addIcon\"\n            src=\"https://image.flaticon.com/icons/svg/1057/1057216.svg\"\n            alt=\"icon\"\n          ></img>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default SymptomInput;\n","export const addTag = (log) => {\n  const symptomList = log.state.list;\n\n  const symptom = log.state.symptom;\n  if (symptomList.includes(symptom) === false) {\n    symptomList.push(symptom);\n  }\n  log.setState({\n    list: symptomList,\n  });\n};\n\nexport const removeTag = (log, symptom) => {\n  const reTag = log.state.list.filter((s) => {\n    return s !== symptom;\n  });\n\n  log.setState({\n    list: reTag,\n  });\n};\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { removeTag } from '../../../../actions/sicknessTag';\nimport './../styles.css';\nclass SymptomTag extends Component {\n  render() {\n    const { symptom, logComponent } = this.props;\n    return (\n      <label className=\"SymptomTag\">\n        {symptom}\n        <NavLink to=\"/overview/logSick\" onClick={removeTag.bind(this, logComponent, symptom)}>\n          <img\n            id=\"deleteButton\"\n            src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n            alt=\"icon\"\n          ></img>\n        </NavLink>\n      </label>\n    );\n  }\n}\n\nexport default SymptomTag;\n","import React, { Component } from 'react';\nimport SymptomTag from './../SymptomTag/SymptomTag';\nimport './../styles.css';\nclass SymptomList extends Component {\n  render() {\n    const { symptoms, logComponent } = this.props;\n\n    return (\n      <div id={this.props.id}>\n        {symptoms.map((symptom) => (\n          <SymptomTag symptom={symptom} logComponent={logComponent} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SymptomList;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { NavLink } from 'react-router-dom';\n\nimport SymptomInput from './SymptomInput/SymptomInput';\nimport SymptomList from './SymptomList/SymptomList';\nimport { addTag } from '../../../actions/sicknessTag';\nimport { SYMPTOM_OPTION } from '../../../constants';\n\nclass LogSick extends Component {\n  state = {\n    user: this.props.activeUser,\n    symptom: SYMPTOM_OPTION[0],\n    list: [],\n  };\n\n  onhandlechange = (event) => {\n    this.setState({\n      symptom: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"LogSickWrapper\">\n        <div className=\"logSickView\">\n          <NavLink to=\"/overview\" id=\"sickCloseButton\">\n            <img\n              id=\"xButton\"\n              src=\"https://image.flaticon.com/icons/svg/565/565313.svg\"\n              alt=\"icon\"\n              s\n            ></img>\n          </NavLink>\n          <h1 id=\"sickHeader\">\n            <img\n              id=\"icon\"\n              src=\"https://image.flaticon.com/icons/svg/3140/3140337.svg\"\n              alt=\"icon\"\n            ></img>\n            Sickness Log\n          </h1>\n          <div className=\"logSickBox\">\n            <form>\n              <fieldset>\n                <div id=\"sList\">\n                  <h3 id=\"SymptomQ\">How do you feel? Enter your symptoms</h3>\n                  <SymptomInput\n                    symptom={this.state.symptom}\n                    handleChange={this.onhandlechange}\n                    addTag={() => addTag(this)}\n                  />\n                  <SymptomList id=\"tagList\" symptoms={this.state.list} logComponent={this} />\n\n                  <button className=\"primary-btn\" id=\"logButton\">\n                    Save\n                  </button>\n                </div>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LogSick;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport Chart from 'chart.js';\nimport { DAYSOFWEEK } from '../../../constants';\n\nclass Graph extends Component {\n  chartRef = React.createRef();\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate() {\n    this.buildChart();\n  }\n\n  buildChart = () => {\n    const graphRef = this.chartRef.current.getContext('2d');\n    new Chart(graphRef, {\n      type: this.props.type,\n      data: {\n        labels: DAYSOFWEEK,\n        datasets: [\n          {\n            label: this.props.title,\n            borderColor: '#dbedff',\n            data: this.props.data,\n            fill: false,\n          },\n        ],\n      },\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"graph\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default Graph;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\n\nclass Trends extends Component {\n  state = {\n    user: this.props.activeUser,\n    trends: {\n      title: '',\n      sleep: [],\n      weight: [],\n      calories: [],\n      stress: [],\n      type: 'line',\n    },\n  };\n\n  renderGraph(type) {\n    switch (type) {\n      case 'weight':\n        this.setState({\n          trends: {\n            title: 'Body Weight',\n            data: this.state.user.trends.weight,\n            type: 'line',\n          },\n        });\n        break;\n      case 'sleep':\n        this.setState({\n          trends: {\n            title: 'Hours of Sleep',\n            data: this.state.user.trends.sleep,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'calories':\n        this.setState({\n          trends: {\n            title: 'Calorie Intake',\n            data: this.state.user.trends.calories,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'stress':\n        this.setState({\n          trends: {\n            title: 'Stress Level',\n            data: this.state.user.trends.stress,\n            type: 'line',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: [],\n            type: 'line',\n          },\n        });\n        break;\n    }\n  }\n\n  render() {\n    const { title, data, type } = this.state.trends;\n    return (\n      <div id=\"TrendsWrapper\">\n        <div id=\"trendsContainer\">\n          <button id=\"tabs\" onClick={() => this.renderGraph('weight')}>\n            Weight\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('sleep')}>\n            Sleep\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('calories')}>\n            Calories\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('stress')}>\n            Stress\n          </button>\n        </div>\n        <Graph data={data} title={title} type={type} />\n      </div>\n    );\n  }\n}\n\nexport default Trends;\n","'use-strict';\nimport reminderSound from '../../assets/light.mp3';\n\nconst log = console.log;\n\nexport const addNotificationHandler = (ctx, type, title, message) => {\n  log('Creating notification...');\n  const notif = new Notification(type, title, message);\n  const user = ctx.state.activeUser;\n  user.notifications.push(notif);\n  ctx.setState({\n    activeUser: user,\n  });\n  log('Successfully created notification', ctx.state.activeUser.notifications);\n};\n\nexport const removeNotificationHandler = (ctx, id) => {\n  const user = ctx.state.activeUser;\n  const notifications = user.notifications;\n  const index = _getNotificationIndex(notifications, id);\n  notifications.splice(index, 1);\n  user.notifications = notifications;\n  ctx.setState({\n    activeUser: user,\n  });\n};\n\nconst _getNotificationIndex = (list, id) => {\n  let i;\n  for (i = 0; i < list.length; i++) {\n    if (list[i].id === id) {\n      return i;\n    }\n  }\n};\n\nexport const addTimerHandler = (ctx, id, timer) => {\n  const user = ctx.state.activeUser;\n  user.timers.push({ id: id, timer: timer });\n  ctx.setState({\n    activeUser: user,\n  });\n};\n\nexport class Notification {\n  constructor(type, title, message) {\n    this.type = type;\n    this.title = title;\n    this.message = message;\n    this.id = this._generateId();\n  }\n\n  _generateId = () => {\n    return 'n' + Math.random().toString(36).substr(3, 8);\n  };\n}\n\nexport const playSound = () => {\n  let rAudio = new Audio(reminderSound);\n  rAudio.play();\n};\n\nexport const getNumNotifs = (notifications, type) => {\n  let count = 0;\n  let i;\n  for (i = 0; i < notifications?.length; i++) {\n    if (notifications[i].type === type) {\n      count += 1;\n    }\n  }\n  return count;\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\nimport goodIcon from '../../../../assets/good_status.png';\nimport badIcon from '../../../../assets/bad_status.png';\nimport hourglassIcon from '../../../../assets/hourglass.png';\nimport { playSound } from '../../../actions/notification';\nimport { REMINDER_STATUS } from '../../../constants';\nimport './styles.css';\n\nclass ReminderItem extends Component {\n  state = {\n    reminder: this.props.reminder,\n    user: this.props.activeUser,\n  };\n\n  componentDidMount() {\n    const currTime = new Date().getTime();\n    const reminderTime = new Date(this.state.reminder.time);\n    const time = reminderTime - currTime;\n    if (!this.notificationExists()) {\n      this.reminderTimer = setTimeout(() => {\n        playSound();\n        this.props.notifyAboutReminder(this.state.reminder);\n      }, time);\n      this.props.addTimerHandler(this.state.reminder.id, this.reminderTimer);\n    }\n  }\n\n  notificationExists() {\n    let i;\n    for (i = 0; i < this.props.activeUser?.timers.length; i++) {\n      if (this.props.activeUser?.timers[i].id === this.state.reminder.id) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getStatusIcon = (status) => {\n    const statusMap = {\n      [REMINDER_STATUS.active]: hourglassIcon,\n      [REMINDER_STATUS.completed]: goodIcon,\n      [REMINDER_STATUS.overdue]: badIcon,\n    };\n\n    return statusMap[status];\n  };\n\n  render() {\n    const { reminder } = this.props;\n    const options = {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n    };\n    const dateTimeValue = new Date(reminder?.time);\n    const dateTimeStr = new Intl.DateTimeFormat('en-US', options).format(dateTimeValue);\n    return (\n      <div id=\"ReminderItemWrapper\">\n        <div>\n          <img\n            id=\"ReminderStatusIcon\"\n            src={this.getStatusIcon(reminder.status)}\n            alt=\"reminder status\"\n          />\n        </div>\n        <div id=\"ReminderDetailsWrapper\">\n          <p>\n            <strong> {reminder?.name} </strong> <br />\n            <strong> {dateTimeStr} </strong> <br />\n            {reminder?.note}\n          </p>\n        </div>\n        <div id=\"ReminderActionsWrapper\">\n          <IconButton\n            onClick={() => {\n              this.props.completeReminderHandler(\n                reminder.category,\n                reminder.id,\n                this.reminderTimer,\n              );\n            }}\n            aria-label=\"done\"\n          >\n            <DoneIcon />\n          </IconButton>\n          <Link\n            to={`/reminders/add/${reminder?.category}/${reminder?.subCategory}/${reminder?.name}/${reminder?.time}/${reminder?.note}/${reminder?.id}`}\n          >\n            <IconButton aria-label=\"edit\">\n              <EditIcon />\n            </IconButton>\n          </Link>\n          <IconButton\n            onClick={() => {\n              this.props.deleteReminderHandler(reminder.category, reminder.id, this.reminderTimer);\n            }}\n            aria-label=\"delete\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReminderItem;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReminderItem from './ReminderItem';\nimport { HEALTH_CATEGORIES, USER_ACCOUNT_TYPE, ADMIN_REMINDER_TYPES } from '../../constants';\nimport './styles.css';\n\nconst EmptyReminderList = () => {\n  return (\n    <div id=\"EmptyReminderList\">\n      <p> No reminders set </p>\n    </div>\n  );\n};\n\nclass Reminders extends Component {\n  state = {\n    user: this.props.activeUser,\n  };\n\n  getReminderCatView = (type) => {\n    return (\n      <div key={type}>\n        <span className=\"catTitle\"> {type} </span>\n        <div className=\"titleLine\" />\n        {this.state.user?.reminders[type].length === 0 ? (\n          <EmptyReminderList />\n        ) : (\n          this.state.user?.reminders[type].map((reminder) => {\n            return (\n              <ReminderItem\n                key={reminder.id}\n                reminder={reminder}\n                activeUser={this.props.activeUser}\n                addTimerHandler={this.props.addTimerHandler}\n                notifyAboutReminder={this.props.notifyAboutReminder}\n                completeReminderHandler={this.props.completeReminderHandler}\n                deleteReminderHandler={this.props.deleteReminderHandler}\n              />\n            );\n          })\n        )}\n      </div>\n    );\n  };\n\n  getUserReminderView = () => {\n    const userReminderTypes = [\n      HEALTH_CATEGORIES.medical,\n      HEALTH_CATEGORIES.mental,\n      HEALTH_CATEGORIES.phsycial,\n    ];\n    return (\n      <div id=\"RemindersView\" className=\"windowWrapper\">\n        {userReminderTypes.map((type) => {\n          return this.getReminderCatView(type);\n        })}\n      </div>\n    );\n  };\n\n  getAdminReminderView = () => {\n    const adminReminderTypes = [ADMIN_REMINDER_TYPES.task];\n    return (\n      <div id=\"RemindersView\" className=\"windowWrapper\">\n        {adminReminderTypes.map((type) => {\n          return this.getReminderCatView(type);\n        })}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div id=\"RemindersWrapper\">\n        {this.state.user?.type === USER_ACCOUNT_TYPE\n          ? this.getUserReminderView()\n          : this.getAdminReminderView()}\n        <NavLink className=\"fabNavLink\" to=\"/reminders/add\">\n          <Fab variant=\"extended\" id=\"Fab\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n            Add Reminder\n          </Fab>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default Reminders;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ListSelector from '../../General/ListSelector';\nimport { onSelectHandler, onInputChangeHandler } from '../../../actions/utils';\nimport './styles.css';\nimport {\n  HEALTH_CATEGORIES,\n  HEALTH_SUB_CATEGORIES,\n  ADMIN_ACCOUNT_TYPE,\n  ADMIN_REMINDER_TYPES,\n} from '../../../constants';\n\nclass AddReminder extends Component {\n  state = {\n    category: this.props.match?.params.cat,\n    subCategory: this.props.match?.params.sub,\n    reminderName: this.props.match?.params.name,\n    reminderTime: this.props.match?.params.time,\n    reminderNote: this.props.match?.params.note,\n    isCategoryValid: true,\n    isSubCategoryValid: true,\n    isNameValid: true,\n    isDateTimeValid: true,\n    isNoteValid: true,\n    newReminderAdded: false,\n  };\n\n  goToReminders = () => {\n    if (this.state.newReminderAdded) {\n      return <Redirect to=\"/reminders\" />;\n    }\n  };\n\n  displayErrorMsg = () => {\n    const { isCategoryValid, isSubCategoryValid, isNameValid, isDateTimeValid } = this.state;\n    if (isCategoryValid && isSubCategoryValid && isNameValid && isDateTimeValid) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Input fields in red are missing </span>;\n    }\n  };\n\n  render() {\n    const { activeUser } = this.props;\n    return (\n      <div id=\"AddReminderWrapper\">\n        {this.goToReminders()}\n        <div id=\"AddReminderWindow\" className=\"windowWrapper\">\n          <h1> Add Reminder </h1>\n          {this.displayErrorMsg()}\n          <br />\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Category: </span>\n            <ListSelector\n              id=\"HealthCatList\"\n              className={this.state.isCategoryValid ? '' : 'invalidInput'}\n              name=\"categories\"\n              autoComplete=\"false\"\n              defaultValue={this.state.category === undefined ? '' : this.state.category}\n              options={\n                activeUser.type === ADMIN_ACCOUNT_TYPE\n                  ? Object.values(ADMIN_REMINDER_TYPES)\n                  : Object.values(HEALTH_CATEGORIES)\n              }\n              onChangeHandler={(event) => {\n                onSelectHandler(this, event, 'category');\n              }}\n            />\n          </div>\n          {this.state.category !== undefined && activeUser.type !== ADMIN_ACCOUNT_TYPE ? (\n            <div className=\"reminderInputWrapper\">\n              <span className=\"inputLabel\"> Sub-Category: </span>\n              <ListSelector\n                id=\"SubHealthCatList\"\n                className={this.state.isSubCategoryValid ? '' : 'invalidInput'}\n                name=\"subCategories\"\n                autoComplete=\"false\"\n                defaultValue={this.state.subCategory === undefined ? '' : this.state.subCategory}\n                options={HEALTH_SUB_CATEGORIES[this.state.category]}\n                onChangeHandler={(event) => {\n                  onSelectHandler(this, event, 'subCategory');\n                }}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Title: </span>\n            <input\n              id=\"ReminderTitleInput\"\n              className={`input ${this.state.isNameValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              name=\"reminderName\"\n              value={this.state.reminderName === undefined ? '' : this.state.reminderName}\n              placeholder=\"Title\"\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> When to remind: </span>\n            <input\n              className={`input ${this.state.isDateTimeValid ? '' : 'invalidInput'}`}\n              type=\"datetime-local\"\n              id=\"DateTimeInput\"\n              name=\"reminderTime\"\n              value={this.state.reminderTime === undefined ? '' : this.state.reminderTime}\n              min={new Date()}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"reminderInputWrapper\">\n            <span className=\"inputLabel\"> Notes: </span>\n            <textarea\n              id=\"ReminderNotesInput\"\n              className={`input ${this.state.isNoteValid ? '' : 'invalidInput'}`}\n              name=\"reminderNote\"\n              maxLength=\"225\"\n              placeholder=\"Notes\"\n              value={this.state.reminderNote === undefined ? '' : this.state.reminderNote}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n            <br />\n            <span className=\"charCount\">\n              {this.state.reminderNote !== undefined ? this.state['reminderNote'].length : '0'}/225\n            </span>\n          </div>\n          {this.props.match?.params.id !== undefined ? (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.editReminderHandler(\n                  this,\n                  this.props.match.params.cat,\n                  this.props.match.params.id,\n                );\n              }}\n            >\n              {' '}\n              Edit{' '}\n            </button>\n          ) : (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.addReminderHandler(this);\n              }}\n            >\n              {' '}\n              Add{' '}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddReminder;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass Appointment extends Component {\n  state = {\n    appointments: this.props.appointments,\n  };\n\n  getAppointments() {\n    let appoint = [];\n    for (let i = 0; i < this.state.appointments.length; i++) {\n      appoint.push(\n        <p id=\"appointmentBox\" key={i}>\n          {this.state.appointments[i][1]} <strong>{this.state.appointments[i][0]}</strong>\n        </p>,\n      );\n    }\n    return <div id=\"boxContainer\">{appoint}</div>;\n  }\n\n  render() {\n    return <div>{this.getAppointments()}</div>;\n  }\n}\n\nexport default Appointment;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass Streaks extends Component {\n  state = {\n    streaks: this.props.streaks,\n  };\n\n  getStreaks() {\n    let streaks = '';\n    for (let i = 0; i < this.state.streaks.length; i++) {\n      streaks = streaks + this.state.streaks[i];\n    }\n    return (\n      <div id=\"boxContainer\">\n        <p id=\"streaksBox\">{streaks}</p>\n      </div>\n    );\n  }\n\n  render() {\n    return <div>{this.getStreaks()}</div>;\n  }\n}\n\nexport default Streaks;\n","import { MONTHS, USERS } from '../constants.js';\n//const log = console.log;\n\nexport const getFirstDay = () => {\n  let d = new Date();\n  const firstDay = new Date(d.getFullYear(), d.getMonth(), 1);\n  return firstDay.getDay();\n};\n\nexport const getMonth = () => {\n  let months = MONTHS;\n  let d = new Date();\n  return months[d.getMonth()];\n};\n\nexport const getMonthDay = (time) => {\n  let d = new Date(time);\n  return [d.getUTCMonth() + 1, d.getUTCDate()];\n};\n\nexport const loadAppointments = (user) => {\n  const appointments = [];\n  let reminders = USERS[user].reminders;\n  for (let i = 0; i < reminders['Medical Health'].length; i++) {\n    if (reminders['Medical Health'][i].subCategory === 'Appointments') {\n      appointments.push(reminders['Medical Health'][i]);\n    }\n  }\n  return appointments;\n};\n\nexport const findApps = (lists, date, month) => {\n  const app = [];\n  for (let i = 0; i < lists.length; i++) {\n    let appTime = getMonthDay(lists[i].time);\n    if (appTime[1] === date) {\n      let d = new Date(lists[i].time);\n      let formatTime = d.getHours() + ':' + d.getMinutes();\n      app.push([lists[i].name, formatTime]);\n    }\n  }\n  return app;\n};\n\nexport const loadStreaks = (user) => {\n  const streaks = [];\n  return streaks;\n};\n\nexport const findStreaks = (lists, date) => {\n  const streaks = [];\n  return streaks;\n};\n","import React, { Component } from 'react';\nimport './styles.css';\nimport CalendarModule from './calendar.js';\nimport { getMonth, loadAppointments } from '../../actions/calendarItems';\n\nclass Calendar extends Component {\n  state = {\n    user: this.props.activeUser,\n    type: 'calendar',\n    items: [],\n  };\n\n  updateType(type) {\n    if (type === 'calendar') {\n      const appList = loadAppointments(this.state.user.hash);\n      this.setState({\n        type: 'calendar',\n        items: appList,\n      });\n    } else if (type === 'streaks') {\n      const streaksList = []; //loadStreaks(this.state.user.hash);\n      this.setState({\n        type: 'streaks',\n        items: streaksList,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"CalendarWrapper\">\n        <h1 id=\"month\">{getMonth()}</h1>\n        <div id=\"calendarContainer\">\n          <button id=\"tabs\" onClick={() => this.updateType('calendar')}>\n            Calendar\n          </button>\n          <button id=\"tabs\" onClick={() => this.updateType('streaks')}>\n            Streaks\n          </button>\n        </div>\n        <CalendarModule user={this.state.user} type={this.state.type} items={this.state.items} />\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport ListSelector from '../ListSelector';\nimport { onSelectHandler } from '../../../actions/utils';\nimport './styles.css';\n\nclass LocationSelector extends Component {\n  state = {\n    selectedLocation: undefined,\n  };\n\n  render() {\n    return (\n      <div id=\"LocationSelectorWrapper\">\n        <h2>{this.props.header}</h2>\n        <p>{this.props.message}</p>\n        <div id=\"SelectWrapper\">\n          <h3>Please select a location: </h3>\n          <ListSelector\n            id=\"LocList\"\n            name=\"locations\"\n            autoComplete=\"on\"\n            options={this.props.options}\n            onChangeHandler={(event) => {\n              onSelectHandler(this, event, 'selectedLocation');\n            }}\n          />\n        </div>\n        <button\n          id=\"ActionBtn\"\n          className=\"primary-btn\"\n          onClick={() => {\n            this.props.onSubmitHandler(this.state.selectedLocation);\n          }}\n        >\n          {this.props.action}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LocationSelector;\n","const log = console.log;\n\nexport const viewPlace = (ctx, locations, location) => {\n  log(`Viewing ${location}...`);\n  log('Displaying place details', locations[location], '...');\n  ctx.setState({\n    locationViewed: locations[location],\n  });\n};\n\nexport const checkInHandler = (ctx, location) => {\n  log(`Checking in user...`);\n  const { activeUser, locationsDB } = ctx.state;\n  locationsDB[location.id].currOccupancy += 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = location;\n  activeUser.checkInHistory.push({ location: location, time: new Date() });\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB,\n  });\n  log(`User successfully checked in at ${ctx.state.activeUser.checkedInLocation?.name}`);\n};\n\nconst _isAvaliable = (location) => {\n  return location.maxOccupancy > location.currOccupancy;\n};\n\nexport const isCheckInValid = (ctx, location) => {\n  return (\n    (ctx.state.user?.checkedInLocation !== null || ctx.state.selectedLocation !== undefined) &&\n    ctx.state.user?.checkedInLocation?.id !== location?.id\n  );\n};\n\nexport const checkoutHandler = (ctx) => {\n  log(`Checking-out user...`);\n  const { activeUser, locationsDB } = ctx.state;\n  const location = activeUser.checkedInLocation;\n  locationsDB[location.id].currOccupancy -= 1;\n  locationsDB[location.id].isAvaliable = _isAvaliable(locationsDB[location.id]);\n  activeUser.checkedInLocation = undefined;\n  ctx.setState({\n    activeUser: activeUser,\n    locationsDB: locationsDB,\n  });\n  log(\n    `User ${\n      ctx.state.activeUser.checkedInLocation === undefined ? 'successfully' : 'unsuccessfully'\n    } checked-out from ${location?.name}`,\n  );\n};\n\nexport class AppLocation {\n  constructor(name, maxOccupancy, address, description, image) {\n    this.id = name;\n    this.name = name;\n    this.isAvaliable = true;\n    this.address = address;\n    this.country = 'Canada';\n    this.maxOccupancy = maxOccupancy;\n    this.currOccupancy = 0;\n    this.description = description;\n    this.imageUrl = image;\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport goodIcon from '../../../../assets/good_status.png';\nimport badIcon from '../../../../assets/bad_status.png';\nimport { isCheckInValid } from '../../../actions/checkIn';\nimport { ADMIN_ACCOUNT_TYPE } from '../../../constants';\nimport map from '../../../../assets/map.png';\nimport './styles.css';\n\nclass PlaceViewer extends Component {\n  state = {\n    user: this.props.activeUser,\n    open: false,\n  };\n\n  handleClick = () => {\n    this.setState({ open: true }, () => {\n      setTimeout(() => {\n        this.setState({ open: false });\n      }, 2980);\n    });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { location, activeUser } = this.props;\n    return (\n      <div id=\"PlaceViewerWrapper\">\n        <div id=\"PlaceViewrHeader\">\n          <h2>{location?.name}</h2>\n          <img src={location?.isAvaliable ? goodIcon : badIcon} alt=\"status\" />\n        </div>\n        <div id=\"PlaceContentWrapper\">\n          <div id=\"PhotoWrapper\">\n            <img alt=\"location view\" src={location.imageUrl} />\n          </div>\n          <div id=\"PlaceDetailsWrapper\">\n            <div id=\"OccupanyWrapper\">\n              <h3> Occupany Limit: {location?.maxOccupancy} </h3>\n              <h4> Current occupany: {location?.currOccupancy} </h4>\n            </div>\n            <div id=\"PlaceDescWrapper\">\n              <p>{location.description}</p>\n            </div>\n          </div>\n        </div>\n        {activeUser.type === ADMIN_ACCOUNT_TYPE ? (\n          ''\n        ) : (\n          <div id=\"Map\">\n            <img src={map} alt=\"map\"></img>\n          </div>\n        )}\n        {activeUser.type === ADMIN_ACCOUNT_TYPE ? (\n          <div id=\"AdminActions\">\n            <button\n              id=\"SendAlertBtn\"\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.sendAlertHandler(location);\n                return !this.state.open ? this.handleClick() : '';\n              }}\n            >\n              {' '}\n              Send Alert{' '}\n            </button>\n            <Link\n              to={`/alert-system/add/${location?.name}/${location?.address}/${encodeURIComponent(\n                location?.imageUrl,\n              )}/${location?.maxOccupancy}/${location?.description}`}\n            >\n              <IconButton aria-label=\"edit\">\n                <EditIcon />\n              </IconButton>\n            </Link>\n            <IconButton\n              onClick={() => {\n                this.props.deleteLocationHandler(location);\n              }}\n              aria-label=\"delete\"\n            >\n              <DeleteIcon />\n            </IconButton>\n          </div>\n        ) : isCheckInValid(this, location) ? (\n          <button id=\"CheckInBtn\" className=\"primary-btn\" onClick={this.props.onCheckInHandler}>\n            Check In\n          </button>\n        ) : (\n          ''\n        )}\n        <div className={`snackbar ${open ? 'show' : ''}`}>Alert Has Been Sent!</div>\n      </div>\n    );\n  }\n}\n\nexport default PlaceViewer;\n","import React, { Component } from 'react';\nimport './styles.css';\n\nclass CheckOutView extends Component {\n  render() {\n    const { location, checkoutHandler } = this.props;\n    return (\n      <div id=\"CheckInStatus\" className=\"windowWrapper\">\n        {this.props.location?.name !== undefined ? (\n          <div id=\"CheckoutView\">\n            <h2> You Are Currently Checked In At {location?.name} </h2>\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                checkoutHandler();\n              }}\n            >\n              Checkout\n            </button>\n          </div>\n        ) : (\n          <h2> You Are Currently Not Checked In Anywhere </h2>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CheckOutView;\n","import React, { Component } from 'react';\nimport LocationSelector from '../General/LocationSelector';\nimport { viewPlace } from '../../actions/checkIn';\nimport PlaceViewer from './PlaceViewer';\nimport './styles.css';\nimport CheckOutView from './CheckOutView';\n\nclass CheckIn extends Component {\n  state = {\n    user: this.props.activeUser,\n    locationViewed: undefined,\n  };\n\n  render() {\n    return (\n      <div id=\"PageWrapper\">\n        {this.state.user?.checkedInLocation !== null ? (\n          <div id=\"CheckOutWrapper\">\n            <CheckOutView\n              location={this.state.user?.checkedInLocation}\n              checkoutHandler={() => {\n                this.props.checkoutHandler();\n              }}\n            />\n          </div>\n        ) : (\n          ''\n        )}\n        <div id=\"CheckInWrapper\" className=\"windowWrapper\">\n          <LocationSelector\n            header=\"Check-In Menu\"\n            message=\"Help prevent the spead of COVID by practiciing social ditancing. \n            By using our check-in system you can see the copacity of parks you want \n            to exercise at and help keep it up to date by checking in.\"\n            action=\"View Place\"\n            options={Object.keys(this.props.locations)}\n            onSubmitHandler={(location) => {\n              viewPlace(this, this.props.locations, location);\n            }}\n          />\n          {this.state.locationViewed !== undefined ? (\n            <div>\n              <hr className=\"detailsDivider\" />\n              <PlaceViewer\n                activeUser={this.state.user}\n                location={this.state.locationViewed}\n                onCheckInHandler={() => {\n                  this.props.checkInHandler(this.state.locationViewed);\n                }}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckIn;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport PlaceViewer from '../CheckIn/PlaceViewer';\nimport LocationSelector from '../General/LocationSelector';\nimport { viewPlace } from '../../actions/checkIn';\nimport map from '../../../assets/adminMap.png';\nimport './styles.css';\n\nclass AdminCheckIn extends Component {\n  state = {\n    user: this.props.activeUser,\n    locationViewed: undefined,\n  };\n\n  render() {\n    return (\n      <div id=\"AdminCheckIn\">\n        <div id=\"AlertWrapper\" className=\"windowWrapper\">\n          <LocationSelector\n            header=\"Check-In Alert System\"\n            message=\"Help prevent the spead of COVID by alerting\n            our users if they have checked into a place that has\n            had a COVID case within the past 14 days.\"\n            action=\"View Place\"\n            options={Object.keys(this.props.locations)}\n            onSubmitHandler={(location) => {\n              viewPlace(this, this.props.locations, location);\n            }}\n          />\n          {this.state.locationViewed !== undefined ? (\n            <div>\n              <hr className=\"detailsDivider\" />\n              <PlaceViewer\n                activeUser={this.state.user}\n                location={this.state.locationViewed}\n                deleteLocationHandler={(loc) => {\n                  this.props.deleteLocationHandler(this, loc);\n                }}\n                sendAlertHandler={this.props.sendAlertHandler}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n        <div id=\"GeoLoc\" className=\"windowWrapper\">\n          <h2> COVID Cases: Geo Locator </h2>\n          <div id=\"Map\">\n            <img src={map} alt=\"map\"></img>\n          </div>\n        </div>\n        <NavLink className=\"fabNavLink\" to=\"/alert-system/add\">\n          <Fab variant=\"extended\" id=\"Fab\" color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n            Add Location\n          </Fab>\n        </NavLink>\n      </div>\n    );\n  }\n}\n\nexport default AdminCheckIn;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { onInputChangeHandler } from '../../actions/utils';\nimport './styles.css';\n\nclass AddLocation extends Component {\n  state = {\n    locationName: this.props.match?.params.name,\n    address: this.props.match?.params.addr,\n    imageUrl: decodeURIComponent(this.props.match?.params.img),\n    maxOccupancy: this.props.match?.params.maxOcc,\n    description: this.props.match?.params.desc,\n    isNameValid: true,\n    isAddressValid: true,\n    isImageUrlValid: true,\n    isMaxOccValid: true,\n    isDescValid: true,\n    newLocationAdded: false,\n  };\n\n  goToAlertSystem = () => {\n    if (this.state.newLocationAdded) {\n      return <Redirect to=\"/alert-system\" />;\n    }\n  };\n\n  displayErrorMsg = () => {\n    const { isNameValid, isAddressValid, isImageUrlValid, isMaxOccValid, isDescValid } = this.state;\n    if (isNameValid && isAddressValid && isImageUrlValid && isMaxOccValid && isDescValid) {\n      return '';\n    } else {\n      return <span className=\"errorMsg\"> Input fields in red are missing</span>;\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"AddLocationWrapper\">\n        {this.goToAlertSystem()}\n        <div id=\"AddLocationWindow\" className=\"windowWrapper\">\n          <h1> {this.props.match?.params.name !== undefined ? 'Edit' : 'Add'} Location </h1>\n          {this.displayErrorMsg()}\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Location Name: </span>\n            <input\n              className={`input ${this.state.isNameValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"LocationName\"\n              name=\"locationName\"\n              placeholder=\"Location name\"\n              value={this.state.locationName === undefined ? '' : this.state.locationName}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Address: </span>\n            <input\n              className={`input ${this.state.isAddressValid ? '' : 'invalidInput'}`}\n              type=\"text\"\n              id=\"LocationAddress\"\n              name=\"address\"\n              placeholder=\"Address\"\n              value={this.state.address === undefined ? '' : this.state.address}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Image Url: </span>\n            <input\n              className={`input ${this.state.isImageUrlValid ? '' : 'invalidInput'}`}\n              type=\"url\"\n              id=\"LocationImgUrl\"\n              name=\"imageUrl\"\n              placeholder=\"Image Url\"\n              value={\n                this.state.imageUrl === undefined || this.state.imageUrl === 'undefined'\n                  ? ''\n                  : this.state.imageUrl\n              }\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Max Occupancy: </span>\n            <input\n              className={`input ${this.state.isMaxOccValid ? '' : 'invalidInput'}`}\n              type=\"number\"\n              id=\"LocationMaxOcc\"\n              name=\"maxOccupancy\"\n              min=\"1\"\n              max=\"5000\"\n              placeholder=\"Max occupancy\"\n              value={this.state.maxOccupancy === undefined ? '' : this.state.maxOccupancy}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n          </div>\n          <div className=\"locationInputWrapper\">\n            <span className=\"inputLabel\"> Description: </span>\n            <textarea\n              id=\"LocationDesc\"\n              className={`input ${this.state.isDescValid ? '' : 'invalidInput'}`}\n              name=\"description\"\n              maxLength=\"400\"\n              placeholder=\"Location description\"\n              value={this.state.description === undefined ? '' : this.state.description}\n              onChange={(event) => {\n                onInputChangeHandler(this, event);\n              }}\n            />\n            <br />\n            <span className=\"charCount\">\n              {this.state.description !== undefined ? this.state['description'].length : '0'}/400\n            </span>\n          </div>\n          {this.props.match?.params.name !== undefined ? (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.editLocationHandler(this);\n              }}\n            >\n              Edit\n            </button>\n          ) : (\n            <button\n              className=\"primary-btn\"\n              onClick={() => {\n                this.props.addLocationHandler(this);\n              }}\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddLocation;\n","const log = console.log;\n\nexport const avgWeight = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.weight[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average weight loaded');\n  return weekAvg;\n};\n\nexport const avgStress = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.stress[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average stress  loaded');\n  return weekAvg;\n};\n\nexport const avgSleep = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.sleep[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average sleep loaded');\n  return weekAvg;\n};\n\nexport const avgCalories = (allUser) => {\n  let weekAvg = [];\n  let count = 0;\n  for (let i = 0; i < 7; i++) {\n    let sum = 0;\n    for (let x in allUser) {\n      if (allUser[x].type === 'user') {\n        sum = sum + allUser[x].trends.calories[i];\n        count = count + 1;\n      }\n    }\n    if (count !== 0) {\n      weekAvg.push(sum / count);\n    }\n    count = 0;\n  }\n  log('average calories loaded');\n  return weekAvg;\n};\n","import React, { Component } from 'react';\nimport './styles.css';\nimport Graph from './Graph/index.jsx';\nimport { avgStress, avgCalories, avgSleep, avgWeight } from '../../actions/trends';\n\nclass AdminTrends extends Component {\n  state = {\n    user: this.props.activeUser,\n    userDB: this.props.userDB,\n    trends: {\n      title: '',\n      data: [],\n      type: 'line',\n    },\n  };\n\n  renderGraph(type) {\n    let avg = [];\n    switch (type) {\n      case 'weight':\n        avg = avgWeight(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Body Weight',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      case 'sleep':\n        avg = avgSleep(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Hours of Sleep',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'calories':\n        avg = avgCalories(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Calorie Intake',\n            data: avg,\n            type: 'bar',\n          },\n        });\n        break;\n      case 'stress':\n        avg = avgStress(this.state.userDB);\n        this.setState({\n          trends: {\n            title: 'Average Stress Level',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          trends: {\n            title: '',\n            data: avg,\n            type: 'line',\n          },\n        });\n        break;\n    }\n  }\n\n  // To render admin:\n  // import AdminTrends from './adminTrend';\n  // <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />\n\n  render() {\n    const { title, data, type } = this.state.trends;\n    return (\n      <div id=\"TrendsWrapper\">\n        <div id=\"trendsContainer\">\n          <button id=\"tabs\" onClick={() => this.renderGraph('weight')}>\n            Weight\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('sleep')}>\n            Sleep\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('calories')}>\n            Calories\n          </button>\n          <button id=\"tabs\" onClick={() => this.renderGraph('stress')}>\n            Stress\n          </button>\n        </div>\n        <Graph data={data} title={title} type={type} />\n      </div>\n    );\n  }\n}\n\nexport default AdminTrends;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport {\n  USERS,\n  USER_ACCOUNT_TYPE,\n  ADMIN_ACCOUNT_TYPE,\n  ADMIN_REMINDER_TYPES,\n} from './../../constants';\nimport Button from '@material-ui/core/Button';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { NavLink } from 'react-router-dom';\nclass ManageUser extends Component {\n  onClickDeleteUser = (user) => {\n    if (user in USERS) {\n      delete USERS[user];\n      this.forceUpdate();\n    }\n  };\n  onClickAssignAdmin = (user) => {\n    if (user in USERS && USERS[user].type === USER_ACCOUNT_TYPE) {\n      USERS[user].type = ADMIN_ACCOUNT_TYPE;\n      USERS[user].reminders = { [ADMIN_REMINDER_TYPES.task]: [] };\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    const keys = Object.getOwnPropertyNames(USERS);\n    return (\n      <div id=\"ManageUserWrapper\">\n        <h1 id=\"ManagementHeader\">\n          <img\n            id=\"userManageicon\"\n            src=\"https://image.flaticon.com/icons/svg/876/876176.svg\"\n            alt=\"icon\"\n          ></img>\n          User Management\n        </h1>\n        <div id=\"userManageBox\">\n          <div>\n            <fieldset>\n              <h2 id=\"userListTitle\">User List</h2>\n              {keys.map((user) => {\n                if (USERS[user].type === USER_ACCOUNT_TYPE) {\n                  return (\n                    <TableRow id=\"userRow\" key={USERS[user].email}>\n                      <TableCell id=\"userInfoCell\" component=\"th\" scope=\"row\">\n                        <li id=\"userInfoList\">\n                          User : {USERS[user].firstName} {USERS[user].lastName}{' '}\n                        </li>\n                        <li id=\"userInfoList\">Email: {USERS[user].email}</li>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <NavLink to={`/user-profile/${USERS[user].hash}`} id=\"linkView\">\n                          <Button className=\"clickable View\">View Profile</Button>\n                        </NavLink>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Manage\"\n                          onClick={() => this.onClickAssignAdmin(user)}\n                        >\n                          Assign Admin\n                        </Button>\n                      </TableCell>\n                      <TableCell id=\"userManageButton\" component=\"th\" scope=\"row\">\n                        <Button\n                          className=\"clickable Delete\"\n                          onClick={() => this.onClickDeleteUser(user)}\n                        >\n                          Remove\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  );\n                } else {\n                  return undefined;\n                }\n              })}\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManageUser;\n","import React, { Component } from 'react';\nimport './styles.css';\nimport { USERS } from './../../constants';\nimport { NavLink } from 'react-router-dom';\n\nclass UserProfile extends Component {\n  state = {\n    userid: this.props.match?.params.id,\n  };\n\n  render() {\n    const uid = this.state.userid;\n    return (\n      <div id=\"ProfileWrapper\">\n        <h1 id=\"ProfileHeader\">\n          <img\n            id=\"ProfileIcon\"\n            src=\"https://image.flaticon.com/icons/svg/876/876176.svg\"\n            alt=\"icon\"\n          ></img>\n          Profile Info\n        </h1>\n        <div id=\"ProfileBox\">\n          <div>\n            <fieldset>\n              <h3 id=\"userProfileTitle\">{USERS[uid].firstName}'s profile</h3>\n              <div id=\"userProfile\">\n                <div id=\"userProfileLeft\">\n                  <img\n                    className=\"ProfilePic\"\n                    id=\"userProfileIcon\"\n                    alt=\"profileicon\"\n                    src=\"https://3.bp.blogspot.com/-qDc5kIFIhb8/UoJEpGN9DmI/AAAAAAABl1s/BfP6FcBY1R8/s1600/BlueHead.jpg\"\n                  ></img>\n                </div>\n                <div id=\"userProfileRight\">\n                  <label id=\"infolabel\">\n                    First Name:\n                    <input\n                      type=\"text\"\n                      className=\"infodisplay\"\n                      placeholder={USERS[uid].firstName}\n                      disabled\n                    ></input>\n                  </label>\n                  <label id=\"infolabel\">\n                    Last Name:\n                    <input\n                      type=\"text\"\n                      className=\"infodisplay\"\n                      placeholder={USERS[uid].lastName}\n                      disabled\n                    ></input>\n                  </label>\n                  <label id=\"infolabel\">\n                    Sex:\n                    <input\n                      type=\"text\"\n                      className=\"infodisplay\"\n                      placeholder={USERS[uid].sex}\n                      disabled\n                    ></input>\n                  </label>\n                  <label id=\"infolabel\">\n                    E-mail:\n                    <input\n                      type=\"text\"\n                      className=\"infodisplay Email\"\n                      placeholder={USERS[uid].email}\n                      disabled\n                    ></input>\n                  </label>\n                </div>\n              </div>\n              <NavLink to=\"/manage-users\">\n                <button className=\"primary-btn\" id=\"goBackButton\">\n                  Back\n                </button>\n              </NavLink>\n            </fieldset>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Notification from '../General/Notification';\nimport UserSettings from '../UserSettings';\n// User Components\nimport SideBar from '../SideBar';\nimport Overview from '../Overview';\nimport LogWeight from '../LogPages/LogWeight';\nimport LogWater from '../LogPages/LogWater';\nimport LogCalories from '../LogPages/LogCalories';\nimport LogMood from '../LogPages/LogMood';\nimport LogSleep from '../LogPages/LogSleep';\nimport LogStress from '../LogPages/LogStress';\nimport LogSick from '../LogPages/LogSick';\nimport Trends from '../Trends';\nimport Reminders from '../Reminders';\nimport AddReminder from '../Reminders/AddReminder';\nimport Calendar from '../Calendar';\nimport CheckIn from '../CheckIn';\n// Admin Components\nimport AdminCheckIn from '../AdminCheckIn';\nimport AddLocation from '../AddLocation';\nimport AdminTrends from '../Trends/adminTrend.js';\nimport ManageUser from '../ManageUser';\nimport UserProfile from '../UserProfile';\nimport './styles.css';\nimport { getNumNotifs } from '../../actions/notification';\nimport { NOTIFICATION_TYPE } from '../../constants';\n\nclass HomePage extends Component {\n  state = {\n    user: this.props.activeUser,\n    userDB: this.props.userDB,\n    check: false,\n    count: getNumNotifs(this.props.activeUser?.notifications),\n  };\n\n  render() {\n    return (\n      <div id=\"HomeWrapper\">\n        <div id=\"NavBarWrapper\">\n          <SideBar\n            reminderCount={getNumNotifs(\n              this.props.activeUser?.notifications,\n              NOTIFICATION_TYPE.reminder,\n            )}\n            alertCount={getNumNotifs(this.props.activeUser?.notifications, NOTIFICATION_TYPE.alert)}\n            logoutHandler={this.props.logoutHandler}\n            activeUser={this.state.user}\n          />\n        </div>\n        <div id=\"HomeContentWrapper\">\n          <div id=\"NotificationWrapper\">\n            {this.state.user?.notifications?.map((notification) => {\n              return (\n                <Notification\n                  key={notification.id}\n                  notification={notification}\n                  removeNotificationHandler={this.props.removeNotificationHandler}\n                />\n              );\n            })}\n          </div>\n\n          {/* Similar to a switch statement - shows the component depending on the URL path */}\n          {/* Each Route below shows a different component depending on the exact path in the URL  */}\n          <Switch>\n            {/* Page nav */}\n            <Route\n              exact\n              path=\"/settings\"\n              render={() => (\n                <UserSettings\n                  activeUser={this.props.activeUser}\n                  saveUserInfoHandler={this.props.saveUserInfoHandler}\n                />\n              )}\n            />\n            <Route exact path=\"/overview\" render={() => <Overview />} />\n            <Route exact path=\"/trends\" render={() => <Trends activeUser={this.state.user} />} />\n            <Route\n              exact\n              path=\"/reminders\"\n              render={() => (\n                <Reminders\n                  activeUser={this.props.activeUser}\n                  notifyAboutReminder={this.props.notifyAboutReminder}\n                  addTimerHandler={this.props.addTimerHandler}\n                  completeReminderHandler={this.props.completeReminderHandler}\n                  deleteReminderHandler={this.props.deleteReminderHandler}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/calendar\"\n              render={() => <Calendar activeUser={this.state.user} />}\n            />\n            <Route\n              exact\n              path=\"/check-in\"\n              render={() => (\n                <CheckIn\n                  activeUser={this.state.user}\n                  checkInHandler={this.props.checkInHandler}\n                  checkoutHandler={this.props.checkoutHandler}\n                  locations={this.props.locations}\n                />\n              )}\n            />\n            {/*Admin views*/}\n            <Route\n              exact\n              path=\"/trends/admin\"\n              render={() => <AdminTrends activeUser={this.state.user} userDB={this.state.userDB} />}\n            />\n            {/* Activity logging view nav */}\n            <Route exact path=\"/overview/logWeight\" render={() => <LogWeight />} />\n            <Route exact path=\"/overview/logWater\" render={() => <LogWater />} />\n            <Route exact path=\"/overview/logCalories\" render={() => <LogCalories />} />\n            <Route exact path=\"/overview/logMood\" render={() => <LogMood />} />\n            <Route exact path=\"/overview/logSleep\" render={() => <LogSleep />} />\n            <Route exact path=\"/overview/logStress\" render={() => <LogStress />} />\n            <Route exact path=\"/overview/logSick\" render={() => <LogSick />} />\n            {/* Add Reminder view */}\n            <Route\n              exact\n              path=\"/reminders/add/:cat?/:sub?/:name?/:time?/:note?/:id?\"\n              render={(props) => (\n                <AddReminder\n                  activeUser={this.props.activeUser}\n                  addReminderHandler={this.props.addReminderHandler}\n                  editReminderHandler={this.props.editReminderHandler}\n                  {...props}\n                />\n              )}\n            />\n            {/* Admin views */}\n            <Route\n              path=\"/alert-system/add/:name?/:addr?/:img?/:maxOcc?/:desc?\"\n              render={(props) => (\n                <AddLocation\n                  editLocationHandler={this.props.editLocationHandler}\n                  addLocationHandler={this.props.addLocationHandler}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/alert-system\"\n              render={() => (\n                <AdminCheckIn\n                  activeUser={this.props.activeUser}\n                  deleteLocationHandler={this.props.deleteLocationHandler}\n                  sendAlertHandler={this.props.sendAlertHandler}\n                  locations={this.props.locations}\n                />\n              )}\n            />\n            <Route exact path=\"/manage-users\" render={() => <ManageUser />} />\n            <Route exact path=\"/user-profile/:id?\" render={(props) => <UserProfile {...props} />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","'use-strict';\n\nconst log = console.log;\n\nexport const saveUserInfoHandler = (ctx, setCtx) => {\n  log('Upating user info...');\n  if (_UserInputValidate(setCtx)) {\n    _saveUserInfo(ctx, setCtx);\n    setCtx.setState(\n      {\n        newInfoSet: true,\n      },\n      () => {\n        log('Successfully saved user info', ctx.state.activeUser);\n      },\n    );\n  } else {\n    log('Unsuccessful in saving user info');\n  }\n};\n\nconst _saveUserInfo = (ctx, setCtx) => {\n  const user = ctx.state.activeUser;\n  user.firstName = setCtx.state.first;\n  user.lastName = setCtx.state.last;\n  user.email = setCtx.state.email;\n  user.password = setCtx.state.pass;\n  user.sex = setCtx.state.sex;\n  ctx.setState({\n    activeUser: user,\n  });\n};\n\nconst _UserInputValidate = (setCtx) => {\n  log('Validating reminder inputs...');\n  const isFirstValid = _isInvalid(setCtx.state.first);\n  const isLastValid = _isInvalid(setCtx.state.last);\n  const isEmailValid = _isInvalid(setCtx.state.email);\n  const isPassValid = _isInvalid(setCtx.state.pass);\n  const isSexValid = _isInvalid(setCtx.state.sex);\n\n  setCtx.setState({\n    isFirstValid: isFirstValid,\n    isLastValid: isLastValid,\n    isEmailValid: isEmailValid,\n    isPassValid: isPassValid,\n    isSexValid: isSexValid,\n  });\n\n  return isFirstValid && isLastValid && isEmailValid && isPassValid && isSexValid;\n};\n\nconst _isInvalid = (value) => {\n  return value !== null && value !== undefined && value !== '' && value !== 'select';\n};\n","'use-strict';\nimport { NOTIFICATION_TYPE, USER_ACCOUNT_TYPE } from '../constants';\nimport { Notification } from './notification';\nimport { AppLocation } from './checkIn';\n\nconst log = console.log;\n\nexport const sendAlertHandler = (ctx, location) => {\n  log('Alerting users...');\n  const users = ctx.state.userDB;\n  for (let key in users) {\n    let user = users[key];\n    if (user.type === USER_ACCOUNT_TYPE && _wasUserCheckedIn(user, location)) {\n      let notif = new Notification(\n        NOTIFICATION_TYPE.alert,\n        `You Have Recently Visted ${location.name} Which Has Had A COVID Case`,\n        `A covid case has been reported at ${location.name}`,\n      );\n      user.notifications.push(notif);\n      users[key] = user;\n    }\n  }\n\n  ctx.setState(\n    {\n      userDB: users,\n    },\n    () => {\n      log('Successfully alerted users ', ctx.state.userDB);\n    },\n  );\n};\n\nconst _wasUserCheckedIn = (user, location) => {\n  const locs = user.checkInHistory;\n  let i;\n  for (i = 0; i < locs?.length; i++) {\n    if (locs[i]?.location.id === location.id) {\n      console.log('was true');\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const deleteLocationHandler = (ctx, adCtx, location) => {\n  log('Deleting location...');\n  const locs = ctx.state.locationsDB;\n  const key = location.id;\n  delete locs[key];\n  ctx.setState(\n    {\n      locationsDB: locs,\n    },\n    () => {\n      log('Successfully deleted location', ctx.state.locationsDB);\n    },\n  );\n\n  adCtx.setState({\n    locationViewed: undefined,\n  });\n};\n\nexport const addLocationHandler = (ctx, addLocCtx) => {\n  log('Adding new location...');\n  if (_locationInputValidate(addLocCtx)) {\n    const locDB = ctx.state.locationsDB;\n    const { locationName, address, imageUrl, maxOccupancy, description } = addLocCtx.state;\n    const newLoc = new AppLocation(locationName, maxOccupancy, address, description, imageUrl);\n    locDB[newLoc.id] = newLoc;\n    ctx.setState(\n      {\n        locationsDB: locDB,\n      },\n      () => {\n        log('Successfully added new location to DB', ctx.state.locationsDB);\n      },\n    );\n    addLocCtx.setState({\n      newLocationAdded: true,\n    });\n  } else {\n    log('Unuccessful in adding new location to DB');\n  }\n};\n\nexport const editLocationHandler = (ctx, locCtx) => {\n  log('Editing location...');\n  if (_locationInputValidate(locCtx)) {\n    _editLocation(ctx, locCtx);\n    locCtx.setState(\n      {\n        newLocationAdded: true,\n      },\n      () => {\n        log('Successfully editted location', ctx.state.locationsDB);\n      },\n    );\n  } else {\n    log('Unsuccessful in editing location');\n  }\n};\n\nconst _editLocation = (appCtx, locCtx) => {\n  const locs = appCtx.state.locationsDB;\n  const loc = locs[locCtx.state.locationName];\n  loc.name = locCtx.state.locationName;\n  loc.address = locCtx.state.address;\n  loc.imageUrl = locCtx.state.imageUrl;\n  loc.maxOccupancy = locCtx.state.maxOccupancy;\n  loc.description = locCtx.state.description;\n  locs[loc.name] = loc;\n  appCtx.setState({\n    locationsDB: locs,\n  });\n};\n\nconst _locationInputValidate = (locCtx) => {\n  log('Validating reminder inputs...');\n  const isNameValid = _isInvalid(locCtx.state.locationName);\n  const isAddressValid = _isInvalid(locCtx.state.address);\n  const isImageUrlValid = _isInvalid(locCtx.state.imageUrl);\n  const isMaxOccValid = _isInvalid(locCtx.state.maxOccupancy);\n  const isDescValid = _isInvalid(locCtx.state.description);\n\n  locCtx.setState({\n    isNameValid: isNameValid,\n    isAddressValid: isAddressValid,\n    isImageUrlValid: isImageUrlValid,\n    isMaxOccValid: isMaxOccValid,\n    isDescValid: isDescValid,\n  });\n\n  return isNameValid && isAddressValid && isImageUrlValid && isMaxOccValid && isDescValid;\n};\n\nconst _isInvalid = (value) => {\n  return (\n    value !== null &&\n    value !== undefined &&\n    value !== '' &&\n    value !== 'select' &&\n    value !== 'undefined'\n  );\n};\n","const log = console.log;\nexport const logoutUser = (ctx) => {\n  log('Logging out user and saving details...');\n  const users = ctx.state.userDB;\n  const activeUser = ctx.state.activeUser;\n  users[activeUser.hash] = activeUser;\n  ctx.setState(\n    {\n      activeUser: null,\n      userDB: users,\n    },\n    () => {\n      log(`User ${ctx.state.activeUser === null ? 'successfully' : 'unsuccessfully'} logged out`);\n    },\n  );\n};\n","import { REMINDER_STATUS, NOTIFICATION_TYPE, ADMIN_ACCOUNT_TYPE } from '../constants';\nimport { addNotificationHandler } from './notification';\n\nconst log = console.log;\n\nexport const addReminderHandler = (appCtx, reminderCtx) => {\n  log('Adding new reminder...');\n  const isInputValid = _reminderInputValidate(appCtx, reminderCtx);\n  log('Input validity status: ' + isInputValid);\n  if (isInputValid) {\n    _addReminder(appCtx, reminderCtx);\n    reminderCtx.setState({\n      newReminderAdded: true,\n    });\n    log(`Successfully added new reminder '${reminderCtx.state.reminderName}'`);\n  } else {\n    log('Unsuccessfully in adding reminder');\n  }\n};\n\nconst _addReminder = (appCtx, reminderCtx) => {\n  const user = appCtx.state.activeUser;\n  const { category, subCategory, reminderName, reminderTime, reminderNote } = reminderCtx.state;\n  const newReminder = new Reminder(category, subCategory, reminderName, reminderTime, reminderNote);\n  user.reminders[reminderCtx.state.category].push(newReminder);\n  appCtx.setState({\n    activeUser: user,\n  });\n};\n\nconst _reminderInputValidate = (appCtx, reminderCtx) => {\n  log('Validating reminder inputs...');\n  const isCategoryValid = _isInvalid(reminderCtx.state.category);\n  const isSubCategoryValid =\n    appCtx.state.activeUser.type === ADMIN_ACCOUNT_TYPE\n      ? true\n      : _isInvalid(reminderCtx.state.subCategory);\n  const isNameValid = _isInvalid(reminderCtx.state.reminderName);\n  const isDateTimeValid = _isInvalid(reminderCtx.state.reminderTime);\n  reminderCtx.setState({\n    isCategoryValid: isCategoryValid,\n    isSubCategoryValid: isSubCategoryValid,\n    isNameValid: isNameValid,\n    isDateTimeValid: isDateTimeValid,\n  });\n\n  return isCategoryValid && isSubCategoryValid && isNameValid && isDateTimeValid;\n};\n\nconst _isInvalid = (value) => {\n  return value !== null && value !== undefined && value !== '' && value !== 'select';\n};\n\nexport const editReminderHandler = (appCtx, reminderCtx, category, id) => {\n  log('Editing reminder...');\n  const isInputValid = _reminderInputValidate(appCtx, reminderCtx);\n  if (isInputValid) {\n    _editReminder(appCtx, reminderCtx, category, id);\n    reminderCtx.setState({\n      newReminderAdded: true,\n    });\n    log('Successfully editted reminder');\n  } else {\n    log('Unsuccessfully editing reminder');\n  }\n};\n\nconst _editReminder = (appCtx, reminderCtx, category, id) => {\n  const user = appCtx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminder = user.reminders[category][index];\n  reminder.category = reminderCtx.state.category;\n  reminder.subCategory = reminderCtx.state.subCategory;\n  reminder.name = reminderCtx.state.reminderName;\n  reminder.time = reminderCtx.state.reminderTime;\n  reminder.note = reminderCtx.state.reminderNote;\n  user.reminders[category][index] = reminder;\n  appCtx.setState({\n    activeUser: user,\n  });\n};\n\nexport const completeReminderHandler = (ctx, category, id, timeout) => {\n  log('Updating status of reminder to completed...');\n  setReminderStatus(ctx, category, id, REMINDER_STATUS.completed);\n  clearTimeout(timeout);\n  log('Successfully completed reminder');\n};\n\nexport const deleteReminderHandler = (ctx, category, id, timeout) => {\n  log('Removing reminder...');\n  const user = ctx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminders = user.reminders[category];\n  reminders.splice(index, 1);\n  user.reminders[category] = reminders;\n  ctx.setState({\n    activeUser: user,\n  });\n  clearTimeout(timeout);\n  log('Successfully removed reminder');\n};\n\nexport const setReminderStatus = (ctx, category, id, status) => {\n  const user = ctx.state.activeUser;\n  const index = _getReminderIndex(user.reminders[category], id);\n  const reminder = user.reminders[category][index];\n  reminder.status = status;\n  user.reminders[category][id] = reminder;\n  ctx.setState({\n    activeUser: user,\n  });\n};\n\nexport const notifyAboutReminder = (ctx, reminder) => {\n  setReminderStatus(ctx, reminder.category, reminder.id, REMINDER_STATUS.overdue);\n  addNotificationHandler(ctx, NOTIFICATION_TYPE.reminder, reminder.name, reminder.note);\n};\n\nconst _getReminderIndex = (list, id) => {\n  let i;\n  for (i = 0; i < list?.length; i++) {\n    if (list[i].id === id) {\n      return i;\n    }\n  }\n};\n\nexport class Reminder {\n  constructor(category, subCategory, name, time, note) {\n    this.category = category;\n    this.subCategory = subCategory;\n    this.name = name;\n    this.time = time;\n    this.note = note;\n    this.id = this._generateId();\n    this.status = REMINDER_STATUS.active;\n  }\n\n  _generateId = () => {\n    return 'r' + Math.random().toString(36).substr(3, 8);\n  };\n}\n","import React, { Component } from 'react';\nimport { Redirect, Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport LandingPage from './js/components/LandingPage';\nimport HomePage from './js/components/HomePage';\n\nimport { saveUserInfoHandler } from './js/actions/settings';\nimport {\n  sendAlertHandler,\n  addLocationHandler,\n  deleteLocationHandler,\n  editLocationHandler,\n} from './js/actions/adminCheckIn';\nimport { addUserHandler } from './js/actions/signUp';\nimport { setActiveUser } from './js/actions/login';\nimport { logoutUser } from './js/actions/logout';\nimport { removeNotificationHandler, addTimerHandler } from './js/actions/notification';\nimport { checkInHandler, checkoutHandler } from './js/actions/checkIn';\nimport {\n  addReminderHandler,\n  editReminderHandler,\n  completeReminderHandler,\n  deleteReminderHandler,\n  notifyAboutReminder,\n} from './js/actions/reminders';\nimport {\n  USERS,\n  PAGE_ADDRESS,\n  LOCATIONS,\n  USER_ACCOUNT_TYPE,\n  ADMIN_ACCOUNT_TYPE,\n} from './js/constants';\nimport './App.css';\n\nclass App extends Component {\n  // TODO: fix prop drilling for active user\n  state = {\n    activeUser: null,\n    locationsDB: LOCATIONS,\n    userDB: USERS,\n  };\n\n  checkLoginState = () => {\n    if (this.state.activeUser === null) {\n      return <Redirect to=\"/signup\" />;\n    }\n\n    if (\n      window.location.pathname === '/signup' &&\n      this.state.activeUser.type === USER_ACCOUNT_TYPE\n    ) {\n      return <Redirect to=\"/overview\" />;\n    }\n\n    if (\n      window.location.pathname === '/signup' &&\n      this.state.activeUser.type === ADMIN_ACCOUNT_TYPE\n    ) {\n      return <Redirect to=\"/manage-users\" />;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          {this.checkLoginState()}\n          <Switch>\n            {' '}\n            {/* Similar to a switch statement - shows the component depending on the URL path */}\n            {/* Each Route below shows a different component depending on the exact path in the URL  */}\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => (\n                <LandingPage\n                  activeUser={this.state.activeUser}\n                  users={this.state.userDB}\n                  addUserHandler={(newUser) => {\n                    addUserHandler(this, newUser);\n                  }}\n                  setActiveUserHandler={(user) => {\n                    setActiveUser(this, user);\n                  }}\n                />\n              )}\n            />\n            <Route\n              exact\n              path={PAGE_ADDRESS}\n              render={() => (\n                <div>\n                  <HomePage\n                    logoutHandler={() => {\n                      logoutUser(this);\n                    }}\n                    saveUserInfoHandler={(setCtx) => {\n                      saveUserInfoHandler(this, setCtx);\n                    }}\n                    removeNotificationHandler={(id) => {\n                      removeNotificationHandler(this, id);\n                    }}\n                    addTimerHandler={(id, timer) => {\n                      addTimerHandler(this, id, timer);\n                    }}\n                    checkInHandler={(location) => {\n                      checkInHandler(this, location);\n                    }}\n                    checkoutHandler={() => {\n                      checkoutHandler(this);\n                    }}\n                    addReminderHandler={(reminderCtx) => {\n                      addReminderHandler(this, reminderCtx);\n                    }}\n                    editReminderHandler={(reminderCtx, category, id) => {\n                      editReminderHandler(this, reminderCtx, category, id);\n                    }}\n                    notifyAboutReminder={(reminder) => {\n                      notifyAboutReminder(this, reminder);\n                    }}\n                    completeReminderHandler={(category, id, timeout) => {\n                      completeReminderHandler(this, category, id, timeout);\n                    }}\n                    deleteReminderHandler={(category, id, timeout) => {\n                      deleteReminderHandler(this, category, id, timeout);\n                    }}\n                    sendAlertHandler={(location) => {\n                      sendAlertHandler(this, location);\n                    }}\n                    addLocationHandler={(location) => {\n                      addLocationHandler(this, location);\n                    }}\n                    deleteLocationHandler={(adCtx, location) => {\n                      deleteLocationHandler(this, adCtx, location);\n                    }}\n                    editLocationHandler={(locCtx) => {\n                      editLocationHandler(this, locCtx);\n                    }}\n                    activeUser={this.state.activeUser}\n                    userDB={this.state.userDB}\n                    locations={this.state.locationsDB}\n                  />\n                </div>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}